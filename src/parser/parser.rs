// Original file: "Parser.hs"
// File auto-generated using Corollary.

#[macro_use] use corollary_support::*;
#[macro_use] use matches;
use std::boxed::FnBox;
use std::rc::Rc;

use parser_c_macro::refute;

// fn(A, B) -> fn(C) -> {eval fn(A, B, C)}
#[allow(unused_macros)]
macro_rules! partial_1 {
    ($inner: expr) => ( box $inner );
    ($inner: expr, $($arg: expr),+ ) => ( box move |_0| { $inner($($arg),+ , _0) } )
}
#[allow(unused_macros)]
macro_rules! partial_2 { ($inner: expr, $($arg: expr),+ ) => ( box move |_0, _1| { $inner($($arg),+ , _0, _1) } ) }
#[allow(unused_macros)]
macro_rules! partial_3 { ($inner: expr, $($arg: expr),+ ) => ( box move |_0, _1, _2| { $inner($($arg),+ , _0, _1, _2) } ) }
#[allow(unused_macros)]
macro_rules! partial_4 { ($inner: expr, $($arg: expr),+ ) => ( box move |_0, _1, _2, _3| { $inner($($arg),+ , _0, _1, _2, _3) } ) }
#[allow(unused_macros)]
macro_rules! partial_5 { ($inner: expr, $($arg: expr),+ ) => ( box move |_0, _1, _2, _3, _4| { $inner($($arg),+ , _0, _1, _2, _3, _4) } ) }
#[allow(unused_macros)]
macro_rules! partial_6 { ($inner: expr, $($arg: expr),+ ) => ( box move |_0, _1, _2, _3, _4, _5| { $inner($($arg),+ , _0, _1, _2, _3, _4, _5) } ) }
#[allow(unused_macros)]
macro_rules! partial_7 { ($inner: expr, $($arg: expr),+ ) => ( box move |_0, _1, _2, _3, _4, _5, _6| { $inner($($arg),+ , _0, _1, _2, _3, _4, _5, _6) } ) }
#[allow(unused_macros)]
macro_rules! partial_8 { ($inner: expr, $($arg: expr),+ ) => ( box move |_0, _1, _2, _3, _4, _5, _6, _7| { $inner($($arg),+ , _0, _1, _2, _3, _4, _5, _6, _7) } ) }
#[allow(unused_macros)]
macro_rules! partial_9 { ($inner: expr, $($arg: expr),+ ) => ( box move |_0, _1, _2, _3, _4, _5, _6, _7, _8| { $inner($($arg),+ , _0, _1, _2, _3, _4, _5, _6, _7, _8) } ) }

#[allow(unused_macros)]
macro_rules! curry_1_5 { ($inner: expr) => ( box move |_0, _1, _2, _3, _4, _5| { ($inner(_0))(_1, _2, _3, _4, _5) }; ) }
#[allow(unused_macros)]
macro_rules! curry_5_1 { ($inner: expr) => ( box move |_0, _1, _2, _3, _4, _5| { ($inner(_0, _1, _2, _3, _4))(_5) }; ) }

#[allow(unused_macros)]
macro_rules! apply_5_1 { ($inner: expr) => ( box move |_0, _1, _2, _3, _4| { box move |_5| { $inner(_0, _1, _2, _3, _4, _5) } } ) }


#[allow(unused_macros)]
macro_rules! apply_5_1_clone { ($inner: expr) => ( box move |_0, _1, _2, _3, _4| {
    let a_ = $inner.clone();
    box move |_5| { a_(_0, _1, _2.clone(), _3.clone(), _4.clone(), _5) } } ) }



macro_rules! clones {
    ( $($value: ident),* ) => {
        $( let $value = $value.clone(); )*
    }
}

// NOTE: These imports are advisory. You probably need to change them to support Rust.
// use Control::Monad;
// use mplus;
// use Data::List;
// use Language::C::Parser::Builtin;
// use builtinTypeNames;
// use Language::C::Parser::Lexer;
// use lexC;
// use Language::C::Parser::ParserMonad;
// use P;
// use Language::C::Parser::Tokens;
// use CToken;
// use Prelude;
// use Control::Applicative;
// use Applicative;
// use Control::Monad;
// use ap;
// use Language::C::Data::Ident;
// use Language::C::Data::InputStream;
// use Language::C::Data::Name;
// use Language::C::Data::Node;
// use Language::C::Data::Position;
// use Language::C::Data::RList;
// use Language::C::Syntax;

#[derive(Clone)]
pub enum HappyAbsSyn {
    HappyTerminal(CToken),
    HappyErrorToken(isize),
    HappyAbsSyn7(CTranslationUnit<NodeInfo>),
    HappyAbsSyn8(Reversed<Vec<CExtDecl>>),
    HappyAbsSyn9(CExtDecl),
    HappyAbsSyn10(CFunctionDef<NodeInfo>),
    HappyAbsSyn11(CDeclarator<NodeInfo>),
    HappyAbsSyn12(CStat),
    HappyAbsSyn15(()),
    HappyAbsSyn17(Reversed<Vec<CBlockItem>>),
    HappyAbsSyn18(CBlockItem),
    HappyAbsSyn21(Reversed<Vec<Ident>>),
    HappyAbsSyn26(CAssemblyStatement<NodeInfo>),
    HappyAbsSyn27(Option<CTypeQual>),
    HappyAbsSyn28(Vec<CAssemblyOperand<NodeInfo>>),
    HappyAbsSyn29(Reversed<Vec<CAssemblyOperand<NodeInfo>>>),
    HappyAbsSyn30(CAssemblyOperand<NodeInfo>),
    HappyAbsSyn31(Reversed<Vec<CStringLiteral<NodeInfo>>>),
    HappyAbsSyn32(CDecl),
    HappyAbsSyn33(Reversed<Vec<CDecl>>),
    HappyAbsSyn35((Option<CStringLiteral<NodeInfo>>, Vec<CAttribute<NodeInfo>>)),
    HappyAbsSyn37(Vec<CDeclSpec>),
    HappyAbsSyn38(Reversed<Vec<CDeclSpec>>),
    HappyAbsSyn39(CDeclSpec),
    HappyAbsSyn41(CStorageSpec),
    HappyAbsSyn42(CFunSpec),
    HappyAbsSyn43(CAlignSpec),
    HappyAbsSyn45(CTypeSpec),
    HappyAbsSyn53(CStructUnion),
    HappyAbsSyn54(Located<CStructTag>),
    HappyAbsSyn59((Option<CDeclarator<NodeInfo>>, Option<CExpr>)),
    HappyAbsSyn61(CEnumeration<NodeInfo>),
    HappyAbsSyn62(Reversed<Vec<(Ident, Option<CExpr>)>>),
    HappyAbsSyn63((Ident, Option<CExpr>)),
    HappyAbsSyn64(CTypeQual),
    HappyAbsSyn65(Reversed<Vec<CTypeQual>>),
    HappyAbsSyn66(CDeclrR),
    HappyAbsSyn67(Option<CStringLiteral<NodeInfo>>),
    HappyAbsSyn82((Vec<CDecl>, bool)),
    HappyAbsSyn88(Rc<Box<Fn(CDeclrR) -> CDeclrR>>),
    HappyAbsSyn93(CInit),
    HappyAbsSyn94(Option<CInit>),
    HappyAbsSyn95(Reversed<CInitList>),
    HappyAbsSyn96(Vec<CDesignator>),
    HappyAbsSyn97(Reversed<Vec<CDesignator>>),
    HappyAbsSyn98(CDesignator),
    HappyAbsSyn100(CExpr),
    HappyAbsSyn101(Reversed<Vec<(Option<CDecl>, CExpr)>>),
    HappyAbsSyn102((Option<CDecl>, CExpr)),
    HappyAbsSyn105(Reversed<Vec<CExpr>>),
    HappyAbsSyn107(Located<CUnaryOp>),
    HappyAbsSyn121(Located<CAssignOp>),
    HappyAbsSyn124(Option<CExpr>),
    HappyAbsSyn127(CConst),
    HappyAbsSyn128(CStringLiteral<NodeInfo>),
    HappyAbsSyn129(Reversed<Vec<CString>>),
    HappyAbsSyn130(ClangCVersion),
    HappyAbsSyn131(Ident),
    HappyAbsSyn132(Vec<CAttribute<NodeInfo>>),
    HappyAbsSyn135(Reversed<Vec<CAttribute<NodeInfo>>>),
    HappyAbsSyn136(Option<CAttribute<NodeInfo>>)
}
pub use self::HappyAbsSyn::*;

pub fn action_0(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        7 => {
            partial_5!(happyGoto, curry_1_5!(action_144))
        },
        8 => {
            partial_5!(happyGoto, curry_1_5!(action_5))
        },
        _ => {
            (happyReduce_5)()
        },
    }
}

pub fn action_1(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_111))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_112))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_114))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_143))
        },
        9 => {
            partial_5!(happyGoto, curry_1_5!(action_76))
        },
        10 => {
            partial_5!(happyGoto, curry_1_5!(action_77))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_78))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_79))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_82))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_83))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_88))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_100))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_101))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        79 => {
            partial_5!(happyGoto, curry_1_5!(action_105))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_106))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_109))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_2(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_50))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_3(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_23))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_4(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        8 => {
            partial_5!(happyGoto, curry_1_5!(action_5))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_5(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_111))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_112))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_334))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_114))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_143))
        },
        247 => {
            (happyReduce_4)()
        },
        9 => {
            partial_5!(happyGoto, curry_1_5!(action_333))
        },
        10 => {
            partial_5!(happyGoto, curry_1_5!(action_77))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_78))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_79))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_82))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_83))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_88))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_100))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_101))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        79 => {
            partial_5!(happyGoto, curry_1_5!(action_105))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_106))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_109))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_6(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_376)()
}

pub fn action_7(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_327))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_328))
        },
        142 => {
            partial_5!(happyShift, curry_1_5!(action_329))
        },
        143 => {
            partial_5!(happyShift, curry_1_5!(action_330))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_331))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_332))
        },
        _ => {
            (happyReduce_388)()
        },
    }
}

pub fn action_8(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_316))
        },
        169 => {
            partial_5!(happyShift, curry_1_5!(action_317))
        },
        170 => {
            partial_5!(happyShift, curry_1_5!(action_318))
        },
        171 => {
            partial_5!(happyShift, curry_1_5!(action_319))
        },
        172 => {
            partial_5!(happyShift, curry_1_5!(action_320))
        },
        173 => {
            partial_5!(happyShift, curry_1_5!(action_321))
        },
        174 => {
            partial_5!(happyShift, curry_1_5!(action_322))
        },
        175 => {
            partial_5!(happyShift, curry_1_5!(action_323))
        },
        176 => {
            partial_5!(happyShift, curry_1_5!(action_324))
        },
        177 => {
            partial_5!(happyShift, curry_1_5!(action_325))
        },
        178 => {
            partial_5!(happyShift, curry_1_5!(action_326))
        },
        121 => {
            partial_5!(happyGoto, curry_1_5!(action_315))
        },
        _ => {
            (happyReduce_406)()
        },
    }
}

pub fn action_9(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_314))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_10(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_408)()
}

pub fn action_11(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        150 => {
            partial_5!(happyShift, curry_1_5!(action_311))
        },
        151 => {
            partial_5!(happyShift, curry_1_5!(action_312))
        },
        152 => {
            partial_5!(happyShift, curry_1_5!(action_313))
        },
        _ => {
            (happyReduce_412)()
        },
    }
}

pub fn action_12(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        148 => {
            partial_5!(happyShift, curry_1_5!(action_309))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_310))
        },
        _ => {
            (happyReduce_415)()
        },
    }
}

pub fn action_13(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        154 => {
            partial_5!(happyShift, curry_1_5!(action_307))
        },
        155 => {
            partial_5!(happyShift, curry_1_5!(action_308))
        },
        _ => {
            (happyReduce_418)()
        },
    }
}

pub fn action_14(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        156 => {
            partial_5!(happyShift, curry_1_5!(action_303))
        },
        157 => {
            partial_5!(happyShift, curry_1_5!(action_304))
        },
        158 => {
            partial_5!(happyShift, curry_1_5!(action_305))
        },
        159 => {
            partial_5!(happyShift, curry_1_5!(action_306))
        },
        _ => {
            (happyReduce_423)()
        },
    }
}

pub fn action_15(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        160 => {
            partial_5!(happyShift, curry_1_5!(action_301))
        },
        161 => {
            partial_5!(happyShift, curry_1_5!(action_302))
        },
        _ => {
            (happyReduce_426)()
        },
    }
}

pub fn action_16(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        153 => {
            partial_5!(happyShift, curry_1_5!(action_300))
        },
        _ => {
            (happyReduce_428)()
        },
    }
}

pub fn action_17(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        162 => {
            partial_5!(happyShift, curry_1_5!(action_299))
        },
        _ => {
            (happyReduce_430)()
        },
    }
}

pub fn action_18(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        163 => {
            partial_5!(happyShift, curry_1_5!(action_298))
        },
        _ => {
            (happyReduce_432)()
        },
    }
}

pub fn action_19(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        164 => {
            partial_5!(happyShift, curry_1_5!(action_297))
        },
        _ => {
            (happyReduce_434)()
        },
    }
}

pub fn action_20(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        165 => {
            partial_5!(happyShift, curry_1_5!(action_295))
        },
        166 => {
            partial_5!(happyShift, curry_1_5!(action_296))
        },
        _ => {
            (happyReduce_436)()
        },
    }
}

pub fn action_21(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_439)()
}

pub fn action_22(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_294))
        },
        _ => {
            (happyReduce_452)()
        },
    }
}

pub fn action_23(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        247 => {
            box happyAccept
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_24(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_361)()
}

pub fn action_25(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_362)()
}

pub fn action_26(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_285))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_291))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_292))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_27(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_405)()
}

pub fn action_28(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_404)()
}

pub fn action_29(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_272))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_284))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_30(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_272))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_283))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_31(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_402)()
}

pub fn action_32(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_403)()
}

pub fn action_33(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_401)()
}

pub fn action_34(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_400)()
}

pub fn action_35(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_282))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_36(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_281))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_280))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_37(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_279))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_38(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_278))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_277))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_39(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_462)()
}

pub fn action_40(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_461)()
}

pub fn action_41(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_463)()
}

pub fn action_42(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        236 => {
            partial_5!(happyShift, curry_1_5!(action_276))
        },
        129 => {
            partial_5!(happyGoto, curry_1_5!(action_275))
        },
        _ => {
            (happyReduce_464)()
        },
    }
}

pub fn action_43(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_360)()
}

pub fn action_44(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_274))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_45(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_272))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_273))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_46(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_272))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_271))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_47(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_270))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_48(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_269))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_49(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_268))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_50(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        247 => {
            box happyAccept
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_51(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_27)()
}

pub fn action_52(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_28)()
}

pub fn action_53(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_29)()
}

pub fn action_54(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_30)()
}

pub fn action_55(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_31)()
}

pub fn action_56(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_32)()
}

pub fn action_57(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_33)()
}

pub fn action_58(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_267))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_59(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            partial_5!(happyShift, curry_1_5!(action_266))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_60(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_56)()
}

pub fn action_61(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        15 => {
            partial_5!(happyGoto, curry_1_5!(action_265))
        },
        _ => {
            (happyReduce_40)()
        },
    }
}

pub fn action_62(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        27 => {
            partial_5!(happyGoto, curry_1_5!(action_263))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_264))
        },
        _ => {
            (happyReduce_74)()
        },
    }
}

pub fn action_63(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_262))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_64(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_261))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_65(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_258))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_66(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            partial_5!(happyShift, curry_1_5!(action_257))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_67(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_256))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_68(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_255))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_69(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        150 => {
            partial_5!(happyShift, curry_1_5!(action_253))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_252))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_70(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_251))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_71(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_249))
        },
        124 => {
            partial_5!(happyGoto, curry_1_5!(action_250))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            (happyReduce_456)()
        },
    }
}

pub fn action_72(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_248))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_73(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_247))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_74(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            (happyReduce_469)()
        },
        _ => {
            (happyReduce_360)()
        },
    }
}

pub fn action_75(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_470)()
}

pub fn action_76(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        247 => {
            box happyAccept
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_77(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_8)()
}

pub fn action_78(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_246))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_79(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_9)()
}

pub fn action_80(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_244))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_245))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_81(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_242))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_243))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_82(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_227))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_228))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_239))
        },
        66 => {
            partial_5!(happyGoto, curry_1_5!(action_240))
        },
        68 => {
            partial_5!(happyGoto, curry_1_5!(action_219))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_220))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_223))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_225))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        79 => {
            partial_5!(happyGoto, curry_1_5!(action_241))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_106))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_83(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_111))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_112))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_237))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_238))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_230))
        },
        39 => {
            partial_5!(happyGoto, curry_1_5!(action_231))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_198))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_199))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_200))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_232))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_233))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_201))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_234))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        79 => {
            partial_5!(happyGoto, curry_1_5!(action_235))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_106))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_236))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_84(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_104)()
}

pub fn action_85(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_114)()
}

pub fn action_86(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_115)()
}

pub fn action_87(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_116)()
}

pub fn action_88(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_227))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_228))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_217))
        },
        66 => {
            partial_5!(happyGoto, curry_1_5!(action_218))
        },
        68 => {
            partial_5!(happyGoto, curry_1_5!(action_219))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_220))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_223))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_225))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        79 => {
            partial_5!(happyGoto, curry_1_5!(action_226))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_106))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_89(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_147)()
}

pub fn action_90(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        39 => {
            partial_5!(happyGoto, curry_1_5!(action_214))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_198))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_199))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_200))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_215))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_201))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_216))
        },
        _ => {
            (happyReduce_101)()
        },
    }
}

pub fn action_91(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_210))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_211))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_212))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_213))
        },
        _ => {
            (happyReduce_127)()
        },
    }
}

pub fn action_92(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_209))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        39 => {
            partial_5!(happyGoto, curry_1_5!(action_207))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_198))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_199))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_200))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_201))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_208))
        },
        _ => {
            (happyReduce_102)()
        },
    }
}

pub fn action_93(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_206))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_203))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_204))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_205))
        },
        _ => {
            (happyReduce_128)()
        },
    }
}

pub fn action_94(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        39 => {
            partial_5!(happyGoto, curry_1_5!(action_197))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_198))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_199))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_200))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_201))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_202))
        },
        _ => {
            (happyReduce_103)()
        },
    }
}

pub fn action_95(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_194))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_195))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_196))
        },
        _ => {
            (happyReduce_129)()
        },
    }
}

pub fn action_96(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_158)()
}

pub fn action_97(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_184)()
}

pub fn action_98(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_193))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_99(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_185)()
}

pub fn action_100(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_111))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_112))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_191))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_192))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_183))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_184))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_185))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_186))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_188))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        79 => {
            partial_5!(happyGoto, curry_1_5!(action_189))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_106))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_190))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_101(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_26)()
}

pub fn action_102(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_260)()
}

pub fn action_103(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_262)()
}

pub fn action_104(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_181))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_178))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_261)()
        },
    }
}

pub fn action_105(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        33 => {
            partial_5!(happyGoto, curry_1_5!(action_177))
        },
        _ => {
            (happyReduce_90)()
        },
    }
}

pub fn action_106(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_275)()
}

pub fn action_107(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_276)()
}

pub fn action_108(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_170))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_109(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_111))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_112))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_168))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_169))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_161))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_162))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_163))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_164))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_165))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        79 => {
            partial_5!(happyGoto, curry_1_5!(action_166))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_106))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_110(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_473)()
}

pub fn action_111(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_111))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_112))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_158))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_159))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_160))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_112(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_111))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_112))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_153))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_154))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_155))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_156))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_113(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_152))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_114(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_151))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_115(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_120)()
}

pub fn action_116(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_139)()
}

pub fn action_117(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_131)()
}

pub fn action_118(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_140)()
}

pub fn action_119(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_136)()
}

pub fn action_120(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_149))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_121(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_118)()
}

pub fn action_122(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_135)()
}

pub fn action_123(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_123)()
}

pub fn action_124(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_133)()
}

pub fn action_125(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_141)()
}

pub fn action_126(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_134)()
}

pub fn action_127(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_124)()
}

pub fn action_128(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_121)()
}

pub fn action_129(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_132)()
}

pub fn action_130(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_137)()
}

pub fn action_131(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_119)()
}

pub fn action_132(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_148))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_133(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_189)()
}

pub fn action_134(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_117)()
}

pub fn action_135(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_147))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_136(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_122)()
}

pub fn action_137(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_190)()
}

pub fn action_138(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_138)()
}

pub fn action_139(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_130)()
}

pub fn action_140(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_272)()
}

pub fn action_141(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_170)()
}

pub fn action_142(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_146))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_143(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_111))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_112))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_114))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_143))
        },
        9 => {
            partial_5!(happyGoto, curry_1_5!(action_145))
        },
        10 => {
            partial_5!(happyGoto, curry_1_5!(action_77))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_78))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_79))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_82))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_83))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_88))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_100))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_101))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        79 => {
            partial_5!(happyGoto, curry_1_5!(action_105))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_106))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_109))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_144(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        247 => {
            box happyAccept
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_145(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_10)()
}

pub fn action_146(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_493))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_147(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_491))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_492))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_148(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_490))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_149(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_489))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_488))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_150(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_151(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_487))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_152(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_485))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_486))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_153(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_111))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_112))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_482))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_483))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_484))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_154(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_263)()
}

pub fn action_155(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_277)()
}

pub fn action_156(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_480))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_157(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_479))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_158(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_181))
        },
        139 => {
            partial_5!(happyShift, curry_1_5!(action_478))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_178))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_159(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_477))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_160(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_473))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_474))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_161(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_472))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_162(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_105)()
}

pub fn action_163(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_148)()
}

pub fn action_164(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_159)()
}

pub fn action_165(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            (happyReduce_26)()
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_471))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_166(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        33 => {
            partial_5!(happyGoto, curry_1_5!(action_470))
        },
        _ => {
            (happyReduce_90)()
        },
    }
}

pub fn action_167(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_474)()
}

pub fn action_168(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_469))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_169(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_176)()
}

pub fn action_170(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_227)()
}

pub fn action_171(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_226)()
}

pub fn action_172(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_221)()
}

pub fn action_173(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_224)()
}

pub fn action_174(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_225)()
}

pub fn action_175(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_223)()
}

pub fn action_176(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_222)()
}

pub fn action_177(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_462))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_463))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_464))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_465))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_466))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_467))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_178(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_267)()
}

pub fn action_179(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_461))
        },
        _ => {
            (happyReduce_311)()
        },
    }
}

pub fn action_180(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_313)()
}

pub fn action_181(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            (happyReduce_471)()
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            (happyReduce_471)()
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            (happyReduce_471)()
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            (happyReduce_471)()
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_460))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_449))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_450))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_451))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_452))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_453))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_454))
        },
        82 => {
            partial_5!(happyGoto, curry_1_5!(action_455))
        },
        83 => {
            partial_5!(happyGoto, curry_1_5!(action_456))
        },
        84 => {
            partial_5!(happyGoto, curry_1_5!(action_457))
        },
        85 => {
            partial_5!(happyGoto, curry_1_5!(action_458))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_459))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_282)()
        },
    }
}

pub fn action_182(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_447))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        186 => {
            (happyReduce_471)()
        },
        193 => {
            (happyReduce_471)()
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        216 => {
            (happyReduce_471)()
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_448))
        },
        231 => {
            (happyReduce_471)()
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_443))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_444))
        },
        125 => {
            partial_5!(happyGoto, curry_1_5!(action_445))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_446))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_458)()
        },
    }
}

pub fn action_183(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_442))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_184(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_106)()
}

pub fn action_185(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_149)()
}

pub fn action_186(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_160)()
}

pub fn action_187(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_228)()
}

pub fn action_188(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            (happyReduce_26)()
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_441))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_189(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        33 => {
            partial_5!(happyGoto, curry_1_5!(action_440))
        },
        _ => {
            (happyReduce_90)()
        },
    }
}

pub fn action_190(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_111))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_112))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_438))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_439))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_431))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_432))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_433))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_434))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_436))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        79 => {
            partial_5!(happyGoto, curry_1_5!(action_437))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_106))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_191(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_430))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_192(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_173)()
}

pub fn action_193(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_429))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_428))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_194(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_164)()
}

pub fn action_195(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_182)()
}

pub fn action_196(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_183)()
}

pub fn action_197(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_168)()
}

pub fn action_198(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_110)()
}

pub fn action_199(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_112)()
}

pub fn action_200(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_113)()
}

pub fn action_201(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_111)()
}

pub fn action_202(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_169)()
}

pub fn action_203(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_155)()
}

pub fn action_204(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_162)()
}

pub fn action_205(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_163)()
}

pub fn action_206(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_86)()
}

pub fn action_207(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_156)()
}

pub fn action_208(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_157)()
}

pub fn action_209(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_85)()
}

pub fn action_210(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_143)()
}

pub fn action_211(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_152)()
}

pub fn action_212(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_151)()
}

pub fn action_213(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_153)()
}

pub fn action_214(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_144)()
}

pub fn action_215(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_145)()
}

pub fn action_216(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_146)()
}

pub fn action_217(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_427))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_218(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_426))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_219(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_231)()
}

pub fn action_220(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_235)()
}

pub fn action_221(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_238)()
}

pub fn action_222(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_239)()
}

pub fn action_223(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_234)()
}

pub fn action_224(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_248)()
}

pub fn action_225(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            (happyReduce_26)()
        },
        _ => {
            (happyReduce_230)()
        },
    }
}

pub fn action_226(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        33 => {
            partial_5!(happyGoto, curry_1_5!(action_425))
        },
        _ => {
            (happyReduce_90)()
        },
    }
}

pub fn action_227(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_423))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_228))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_424))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_420))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        74 => {
            partial_5!(happyGoto, curry_1_5!(action_421))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_158))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_159))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_422))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_228(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_418))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_228))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_414))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_415))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_416))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_154))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_155))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_417))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_229(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_412))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_236)()
        },
    }
}

pub fn action_230(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_411))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_231(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_108)()
}

pub fn action_232(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_142)()
}

pub fn action_233(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_154)()
}

pub fn action_234(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            (happyReduce_26)()
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_410))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_235(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        33 => {
            partial_5!(happyGoto, curry_1_5!(action_409))
        },
        _ => {
            (happyReduce_90)()
        },
    }
}

pub fn action_236(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_109)()
}

pub fn action_237(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_408))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_238(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_165)()
}

pub fn action_239(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_407))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_240(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_404))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_241(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        33 => {
            partial_5!(happyGoto, curry_1_5!(action_403))
        },
        _ => {
            (happyReduce_90)()
        },
    }
}

pub fn action_242(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_402))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_243(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_87)()
}

pub fn action_244(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_401))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_245(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_88)()
}

pub fn action_246(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_12)()
}

pub fn action_247(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_400))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_248(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_399))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_249(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_457)()
}

pub fn action_250(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_398))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_251(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_397))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_252(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_396))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_253(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_395))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_254(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_469)()
}

pub fn action_255(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        185 => {
            (happyReduce_40)()
        },
        186 => {
            (happyReduce_40)()
        },
        188 => {
            (happyReduce_40)()
        },
        190 => {
            (happyReduce_40)()
        },
        192 => {
            (happyReduce_40)()
        },
        193 => {
            (happyReduce_40)()
        },
        195 => {
            (happyReduce_40)()
        },
        198 => {
            (happyReduce_40)()
        },
        200 => {
            (happyReduce_40)()
        },
        201 => {
            (happyReduce_40)()
        },
        202 => {
            (happyReduce_40)()
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        207 => {
            (happyReduce_40)()
        },
        208 => {
            (happyReduce_40)()
        },
        209 => {
            (happyReduce_40)()
        },
        210 => {
            (happyReduce_40)()
        },
        212 => {
            (happyReduce_40)()
        },
        213 => {
            (happyReduce_40)()
        },
        214 => {
            (happyReduce_40)()
        },
        215 => {
            (happyReduce_40)()
        },
        216 => {
            (happyReduce_40)()
        },
        218 => {
            (happyReduce_40)()
        },
        219 => {
            (happyReduce_40)()
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        221 => {
            (happyReduce_40)()
        },
        222 => {
            (happyReduce_40)()
        },
        223 => {
            (happyReduce_40)()
        },
        225 => {
            (happyReduce_40)()
        },
        226 => {
            (happyReduce_40)()
        },
        227 => {
            (happyReduce_40)()
        },
        228 => {
            (happyReduce_40)()
        },
        229 => {
            (happyReduce_40)()
        },
        230 => {
            (happyReduce_40)()
        },
        231 => {
            (happyReduce_40)()
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            (happyReduce_40)()
        },
        239 => {
            (happyReduce_40)()
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        15 => {
            partial_5!(happyGoto, curry_1_5!(action_393))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_249))
        },
        124 => {
            partial_5!(happyGoto, curry_1_5!(action_394))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            (happyReduce_456)()
        },
    }
}

pub fn action_256(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        232 => {
            partial_5!(happyShift, curry_1_5!(action_392))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_257(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_391))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_258(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_67)()
}

pub fn action_259(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_406)()
}

pub fn action_260(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_460)()
}

pub fn action_261(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            partial_5!(happyShift, curry_1_5!(action_389))
        },
        183 => {
            partial_5!(happyShift, curry_1_5!(action_390))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_262(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_68)()
}

pub fn action_263(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_388))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_264(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_75)()
}

pub fn action_265(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        211 => {
            partial_5!(happyShift, curry_1_5!(action_387))
        },
        17 => {
            partial_5!(happyGoto, curry_1_5!(action_385))
        },
        21 => {
            partial_5!(happyGoto, curry_1_5!(action_386))
        },
        _ => {
            (happyReduce_42)()
        },
    }
}

pub fn action_266(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_384))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_267(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_57)()
}

pub fn action_268(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_383))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_269(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_382))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_270(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_381))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_271(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_398)()
}

pub fn action_272(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_285))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_380))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_292))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_273(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_397)()
}

pub fn action_274(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_391)()
}

pub fn action_275(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        236 => {
            partial_5!(happyShift, curry_1_5!(action_379))
        },
        _ => {
            (happyReduce_465)()
        },
    }
}

pub fn action_276(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_466)()
}

pub fn action_277(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_393)()
}

pub fn action_278(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_285))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_378))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_292))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_279(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_377))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_280(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_395)()
}

pub fn action_281(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_285))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_376))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_292))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_282(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_399)()
}

pub fn action_283(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_390)()
}

pub fn action_284(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_389)()
}

pub fn action_285(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_375))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_286(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_372))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_373))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_374))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        _ => {
            (happyReduce_304)()
        },
    }
}

pub fn action_287(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_211))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_212))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_213))
        },
        _ => {
            (happyReduce_127)()
        },
    }
}

pub fn action_288(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_204))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_205))
        },
        _ => {
            (happyReduce_128)()
        },
    }
}

pub fn action_289(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_195))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_196))
        },
        _ => {
            (happyReduce_129)()
        },
    }
}

pub fn action_290(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_372))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_373))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_191))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_192))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_185))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_186))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_366))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_370))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_371))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_291(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_365))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_292(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_364))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_293(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_168))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_169))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_163))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_164))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_294(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_362))
        },
        123 => {
            partial_5!(happyGoto, curry_1_5!(action_363))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_295(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_361))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_296(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        167 => {
            partial_5!(happyShift, curry_1_5!(action_360))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_359))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_297(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_358))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_298(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_357))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_299(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_356))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_300(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_355))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_301(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_354))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_302(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_353))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_303(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_352))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_304(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_351))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_305(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_350))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_306(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_349))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_307(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_348))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_308(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_347))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_309(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_346))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_310(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_345))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_311(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_344))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_312(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_343))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_313(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_342))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_314(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_392)()
}

pub fn action_315(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_341))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_316(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_441)()
}

pub fn action_317(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_445)()
}

pub fn action_318(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_446)()
}

pub fn action_319(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_442)()
}

pub fn action_320(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_443)()
}

pub fn action_321(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_444)()
}

pub fn action_322(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_449)()
}

pub fn action_323(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_450)()
}

pub fn action_324(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_451)()
}

pub fn action_325(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_447)()
}

pub fn action_326(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_448)()
}

pub fn action_327(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        139 => {
            partial_5!(happyShift, curry_1_5!(action_340))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        105 => {
            partial_5!(happyGoto, curry_1_5!(action_338))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_339))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_328(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_337))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_329(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_336))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_330(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_335))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_331(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_382)()
}

pub fn action_332(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_383)()
}

pub fn action_333(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_7)()
}

pub fn action_334(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_6)()
}

pub fn action_335(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_380)()
}

pub fn action_336(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_381)()
}

pub fn action_337(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_640))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_338(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_638))
        },
        179 => {
            partial_5!(happyShift, curry_1_5!(action_639))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_339(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_386)()
}

pub fn action_340(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_378)()
}

pub fn action_341(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_440)()
}

pub fn action_342(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_411)()
}

pub fn action_343(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_410)()
}

pub fn action_344(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_409)()
}

pub fn action_345(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        150 => {
            partial_5!(happyShift, curry_1_5!(action_311))
        },
        151 => {
            partial_5!(happyShift, curry_1_5!(action_312))
        },
        152 => {
            partial_5!(happyShift, curry_1_5!(action_313))
        },
        _ => {
            (happyReduce_414)()
        },
    }
}

pub fn action_346(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        150 => {
            partial_5!(happyShift, curry_1_5!(action_311))
        },
        151 => {
            partial_5!(happyShift, curry_1_5!(action_312))
        },
        152 => {
            partial_5!(happyShift, curry_1_5!(action_313))
        },
        _ => {
            (happyReduce_413)()
        },
    }
}

pub fn action_347(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        148 => {
            partial_5!(happyShift, curry_1_5!(action_309))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_310))
        },
        _ => {
            (happyReduce_417)()
        },
    }
}

pub fn action_348(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        148 => {
            partial_5!(happyShift, curry_1_5!(action_309))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_310))
        },
        _ => {
            (happyReduce_416)()
        },
    }
}

pub fn action_349(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        154 => {
            partial_5!(happyShift, curry_1_5!(action_307))
        },
        155 => {
            partial_5!(happyShift, curry_1_5!(action_308))
        },
        _ => {
            (happyReduce_422)()
        },
    }
}

pub fn action_350(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        154 => {
            partial_5!(happyShift, curry_1_5!(action_307))
        },
        155 => {
            partial_5!(happyShift, curry_1_5!(action_308))
        },
        _ => {
            (happyReduce_420)()
        },
    }
}

pub fn action_351(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        154 => {
            partial_5!(happyShift, curry_1_5!(action_307))
        },
        155 => {
            partial_5!(happyShift, curry_1_5!(action_308))
        },
        _ => {
            (happyReduce_421)()
        },
    }
}

pub fn action_352(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        154 => {
            partial_5!(happyShift, curry_1_5!(action_307))
        },
        155 => {
            partial_5!(happyShift, curry_1_5!(action_308))
        },
        _ => {
            (happyReduce_419)()
        },
    }
}

pub fn action_353(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        156 => {
            partial_5!(happyShift, curry_1_5!(action_303))
        },
        157 => {
            partial_5!(happyShift, curry_1_5!(action_304))
        },
        158 => {
            partial_5!(happyShift, curry_1_5!(action_305))
        },
        159 => {
            partial_5!(happyShift, curry_1_5!(action_306))
        },
        _ => {
            (happyReduce_425)()
        },
    }
}

pub fn action_354(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        156 => {
            partial_5!(happyShift, curry_1_5!(action_303))
        },
        157 => {
            partial_5!(happyShift, curry_1_5!(action_304))
        },
        158 => {
            partial_5!(happyShift, curry_1_5!(action_305))
        },
        159 => {
            partial_5!(happyShift, curry_1_5!(action_306))
        },
        _ => {
            (happyReduce_424)()
        },
    }
}

pub fn action_355(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        160 => {
            partial_5!(happyShift, curry_1_5!(action_301))
        },
        161 => {
            partial_5!(happyShift, curry_1_5!(action_302))
        },
        _ => {
            (happyReduce_427)()
        },
    }
}

pub fn action_356(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        153 => {
            partial_5!(happyShift, curry_1_5!(action_300))
        },
        _ => {
            (happyReduce_429)()
        },
    }
}

pub fn action_357(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        162 => {
            partial_5!(happyShift, curry_1_5!(action_299))
        },
        _ => {
            (happyReduce_431)()
        },
    }
}

pub fn action_358(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        163 => {
            partial_5!(happyShift, curry_1_5!(action_298))
        },
        _ => {
            (happyReduce_433)()
        },
    }
}

pub fn action_359(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            partial_5!(happyShift, curry_1_5!(action_637))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_360(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_636))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_361(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        164 => {
            partial_5!(happyShift, curry_1_5!(action_297))
        },
        _ => {
            (happyReduce_435)()
        },
    }
}

pub fn action_362(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_454)()
}

pub fn action_363(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_635))
        },
        _ => {
            (happyReduce_453)()
        },
    }
}

pub fn action_364(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_363)()
}

pub fn action_365(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_634))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_633))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_366(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_307)()
}

pub fn action_367(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_310)()
}

pub fn action_368(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_308)()
}

pub fn action_369(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_632))
        },
        _ => {
            (happyReduce_309)()
        },
    }
}

pub fn action_370(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_438))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_439))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_433))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_434))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_371(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            (happyReduce_473)()
        },
        190 => {
            (happyReduce_473)()
        },
        192 => {
            (happyReduce_473)()
        },
        193 => {
            (happyReduce_473)()
        },
        195 => {
            (happyReduce_473)()
        },
        198 => {
            (happyReduce_473)()
        },
        200 => {
            (happyReduce_473)()
        },
        202 => {
            (happyReduce_473)()
        },
        208 => {
            (happyReduce_473)()
        },
        209 => {
            (happyReduce_473)()
        },
        210 => {
            (happyReduce_473)()
        },
        213 => {
            (happyReduce_473)()
        },
        214 => {
            (happyReduce_473)()
        },
        216 => {
            (happyReduce_473)()
        },
        218 => {
            (happyReduce_473)()
        },
        219 => {
            (happyReduce_473)()
        },
        223 => {
            (happyReduce_473)()
        },
        226 => {
            (happyReduce_473)()
        },
        228 => {
            (happyReduce_473)()
        },
        229 => {
            (happyReduce_473)()
        },
        230 => {
            (happyReduce_473)()
        },
        231 => {
            (happyReduce_473)()
        },
        238 => {
            (happyReduce_473)()
        },
        239 => {
            (happyReduce_473)()
        },
        _ => {
            (happyReduce_306)()
        },
    }
}

pub fn action_372(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_372))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_373))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            (happyReduce_471)()
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            (happyReduce_471)()
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            (happyReduce_471)()
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            (happyReduce_471)()
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_449))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_450))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_451))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_452))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_453))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_454))
        },
        82 => {
            partial_5!(happyGoto, curry_1_5!(action_455))
        },
        83 => {
            partial_5!(happyGoto, curry_1_5!(action_456))
        },
        84 => {
            partial_5!(happyGoto, curry_1_5!(action_457))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_628))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_629))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_630))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_631))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_282)()
        },
    }
}

pub fn action_373(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_372))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_373))
        },
        186 => {
            (happyReduce_471)()
        },
        193 => {
            (happyReduce_471)()
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        216 => {
            (happyReduce_471)()
        },
        231 => {
            (happyReduce_471)()
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_625))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_626))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_627))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_326)()
        },
    }
}

pub fn action_374(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_305)()
}

pub fn action_375(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_365)()
}

pub fn action_376(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_624))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_377(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_623))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_378(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_622))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_379(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_467)()
}

pub fn action_380(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_621))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_381(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_620))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_382(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_619))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_383(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_618))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_384(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_617))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_385(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            (happyReduce_471)()
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            (happyReduce_471)()
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            (happyReduce_471)()
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            (happyReduce_471)()
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_615))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_616))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_605))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        16 => {
            partial_5!(happyGoto, curry_1_5!(action_606))
        },
        18 => {
            partial_5!(happyGoto, curry_1_5!(action_607))
        },
        19 => {
            partial_5!(happyGoto, curry_1_5!(action_608))
        },
        20 => {
            partial_5!(happyGoto, curry_1_5!(action_609))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_610))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_611))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_612))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_613))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_614))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_41)()
        },
    }
}

pub fn action_386(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        211 => {
            partial_5!(happyShift, curry_1_5!(action_604))
        },
        17 => {
            partial_5!(happyGoto, curry_1_5!(action_603))
        },
        _ => {
            (happyReduce_42)()
        },
    }
}

pub fn action_387(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_460))
        },
        85 => {
            partial_5!(happyGoto, curry_1_5!(action_602))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_388(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_601))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_389(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_600))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_390(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_599))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_391(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_36)()
}

pub fn action_392(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_598))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_393(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_597))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_464))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_465))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_466))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_467))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_394(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_596))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_395(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_595))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_396(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_65)()
}

pub fn action_397(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_594))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_398(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_69)()
}

pub fn action_399(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_593))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_400(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_592))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_401(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_591))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_402(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_524))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        66 => {
            partial_5!(happyGoto, curry_1_5!(action_590))
        },
        68 => {
            partial_5!(happyGoto, curry_1_5!(action_219))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_220))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_223))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_523))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_403(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_589))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_463))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_464))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_465))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_466))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_467))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_404(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_516))
        },
        94 => {
            partial_5!(happyGoto, curry_1_5!(action_588))
        },
        _ => {
            (happyReduce_344)()
        },
    }
}

pub fn action_405(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_587))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_406(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_586))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_407(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_14)()
}

pub fn action_408(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_584))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_585))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_409(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_583))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_463))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_464))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_465))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_466))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_467))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_410(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_516))
        },
        94 => {
            partial_5!(happyGoto, curry_1_5!(action_582))
        },
        _ => {
            (happyReduce_344)()
        },
    }
}

pub fn action_411(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_16)()
}

pub fn action_412(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_237)()
}

pub fn action_413(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            (happyReduce_471)()
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            (happyReduce_471)()
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            (happyReduce_471)()
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            (happyReduce_471)()
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_449))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_450))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_451))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_452))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_453))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_454))
        },
        82 => {
            partial_5!(happyGoto, curry_1_5!(action_455))
        },
        83 => {
            partial_5!(happyGoto, curry_1_5!(action_456))
        },
        84 => {
            partial_5!(happyGoto, curry_1_5!(action_457))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_459))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_282)()
        },
    }
}

pub fn action_414(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_581))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_228))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_578))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_579))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_482))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_104))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_483))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_580))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_415(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_240)()
}

pub fn action_416(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_252)()
}

pub fn action_417(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_571))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_572))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_577))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_480))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_418(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_423))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_228))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_424))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_420))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        74 => {
            partial_5!(happyGoto, curry_1_5!(action_576))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_158))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_159))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_422))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_419(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_575))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_420(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_574))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_421(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_573))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_422(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_571))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_572))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_570))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_473))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_474))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_423(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_423))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_228))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_424))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_420))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        74 => {
            partial_5!(happyGoto, curry_1_5!(action_569))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_158))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_159))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_422))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_424(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_258)()
}

pub fn action_425(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_568))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_463))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_464))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_465))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_466))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_467))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_426(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_516))
        },
        94 => {
            partial_5!(happyGoto, curry_1_5!(action_567))
        },
        _ => {
            (happyReduce_344)()
        },
    }
}

pub fn action_427(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_15)()
}

pub fn action_428(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_566))
        },
        _ => {
            (happyReduce_188)()
        },
    }
}

pub fn action_429(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        55 => {
            partial_5!(happyGoto, curry_1_5!(action_565))
        },
        _ => {
            (happyReduce_191)()
        },
    }
}

pub fn action_430(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_563))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_564))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_431(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_562))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_432(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_107)()
}

pub fn action_433(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_150)()
}

pub fn action_434(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_161)()
}

pub fn action_435(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_229)()
}

pub fn action_436(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            (happyReduce_26)()
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_561))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_437(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        33 => {
            partial_5!(happyGoto, curry_1_5!(action_560))
        },
        _ => {
            (happyReduce_90)()
        },
    }
}

pub fn action_438(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_559))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_439(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_179)()
}

pub fn action_440(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_558))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_463))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_464))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_465))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_466))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_467))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_441(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_516))
        },
        94 => {
            partial_5!(happyGoto, curry_1_5!(action_557))
        },
        _ => {
            (happyReduce_344)()
        },
    }
}

pub fn action_442(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_17)()
}

pub fn action_443(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_556))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        221 => {
            (happyReduce_471)()
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_444))
        },
        125 => {
            partial_5!(happyGoto, curry_1_5!(action_553))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_554))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_555))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_458)()
        },
    }
}

pub fn action_444(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_459)()
}

pub fn action_445(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_552))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_446(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_551))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        186 => {
            (happyReduce_472)()
        },
        193 => {
            (happyReduce_472)()
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        213 => {
            (happyReduce_472)()
        },
        214 => {
            (happyReduce_472)()
        },
        216 => {
            (happyReduce_472)()
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        231 => {
            (happyReduce_472)()
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_444))
        },
        125 => {
            partial_5!(happyGoto, curry_1_5!(action_550))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_458)()
        },
    }
}

pub fn action_447(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            (happyReduce_471)()
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_549))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_401)()
        },
    }
}

pub fn action_448(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_547))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_548))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_449(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_540))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_541))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_544))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_545))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_546))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        _ => {
            (happyReduce_287)()
        },
    }
}

pub fn action_450(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_535))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_536))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_237))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_238))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        39 => {
            partial_5!(happyGoto, curry_1_5!(action_231))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_198))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_199))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_200))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_232))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_233))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_201))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_542))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_543))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_236))
        },
        _ => {
            (happyReduce_291)()
        },
    }
}

pub fn action_451(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_540))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_541))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_537))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_538))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_539))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        _ => {
            (happyReduce_294)()
        },
    }
}

pub fn action_452(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        39 => {
            partial_5!(happyGoto, curry_1_5!(action_207))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_198))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_199))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_200))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_201))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_208))
        },
        _ => {
            (happyReduce_102)()
        },
    }
}

pub fn action_453(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_203))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_204))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_205))
        },
        _ => {
            (happyReduce_128)()
        },
    }
}

pub fn action_454(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_535))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_536))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_191))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_192))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_184))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_185))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_186))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_531))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_532))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_533))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_534))
        },
        _ => {
            (happyReduce_298)()
        },
    }
}

pub fn action_455(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_530))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_456(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_529))
        },
        _ => {
            (happyReduce_283)()
        },
    }
}

pub fn action_457(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_285)()
}

pub fn action_458(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_527))
        },
        179 => {
            partial_5!(happyShift, curry_1_5!(action_528))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_459(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_168))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_169))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_162))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_163))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_164))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_460(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_302)()
}

pub fn action_461(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_314)()
}

pub fn action_462(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_19)()
}

pub fn action_463(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_91)()
}

pub fn action_464(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_524))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        66 => {
            partial_5!(happyGoto, curry_1_5!(action_240))
        },
        68 => {
            partial_5!(happyGoto, curry_1_5!(action_219))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_220))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_223))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_523))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_465(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_237))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_238))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        39 => {
            partial_5!(happyGoto, curry_1_5!(action_231))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_198))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_199))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_200))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_232))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_233))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_201))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_526))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_236))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_466(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_524))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        66 => {
            partial_5!(happyGoto, curry_1_5!(action_218))
        },
        68 => {
            partial_5!(happyGoto, curry_1_5!(action_219))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_220))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_223))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_523))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_467(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_191))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_192))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_184))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_185))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_186))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_521))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_522))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_468(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_168))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_169))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_162))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_163))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_164))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_520))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_469(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_518))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_519))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_470(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_517))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_463))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_464))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_465))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_466))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_467))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_471(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_516))
        },
        94 => {
            partial_5!(happyGoto, curry_1_5!(action_515))
        },
        _ => {
            (happyReduce_344)()
        },
    }
}

pub fn action_472(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_13)()
}

pub fn action_473(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_514))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_474(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        139 => {
            partial_5!(happyShift, curry_1_5!(action_513))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_178))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_475(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_512))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_160))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_476(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_511))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_154))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_156))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_477(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_510))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_280)()
        },
    }
}

pub fn action_478(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_273)()
}

pub fn action_479(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_509))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_268)()
        },
    }
}

pub fn action_480(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_264)()
}

pub fn action_481(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_178))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_261)()
        },
    }
}

pub fn action_482(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_265)()
}

pub fn action_483(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_278)()
}

pub fn action_484(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_508))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_485(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_507))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_486(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_506))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_487(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_505))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_488(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_504))
        },
        _ => {
            (happyReduce_214)()
        },
    }
}

pub fn action_489(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        62 => {
            partial_5!(happyGoto, curry_1_5!(action_501))
        },
        63 => {
            partial_5!(happyGoto, curry_1_5!(action_502))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_503))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_490(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_500))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_491(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_499))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_492(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_498))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_493(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        193 => {
            partial_5!(happyShift, curry_1_5!(action_496))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_497))
        },
        135 => {
            partial_5!(happyGoto, curry_1_5!(action_494))
        },
        136 => {
            partial_5!(happyGoto, curry_1_5!(action_495))
        },
        _ => {
            (happyReduce_478)()
        },
    }
}

pub fn action_494(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_765))
        },
        179 => {
            partial_5!(happyShift, curry_1_5!(action_766))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_495(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_476)()
}

pub fn action_496(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_480)()
}

pub fn action_497(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_764))
        },
        _ => {
            (happyReduce_479)()
        },
    }
}

pub fn action_498(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_171)()
}

pub fn action_499(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_172)()
}

pub fn action_500(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_763))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_501(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_761))
        },
        182 => {
            partial_5!(happyShift, curry_1_5!(action_762))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_502(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_215)()
}

pub fn action_503(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_760))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_759))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_217)()
        },
    }
}

pub fn action_504(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        62 => {
            partial_5!(happyGoto, curry_1_5!(action_758))
        },
        63 => {
            partial_5!(happyGoto, curry_1_5!(action_502))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_503))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_505(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_757))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_506(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_126)()
}

pub fn action_507(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_125)()
}

pub fn action_508(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_266)()
}

pub fn action_509(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_269)()
}

pub fn action_510(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_281)()
}

pub fn action_511(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_482))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_484))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_512(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        139 => {
            partial_5!(happyShift, curry_1_5!(action_478))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_178))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_513(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_274)()
}

pub fn action_514(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_756))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_270)()
        },
    }
}

pub fn action_515(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_95)()
}

pub fn action_516(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_654))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        93 => {
            partial_5!(happyGoto, curry_1_5!(action_755))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_650))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_517(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_20)()
}

pub fn action_518(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_754))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_519(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_753))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_520(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_471))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_521(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_441))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_522(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_438))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_439))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_432))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_433))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_434))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_752))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_523(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_230)()
}

pub fn action_524(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_751))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_424))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_420))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        74 => {
            partial_5!(happyGoto, curry_1_5!(action_421))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_512))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_422))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_525(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_750))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_749))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_415))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_416))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_154))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_417))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_526(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_410))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_527(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_279)()
}

pub fn action_528(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_748))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_529(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        183 => {
            partial_5!(happyShift, curry_1_5!(action_747))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_449))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_450))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_451))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_452))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_453))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_454))
        },
        84 => {
            partial_5!(happyGoto, curry_1_5!(action_746))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_459))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_530(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_312)()
}

pub fn action_531(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_745))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_532(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_300)()
}

pub fn action_533(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_438))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_439))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_432))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_433))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_434))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_534(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        185 => {
            (happyReduce_473)()
        },
        186 => {
            (happyReduce_473)()
        },
        188 => {
            (happyReduce_473)()
        },
        190 => {
            (happyReduce_473)()
        },
        192 => {
            (happyReduce_473)()
        },
        193 => {
            (happyReduce_473)()
        },
        195 => {
            (happyReduce_473)()
        },
        198 => {
            (happyReduce_473)()
        },
        200 => {
            (happyReduce_473)()
        },
        201 => {
            (happyReduce_473)()
        },
        202 => {
            (happyReduce_473)()
        },
        207 => {
            (happyReduce_473)()
        },
        208 => {
            (happyReduce_473)()
        },
        209 => {
            (happyReduce_473)()
        },
        210 => {
            (happyReduce_473)()
        },
        212 => {
            (happyReduce_473)()
        },
        213 => {
            (happyReduce_473)()
        },
        214 => {
            (happyReduce_473)()
        },
        215 => {
            (happyReduce_473)()
        },
        216 => {
            (happyReduce_473)()
        },
        218 => {
            (happyReduce_473)()
        },
        219 => {
            (happyReduce_473)()
        },
        221 => {
            (happyReduce_473)()
        },
        223 => {
            (happyReduce_473)()
        },
        225 => {
            (happyReduce_473)()
        },
        226 => {
            (happyReduce_473)()
        },
        227 => {
            (happyReduce_473)()
        },
        228 => {
            (happyReduce_473)()
        },
        229 => {
            (happyReduce_473)()
        },
        230 => {
            (happyReduce_473)()
        },
        231 => {
            (happyReduce_473)()
        },
        238 => {
            (happyReduce_473)()
        },
        239 => {
            (happyReduce_473)()
        },
        _ => {
            (happyReduce_299)()
        },
    }
}

pub fn action_535(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_535))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_536))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            (happyReduce_471)()
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            (happyReduce_471)()
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            (happyReduce_471)()
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            (happyReduce_471)()
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_449))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_450))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_451))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_452))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_453))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_454))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_512))
        },
        82 => {
            partial_5!(happyGoto, curry_1_5!(action_455))
        },
        83 => {
            partial_5!(happyGoto, curry_1_5!(action_456))
        },
        84 => {
            partial_5!(happyGoto, curry_1_5!(action_457))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_628))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_629))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_630))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_744))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_282)()
        },
    }
}

pub fn action_536(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_535))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_536))
        },
        186 => {
            (happyReduce_471)()
        },
        193 => {
            (happyReduce_471)()
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        216 => {
            (happyReduce_471)()
        },
        231 => {
            (happyReduce_471)()
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_742))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_154))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_626))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_743))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_326)()
        },
    }
}

pub fn action_537(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_741))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_538(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_740))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_539(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_295)()
}

pub fn action_540(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_540))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_541))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            (happyReduce_471)()
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            (happyReduce_471)()
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            (happyReduce_471)()
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            (happyReduce_471)()
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_449))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_450))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_451))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_452))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_453))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_454))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_512))
        },
        82 => {
            partial_5!(happyGoto, curry_1_5!(action_455))
        },
        83 => {
            partial_5!(happyGoto, curry_1_5!(action_456))
        },
        84 => {
            partial_5!(happyGoto, curry_1_5!(action_457))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_628))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_629))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_630))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_739))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_282)()
        },
    }
}

pub fn action_541(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_540))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_541))
        },
        186 => {
            (happyReduce_471)()
        },
        193 => {
            (happyReduce_471)()
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        216 => {
            (happyReduce_471)()
        },
        231 => {
            (happyReduce_471)()
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_737))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_415))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_154))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_626))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_738))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_326)()
        },
    }
}

pub fn action_542(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_736))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_543(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_292)()
}

pub fn action_544(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_735))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_545(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_734))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_546(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_288)()
}

pub fn action_547(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_733))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_664))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_548(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_170))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_732))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_549(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_731))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_550(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_730))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_551(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            (happyReduce_471)()
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_729))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_401)()
        },
    }
}

pub fn action_552(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_315)()
}

pub fn action_553(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_728))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_554(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        221 => {
            partial_5!(happyShift, curry_1_5!(action_727))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_555(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_726))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        221 => {
            (happyReduce_472)()
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_444))
        },
        125 => {
            partial_5!(happyGoto, curry_1_5!(action_725))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_458)()
        },
    }
}

pub fn action_556(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            (happyReduce_471)()
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_724))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_401)()
        },
    }
}

pub fn action_557(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_93)()
}

pub fn action_558(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_24)()
}

pub fn action_559(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_722))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_723))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_560(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_721))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_463))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_464))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_465))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_466))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_467))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_561(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_516))
        },
        94 => {
            partial_5!(happyGoto, curry_1_5!(action_720))
        },
        _ => {
            (happyReduce_344)()
        },
    }
}

pub fn action_562(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_18)()
}

pub fn action_563(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_719))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_564(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_718))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_565(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_715))
        },
        182 => {
            partial_5!(happyShift, curry_1_5!(action_716))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_717))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_709))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        56 => {
            partial_5!(happyGoto, curry_1_5!(action_710))
        },
        57 => {
            partial_5!(happyGoto, curry_1_5!(action_711))
        },
        58 => {
            partial_5!(happyGoto, curry_1_5!(action_712))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_713))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_714))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_566(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        55 => {
            partial_5!(happyGoto, curry_1_5!(action_708))
        },
        _ => {
            (happyReduce_191)()
        },
    }
}

pub fn action_567(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_99)()
}

pub fn action_568(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_22)()
}

pub fn action_569(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        139 => {
            partial_5!(happyShift, curry_1_5!(action_707))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_573))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_570(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_706))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_571(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_571))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_572))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_512))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_422))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_572(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_571))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_572))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_705))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_415))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_154))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_417))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_573(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_704))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_574(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_703))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_255)()
        },
    }
}

pub fn action_575(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_702))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_244)()
        },
    }
}

pub fn action_576(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        139 => {
            partial_5!(happyShift, curry_1_5!(action_701))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_573))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_577(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_241)()
}

pub fn action_578(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_242)()
}

pub fn action_579(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_253)()
}

pub fn action_580(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_700))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_698))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_699))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_508))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_581(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_423))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_228))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_424))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_420))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        74 => {
            partial_5!(happyGoto, curry_1_5!(action_697))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_158))
        },
        80 => {
            partial_5!(happyGoto, curry_1_5!(action_159))
        },
        81 => {
            partial_5!(happyGoto, curry_1_5!(action_107))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_422))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_582(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_92)()
}

pub fn action_583(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_23)()
}

pub fn action_584(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_696))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_585(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_695))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_586(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_694))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_587(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_97)()
}

pub fn action_588(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_98)()
}

pub fn action_589(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_21)()
}

pub fn action_590(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_693))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_591(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_692))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_592(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_691))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_593(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_690))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_594(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_689))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_595(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_66)()
}

pub fn action_596(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_249))
        },
        124 => {
            partial_5!(happyGoto, curry_1_5!(action_688))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            (happyReduce_456)()
        },
    }
}

pub fn action_597(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_249))
        },
        124 => {
            partial_5!(happyGoto, curry_1_5!(action_687))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            (happyReduce_456)()
        },
    }
}

pub fn action_598(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_686))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_599(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            partial_5!(happyShift, curry_1_5!(action_685))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_600(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_35)()
}

pub fn action_601(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_683))
        },
        167 => {
            partial_5!(happyShift, curry_1_5!(action_684))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_602(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_528))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_682))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_603(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            (happyReduce_471)()
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            (happyReduce_471)()
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            (happyReduce_471)()
        },
        214 => {
            (happyReduce_471)()
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            (happyReduce_471)()
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            (happyReduce_471)()
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_615))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_616))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_605))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        16 => {
            partial_5!(happyGoto, curry_1_5!(action_681))
        },
        18 => {
            partial_5!(happyGoto, curry_1_5!(action_607))
        },
        19 => {
            partial_5!(happyGoto, curry_1_5!(action_608))
        },
        20 => {
            partial_5!(happyGoto, curry_1_5!(action_609))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_610))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_611))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_612))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_613))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_614))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_41)()
        },
    }
}

pub fn action_604(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_460))
        },
        85 => {
            partial_5!(happyGoto, curry_1_5!(action_680))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_605(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_44)()
}

pub fn action_606(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        182 => {
            partial_5!(happyShift, curry_1_5!(action_679))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_607(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_43)()
}

pub fn action_608(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_45)()
}

pub fn action_609(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_47)()
}

pub fn action_610(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_46)()
}

pub fn action_611(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_524))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_678))
        },
        66 => {
            partial_5!(happyGoto, curry_1_5!(action_240))
        },
        68 => {
            partial_5!(happyGoto, curry_1_5!(action_219))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_220))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_223))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_225))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_612(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_237))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_238))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_677))
        },
        39 => {
            partial_5!(happyGoto, curry_1_5!(action_231))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_198))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_199))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_200))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_232))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_233))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_201))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_234))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_236))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_613(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_524))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_676))
        },
        66 => {
            partial_5!(happyGoto, curry_1_5!(action_218))
        },
        68 => {
            partial_5!(happyGoto, curry_1_5!(action_219))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_220))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_223))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_225))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_614(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_191))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_192))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_674))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_184))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_185))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_186))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_188))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_675))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_615(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            (happyReduce_470)()
        },
        _ => {
            (happyReduce_170)()
        },
    }
}

pub fn action_616(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        222 => {
            partial_5!(happyShift, curry_1_5!(action_132))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_616))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        19 => {
            partial_5!(happyGoto, curry_1_5!(action_673))
        },
        20 => {
            partial_5!(happyGoto, curry_1_5!(action_609))
        },
        32 => {
            partial_5!(happyGoto, curry_1_5!(action_610))
        },
        34 => {
            partial_5!(happyGoto, curry_1_5!(action_80))
        },
        36 => {
            partial_5!(happyGoto, curry_1_5!(action_81))
        },
        37 => {
            partial_5!(happyGoto, curry_1_5!(action_611))
        },
        38 => {
            partial_5!(happyGoto, curry_1_5!(action_612))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_84))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_613))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        46 => {
            partial_5!(happyGoto, curry_1_5!(action_90))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_91))
        },
        48 => {
            partial_5!(happyGoto, curry_1_5!(action_92))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_93))
        },
        50 => {
            partial_5!(happyGoto, curry_1_5!(action_94))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_95))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_614))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_274))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_468))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_617(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_34)()
}

pub fn action_618(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_672))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_619(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        103 => {
            partial_5!(happyGoto, curry_1_5!(action_670))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_671))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_620(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_669))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_621(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_634))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_622(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_634))
        },
        _ => {
            (happyReduce_394)()
        },
    }
}

pub fn action_623(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_668))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_665))
        },
        101 => {
            partial_5!(happyGoto, curry_1_5!(action_666))
        },
        102 => {
            partial_5!(happyGoto, curry_1_5!(action_667))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_624(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_634))
        },
        _ => {
            (happyReduce_396)()
        },
    }
}

pub fn action_625(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_372))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_373))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_662))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_663))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_664))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_626(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_328)()
}

pub fn action_627(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_372))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_373))
        },
        186 => {
            (happyReduce_472)()
        },
        193 => {
            (happyReduce_472)()
        },
        213 => {
            (happyReduce_472)()
        },
        214 => {
            (happyReduce_472)()
        },
        216 => {
            (happyReduce_472)()
        },
        231 => {
            (happyReduce_472)()
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_661))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_330)()
        },
    }
}

pub fn action_628(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_660))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_629(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_659))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_630(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_658))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_632))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_631(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_372))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_373))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_168))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_169))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_162))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_163))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_164))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_655))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_656))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_657))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_632(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_340)()
}

pub fn action_633(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_407)()
}

pub fn action_634(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_652))
        },
        143 => {
            partial_5!(happyShift, curry_1_5!(action_653))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_654))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        93 => {
            partial_5!(happyGoto, curry_1_5!(action_644))
        },
        95 => {
            partial_5!(happyGoto, curry_1_5!(action_645))
        },
        96 => {
            partial_5!(happyGoto, curry_1_5!(action_646))
        },
        97 => {
            partial_5!(happyGoto, curry_1_5!(action_647))
        },
        98 => {
            partial_5!(happyGoto, curry_1_5!(action_648))
        },
        99 => {
            partial_5!(happyGoto, curry_1_5!(action_649))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_650))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_651))
        },
        _ => {
            (happyReduce_346)()
        },
    }
}

pub fn action_635(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_643))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_636(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_438)()
}

pub fn action_637(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_642))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_638(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_379)()
}

pub fn action_639(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_641))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_640(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_377)()
}

pub fn action_641(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_387)()
}

pub fn action_642(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_437)()
}

pub fn action_643(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_455)()
}

pub fn action_644(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_347)()
}

pub fn action_645(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_852))
        },
        182 => {
            partial_5!(happyShift, curry_1_5!(action_853))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_646(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_654))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        93 => {
            partial_5!(happyGoto, curry_1_5!(action_851))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_650))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_647(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        140 => {
            partial_5!(happyShift, curry_1_5!(action_652))
        },
        143 => {
            partial_5!(happyShift, curry_1_5!(action_653))
        },
        168 => {
            partial_5!(happyShift, curry_1_5!(action_850))
        },
        98 => {
            partial_5!(happyGoto, curry_1_5!(action_848))
        },
        99 => {
            partial_5!(happyGoto, curry_1_5!(action_849))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_648(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_354)()
}

pub fn action_649(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        140 => {
            (happyReduce_358)()
        },
        143 => {
            (happyReduce_358)()
        },
        168 => {
            (happyReduce_358)()
        },
        _ => {
            (happyReduce_353)()
        },
    }
}

pub fn action_650(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_341)()
}

pub fn action_651(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            partial_5!(happyShift, curry_1_5!(action_847))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_652(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_846))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_653(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_845))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_654(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_652))
        },
        143 => {
            partial_5!(happyShift, curry_1_5!(action_653))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_654))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        93 => {
            partial_5!(happyGoto, curry_1_5!(action_644))
        },
        95 => {
            partial_5!(happyGoto, curry_1_5!(action_844))
        },
        96 => {
            partial_5!(happyGoto, curry_1_5!(action_646))
        },
        97 => {
            partial_5!(happyGoto, curry_1_5!(action_647))
        },
        98 => {
            partial_5!(happyGoto, curry_1_5!(action_648))
        },
        99 => {
            partial_5!(happyGoto, curry_1_5!(action_649))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_650))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_651))
        },
        _ => {
            (happyReduce_346)()
        },
    }
}

pub fn action_655(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_843))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_656(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_842))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_657(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_841))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_632))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_658(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_333)()
}

pub fn action_659(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_840))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_332)()
        },
    }
}

pub fn action_660(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_334)()
}

pub fn action_661(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_331)()
}

pub fn action_662(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_329)()
}

pub fn action_663(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_327)()
}

pub fn action_664(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_665(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            partial_5!(happyShift, curry_1_5!(action_839))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_666(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_837))
        },
        179 => {
            partial_5!(happyShift, curry_1_5!(action_838))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_667(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_370)()
}

pub fn action_668(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            partial_5!(happyShift, curry_1_5!(action_836))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_669(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_835))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_670(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_832))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_833))
        },
        143 => {
            partial_5!(happyShift, curry_1_5!(action_834))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_671(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_373)()
}

pub fn action_672(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_831))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_673(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_48)()
}

pub fn action_674(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_830))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_675(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_438))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_439))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        11 => {
            partial_5!(happyGoto, curry_1_5!(action_829))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_432))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_433))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_434))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_436))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_676(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_828))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_677(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_827))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_678(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_826))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_679(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_38)()
}

pub fn action_680(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_528))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_825))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_681(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        182 => {
            partial_5!(happyShift, curry_1_5!(action_824))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_682(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_54)()
}

pub fn action_683(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_823))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_684(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        140 => {
            partial_5!(happyShift, curry_1_5!(action_822))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        28 => {
            partial_5!(happyGoto, curry_1_5!(action_818))
        },
        29 => {
            partial_5!(happyGoto, curry_1_5!(action_819))
        },
        30 => {
            partial_5!(happyGoto, curry_1_5!(action_820))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_821))
        },
        _ => {
            (happyReduce_76)()
        },
    }
}

pub fn action_685(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_817))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_686(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_816))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_687(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_815))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_688(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_814))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_689(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        199 => {
            partial_5!(happyShift, curry_1_5!(action_813))
        },
        _ => {
            (happyReduce_58)()
        },
    }
}

pub fn action_690(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_60)()
}

pub fn action_691(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_61)()
}

pub fn action_692(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_516))
        },
        94 => {
            partial_5!(happyGoto, curry_1_5!(action_812))
        },
        _ => {
            (happyReduce_344)()
        },
    }
}

pub fn action_693(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_516))
        },
        94 => {
            partial_5!(happyGoto, curry_1_5!(action_811))
        },
        _ => {
            (happyReduce_344)()
        },
    }
}

pub fn action_694(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_810))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_695(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_166)()
}

pub fn action_696(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_167)()
}

pub fn action_697(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        139 => {
            partial_5!(happyShift, curry_1_5!(action_809))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_573))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_698(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_243)()
}

pub fn action_699(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_254)()
}

pub fn action_700(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_751))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_424))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_420))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        74 => {
            partial_5!(happyGoto, curry_1_5!(action_808))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_512))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_422))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_701(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_249)()
}

pub fn action_702(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_245)()
}

pub fn action_703(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_257)()
}

pub fn action_704(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_256)()
}

pub fn action_705(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_571))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_572))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_578))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_482))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_807))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_706(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_806))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_246)()
        },
    }
}

pub fn action_707(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_259)()
}

pub fn action_708(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_715))
        },
        182 => {
            partial_5!(happyShift, curry_1_5!(action_805))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_717))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_709))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        56 => {
            partial_5!(happyGoto, curry_1_5!(action_710))
        },
        57 => {
            partial_5!(happyGoto, curry_1_5!(action_711))
        },
        58 => {
            partial_5!(happyGoto, curry_1_5!(action_712))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_713))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_714))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_709(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_524))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        167 => {
            partial_5!(happyShift, curry_1_5!(action_804))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        59 => {
            partial_5!(happyGoto, curry_1_5!(action_802))
        },
        66 => {
            partial_5!(happyGoto, curry_1_5!(action_803))
        },
        68 => {
            partial_5!(happyGoto, curry_1_5!(action_219))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_220))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_223))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_523))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        _ => {
            (happyReduce_202)()
        },
    }
}

pub fn action_710(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_193)()
}

pub fn action_711(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_800))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_801))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_712(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_798))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_799))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_713(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_191))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_192))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_185))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_186))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_796))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_797))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_714(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        167 => {
            partial_5!(happyShift, curry_1_5!(action_795))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_168))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_169))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_163))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_164))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        60 => {
            partial_5!(happyGoto, curry_1_5!(action_793))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_794))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_715(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_192)()
}

pub fn action_716(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_187)()
}

pub fn action_717(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_717))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_709))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        56 => {
            partial_5!(happyGoto, curry_1_5!(action_792))
        },
        57 => {
            partial_5!(happyGoto, curry_1_5!(action_711))
        },
        58 => {
            partial_5!(happyGoto, curry_1_5!(action_712))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_713))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_714))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_718(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_174)()
}

pub fn action_719(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_175)()
}

pub fn action_720(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_94)()
}

pub fn action_721(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_25)()
}

pub fn action_722(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_791))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_723(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_790))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_724(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_789))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_725(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_788))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_726(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            (happyReduce_471)()
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_787))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_401)()
        },
    }
}

pub fn action_727(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_786))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_728(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_317)()
}

pub fn action_729(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_785))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_730(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_316)()
}

pub fn action_731(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_322)()
}

pub fn action_732(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_784))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_733(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_783))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_734(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_289)()
}

pub fn action_735(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_290)()
}

pub fn action_736(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_293)()
}

pub fn action_737(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_540))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_541))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_578))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_482))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_662))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_663))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_782))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_738(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_540))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_541))
        },
        186 => {
            (happyReduce_472)()
        },
        193 => {
            (happyReduce_472)()
        },
        213 => {
            (happyReduce_472)()
        },
        214 => {
            (happyReduce_472)()
        },
        216 => {
            (happyReduce_472)()
        },
        231 => {
            (happyReduce_472)()
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_577))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_480))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_661))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_330)()
        },
    }
}

pub fn action_739(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_540))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_541))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_168))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_169))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_162))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_163))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_164))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_570))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_473))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_474))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_655))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_656))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_657))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_740(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_296)()
}

pub fn action_741(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_297)()
}

pub fn action_742(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_535))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_536))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_482))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_662))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_663))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_781))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_743(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_535))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_536))
        },
        186 => {
            (happyReduce_472)()
        },
        193 => {
            (happyReduce_472)()
        },
        213 => {
            (happyReduce_472)()
        },
        214 => {
            (happyReduce_472)()
        },
        216 => {
            (happyReduce_472)()
        },
        231 => {
            (happyReduce_472)()
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_480))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        87 => {
            partial_5!(happyGoto, curry_1_5!(action_661))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_367))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_368))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_369))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_330)()
        },
    }
}

pub fn action_744(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_535))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_536))
        },
        185 => {
            partial_5!(happyShift, curry_1_5!(action_113))
        },
        188 => {
            partial_5!(happyShift, curry_1_5!(action_115))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        201 => {
            partial_5!(happyShift, curry_1_5!(action_121))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        207 => {
            partial_5!(happyShift, curry_1_5!(action_123))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        212 => {
            partial_5!(happyShift, curry_1_5!(action_127))
        },
        215 => {
            partial_5!(happyShift, curry_1_5!(action_128))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        221 => {
            partial_5!(happyShift, curry_1_5!(action_131))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        225 => {
            partial_5!(happyShift, curry_1_5!(action_134))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_168))
        },
        227 => {
            partial_5!(happyShift, curry_1_5!(action_136))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_169))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        40 => {
            partial_5!(happyGoto, curry_1_5!(action_162))
        },
        41 => {
            partial_5!(happyGoto, curry_1_5!(action_85))
        },
        42 => {
            partial_5!(happyGoto, curry_1_5!(action_86))
        },
        43 => {
            partial_5!(happyGoto, curry_1_5!(action_87))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_163))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_164))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_473))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_474))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_655))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        91 => {
            partial_5!(happyGoto, curry_1_5!(action_656))
        },
        92 => {
            partial_5!(happyGoto, curry_1_5!(action_657))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_745(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_301)()
}

pub fn action_746(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_286)()
}

pub fn action_747(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_284)()
}

pub fn action_748(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_303)()
}

pub fn action_749(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_780))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_187))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_578))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_579))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_482))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_580))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_750(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_751))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_424))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_420))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        74 => {
            partial_5!(happyGoto, curry_1_5!(action_576))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_512))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_422))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_751(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_751))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_424))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_420))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        74 => {
            partial_5!(happyGoto, curry_1_5!(action_569))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_512))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_422))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_752(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        187 => {
            partial_5!(happyShift, curry_1_5!(action_406))
        },
        35 => {
            partial_5!(happyGoto, curry_1_5!(action_561))
        },
        67 => {
            partial_5!(happyGoto, curry_1_5!(action_405))
        },
        _ => {
            (happyReduce_232)()
        },
    }
}

pub fn action_753(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_177)()
}

pub fn action_754(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_178)()
}

pub fn action_755(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_345)()
}

pub fn action_756(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_271)()
}

pub fn action_757(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_11)()
}

pub fn action_758(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_778))
        },
        182 => {
            partial_5!(happyShift, curry_1_5!(action_779))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_759(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_777))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_218)()
        },
    }
}

pub fn action_760(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_776))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_761(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        182 => {
            partial_5!(happyShift, curry_1_5!(action_775))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        63 => {
            partial_5!(happyGoto, curry_1_5!(action_774))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_503))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_762(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_210)()
}

pub fn action_763(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_773))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_764(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        139 => {
            partial_5!(happyShift, curry_1_5!(action_772))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_769))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_770))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        137 => {
            partial_5!(happyGoto, curry_1_5!(action_771))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_765(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_768))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_766(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        193 => {
            partial_5!(happyShift, curry_1_5!(action_496))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_497))
        },
        136 => {
            partial_5!(happyGoto, curry_1_5!(action_767))
        },
        _ => {
            (happyReduce_478)()
        },
    }
}

pub fn action_767(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_477)()
}

pub fn action_768(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_475)()
}

pub fn action_769(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_316))
        },
        169 => {
            partial_5!(happyShift, curry_1_5!(action_317))
        },
        170 => {
            partial_5!(happyShift, curry_1_5!(action_318))
        },
        171 => {
            partial_5!(happyShift, curry_1_5!(action_319))
        },
        172 => {
            partial_5!(happyShift, curry_1_5!(action_320))
        },
        173 => {
            partial_5!(happyShift, curry_1_5!(action_321))
        },
        174 => {
            partial_5!(happyShift, curry_1_5!(action_322))
        },
        175 => {
            partial_5!(happyShift, curry_1_5!(action_323))
        },
        176 => {
            partial_5!(happyShift, curry_1_5!(action_324))
        },
        177 => {
            partial_5!(happyShift, curry_1_5!(action_325))
        },
        178 => {
            partial_5!(happyShift, curry_1_5!(action_326))
        },
        121 => {
            partial_5!(happyGoto, curry_1_5!(action_896))
        },
        _ => {
            (happyReduce_406)()
        },
    }
}

pub fn action_770(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_483)()
}

pub fn action_771(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_894))
        },
        179 => {
            partial_5!(happyShift, curry_1_5!(action_895))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_772(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_482)()
}

pub fn action_773(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_893))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_774(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_216)()
}

pub fn action_775(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_211)()
}

pub fn action_776(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_220)()
}

pub fn action_777(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_892))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_778(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        182 => {
            partial_5!(happyShift, curry_1_5!(action_891))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        63 => {
            partial_5!(happyGoto, curry_1_5!(action_774))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_503))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_779(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_212)()
}

pub fn action_780(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_751))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_424))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_419))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_420))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        74 => {
            partial_5!(happyGoto, curry_1_5!(action_697))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_157))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_512))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_422))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_781(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_508))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_782(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_571))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_572))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_698))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_508))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_783(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_890))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_784(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_319)()
}

pub fn action_785(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_323)()
}

pub fn action_786(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_889))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_787(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_888))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_788(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_318)()
}

pub fn action_789(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_324)()
}

pub fn action_790(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_180)()
}

pub fn action_791(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_181)()
}

pub fn action_792(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_196)()
}

pub fn action_793(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_887))
        },
        _ => {
            (happyReduce_198)()
        },
    }
}

pub fn action_794(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            partial_5!(happyShift, curry_1_5!(action_886))
        },
        _ => {
            (happyReduce_206)()
        },
    }
}

pub fn action_795(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_885))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_796(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        167 => {
            partial_5!(happyShift, curry_1_5!(action_795))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        60 => {
            partial_5!(happyGoto, curry_1_5!(action_884))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_794))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_797(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_438))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_439))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_433))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_434))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            (happyReduce_472)()
        },
    }
}

pub fn action_798(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_883))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_799(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_194)()
}

pub fn action_800(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_882))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_801(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_195)()
}

pub fn action_802(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_881))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_803(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        167 => {
            partial_5!(happyShift, curry_1_5!(action_880))
        },
        _ => {
            (happyReduce_203)()
        },
    }
}

pub fn action_804(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_879))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_805(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_186)()
}

pub fn action_806(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_247)()
}

pub fn action_807(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_571))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_572))
        },
        186 => {
            partial_5!(happyShift, curry_1_5!(action_171))
        },
        193 => {
            partial_5!(happyShift, curry_1_5!(action_172))
        },
        213 => {
            partial_5!(happyShift, curry_1_5!(action_173))
        },
        214 => {
            partial_5!(happyShift, curry_1_5!(action_174))
        },
        216 => {
            partial_5!(happyShift, curry_1_5!(action_175))
        },
        231 => {
            partial_5!(happyShift, curry_1_5!(action_176))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        64 => {
            partial_5!(happyGoto, curry_1_5!(action_435))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_698))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_508))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_167))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_808(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        139 => {
            partial_5!(happyShift, curry_1_5!(action_878))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_573))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_809(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_250)()
}

pub fn action_810(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_233)()
}

pub fn action_811(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_100)()
}

pub fn action_812(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_96)()
}

pub fn action_813(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_877))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_814(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_249))
        },
        124 => {
            partial_5!(happyGoto, curry_1_5!(action_876))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            (happyReduce_456)()
        },
    }
}

pub fn action_815(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_249))
        },
        124 => {
            partial_5!(happyGoto, curry_1_5!(action_875))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            (happyReduce_456)()
        },
    }
}

pub fn action_816(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_874))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_817(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_37)()
}

pub fn action_818(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_872))
        },
        167 => {
            partial_5!(happyShift, curry_1_5!(action_873))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_819(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_871))
        },
        _ => {
            (happyReduce_77)()
        },
    }
}

pub fn action_820(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_78)()
}

pub fn action_821(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_870))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_822(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_868))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_869))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_823(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_70)()
}

pub fn action_824(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_39)()
}

pub fn action_825(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_55)()
}

pub fn action_826(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_49)()
}

pub fn action_827(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_51)()
}

pub fn action_828(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_50)()
}

pub fn action_829(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_867))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_830(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_52)()
}

pub fn action_831(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_368)()
}

pub fn action_832(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_367)()
}

pub fn action_833(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_866))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_834(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        237 => {
            partial_5!(happyShift, curry_1_5!(action_254))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_865))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_835(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_366)()
}

pub fn action_836(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_864))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_837(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_364)()
}

pub fn action_838(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        190 => {
            partial_5!(happyShift, curry_1_5!(action_116))
        },
        192 => {
            partial_5!(happyShift, curry_1_5!(action_117))
        },
        195 => {
            partial_5!(happyShift, curry_1_5!(action_118))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_668))
        },
        198 => {
            partial_5!(happyShift, curry_1_5!(action_119))
        },
        200 => {
            partial_5!(happyShift, curry_1_5!(action_120))
        },
        202 => {
            partial_5!(happyShift, curry_1_5!(action_122))
        },
        208 => {
            partial_5!(happyShift, curry_1_5!(action_124))
        },
        209 => {
            partial_5!(happyShift, curry_1_5!(action_125))
        },
        210 => {
            partial_5!(happyShift, curry_1_5!(action_126))
        },
        218 => {
            partial_5!(happyShift, curry_1_5!(action_129))
        },
        219 => {
            partial_5!(happyShift, curry_1_5!(action_130))
        },
        223 => {
            partial_5!(happyShift, curry_1_5!(action_133))
        },
        226 => {
            partial_5!(happyShift, curry_1_5!(action_135))
        },
        228 => {
            partial_5!(happyShift, curry_1_5!(action_137))
        },
        229 => {
            partial_5!(happyShift, curry_1_5!(action_138))
        },
        230 => {
            partial_5!(happyShift, curry_1_5!(action_139))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_141))
        },
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        44 => {
            partial_5!(happyGoto, curry_1_5!(action_286))
        },
        45 => {
            partial_5!(happyGoto, curry_1_5!(action_89))
        },
        47 => {
            partial_5!(happyGoto, curry_1_5!(action_287))
        },
        49 => {
            partial_5!(happyGoto, curry_1_5!(action_288))
        },
        51 => {
            partial_5!(happyGoto, curry_1_5!(action_289))
        },
        52 => {
            partial_5!(happyGoto, curry_1_5!(action_96))
        },
        53 => {
            partial_5!(happyGoto, curry_1_5!(action_97))
        },
        54 => {
            partial_5!(happyGoto, curry_1_5!(action_98))
        },
        61 => {
            partial_5!(happyGoto, curry_1_5!(action_99))
        },
        65 => {
            partial_5!(happyGoto, curry_1_5!(action_290))
        },
        86 => {
            partial_5!(happyGoto, curry_1_5!(action_665))
        },
        102 => {
            partial_5!(happyGoto, curry_1_5!(action_863))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_108))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_293))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_839(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_862))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_840(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_335)()
}

pub fn action_841(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_337)()
}

pub fn action_842(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_413))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_182))
        },
        88 => {
            partial_5!(happyGoto, curry_1_5!(action_861))
        },
        89 => {
            partial_5!(happyGoto, curry_1_5!(action_179))
        },
        90 => {
            partial_5!(happyGoto, curry_1_5!(action_180))
        },
        _ => {
            (happyReduce_336)()
        },
    }
}

pub fn action_843(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_338)()
}

pub fn action_844(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        179 => {
            partial_5!(happyShift, curry_1_5!(action_859))
        },
        182 => {
            partial_5!(happyShift, curry_1_5!(action_860))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_845(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_357)()
}

pub fn action_846(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_857))
        },
        183 => {
            partial_5!(happyShift, curry_1_5!(action_858))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_847(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_352)()
}

pub fn action_848(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_355)()
}

pub fn action_849(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_358)()
}

pub fn action_850(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_351)()
}

pub fn action_851(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_348)()
}

pub fn action_852(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_652))
        },
        143 => {
            partial_5!(happyShift, curry_1_5!(action_653))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_654))
        },
        182 => {
            partial_5!(happyShift, curry_1_5!(action_856))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        93 => {
            partial_5!(happyGoto, curry_1_5!(action_854))
        },
        96 => {
            partial_5!(happyGoto, curry_1_5!(action_855))
        },
        97 => {
            partial_5!(happyGoto, curry_1_5!(action_647))
        },
        98 => {
            partial_5!(happyGoto, curry_1_5!(action_648))
        },
        99 => {
            partial_5!(happyGoto, curry_1_5!(action_649))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_650))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_651))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_853(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_384)()
}

pub fn action_854(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_349)()
}

pub fn action_855(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_654))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        93 => {
            partial_5!(happyGoto, curry_1_5!(action_918))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_650))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_856(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_385)()
}

pub fn action_857(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_356)()
}

pub fn action_858(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_917))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_859(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        140 => {
            partial_5!(happyShift, curry_1_5!(action_652))
        },
        143 => {
            partial_5!(happyShift, curry_1_5!(action_653))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_654))
        },
        182 => {
            partial_5!(happyShift, curry_1_5!(action_916))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        93 => {
            partial_5!(happyGoto, curry_1_5!(action_854))
        },
        96 => {
            partial_5!(happyGoto, curry_1_5!(action_855))
        },
        97 => {
            partial_5!(happyGoto, curry_1_5!(action_647))
        },
        98 => {
            partial_5!(happyGoto, curry_1_5!(action_648))
        },
        99 => {
            partial_5!(happyGoto, curry_1_5!(action_649))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_650))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_651))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_860(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_342)()
}

pub fn action_861(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_339)()
}

pub fn action_862(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_371)()
}

pub fn action_863(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_369)()
}

pub fn action_864(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_372)()
}

pub fn action_865(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_374)()
}

pub fn action_866(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_915))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_867(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_53)()
}

pub fn action_868(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_914))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_869(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_913))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_870(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_912))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_871(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        140 => {
            partial_5!(happyShift, curry_1_5!(action_822))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        30 => {
            partial_5!(happyGoto, curry_1_5!(action_911))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_821))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_872(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_910))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_873(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        140 => {
            partial_5!(happyShift, curry_1_5!(action_822))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        28 => {
            partial_5!(happyGoto, curry_1_5!(action_909))
        },
        29 => {
            partial_5!(happyGoto, curry_1_5!(action_819))
        },
        30 => {
            partial_5!(happyGoto, curry_1_5!(action_820))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_821))
        },
        _ => {
            (happyReduce_76)()
        },
    }
}

pub fn action_874(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_62)()
}

pub fn action_875(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_908))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_876(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_907))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_877(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_59)()
}

pub fn action_878(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_251)()
}

pub fn action_879(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_204)()
}

pub fn action_880(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_906))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_881(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_200)()
}

pub fn action_882(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_475))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_476))
        },
        167 => {
            partial_5!(happyShift, curry_1_5!(action_795))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        60 => {
            partial_5!(happyGoto, curry_1_5!(action_905))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_794))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_883(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_524))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_525))
        },
        167 => {
            partial_5!(happyShift, curry_1_5!(action_804))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_140))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_229))
        },
        59 => {
            partial_5!(happyGoto, curry_1_5!(action_904))
        },
        66 => {
            partial_5!(happyGoto, curry_1_5!(action_803))
        },
        68 => {
            partial_5!(happyGoto, curry_1_5!(action_219))
        },
        69 => {
            partial_5!(happyGoto, curry_1_5!(action_220))
        },
        70 => {
            partial_5!(happyGoto, curry_1_5!(action_221))
        },
        71 => {
            partial_5!(happyGoto, curry_1_5!(action_222))
        },
        72 => {
            partial_5!(happyGoto, curry_1_5!(action_223))
        },
        73 => {
            partial_5!(happyGoto, curry_1_5!(action_224))
        },
        75 => {
            partial_5!(happyGoto, curry_1_5!(action_523))
        },
        76 => {
            partial_5!(happyGoto, curry_1_5!(action_102))
        },
        77 => {
            partial_5!(happyGoto, curry_1_5!(action_103))
        },
        78 => {
            partial_5!(happyGoto, curry_1_5!(action_481))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_884(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_887))
        },
        _ => {
            (happyReduce_197)()
        },
    }
}

pub fn action_885(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_207)()
}

pub fn action_886(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_259))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_903))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_887(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_209)()
}

pub fn action_888(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_325)()
}

pub fn action_889(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_902))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_890(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_320)()
}

pub fn action_891(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_213)()
}

pub fn action_892(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_219)()
}

pub fn action_893(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_89)()
}

pub fn action_894(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_481)()
}

pub fn action_895(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_900))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_260))
        },
        126 => {
            partial_5!(happyGoto, curry_1_5!(action_901))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_896(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_272))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        246 => {
            partial_5!(happyShift, curry_1_5!(action_899))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_897))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        130 => {
            partial_5!(happyGoto, curry_1_5!(action_898))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_897(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_485)()
}

pub fn action_898(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_484)()
}

pub fn action_899(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_468)()
}

pub fn action_900(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        168 => {
            partial_5!(happyShift, curry_1_5!(action_316))
        },
        169 => {
            partial_5!(happyShift, curry_1_5!(action_317))
        },
        170 => {
            partial_5!(happyShift, curry_1_5!(action_318))
        },
        171 => {
            partial_5!(happyShift, curry_1_5!(action_319))
        },
        172 => {
            partial_5!(happyShift, curry_1_5!(action_320))
        },
        173 => {
            partial_5!(happyShift, curry_1_5!(action_321))
        },
        174 => {
            partial_5!(happyShift, curry_1_5!(action_322))
        },
        175 => {
            partial_5!(happyShift, curry_1_5!(action_323))
        },
        176 => {
            partial_5!(happyShift, curry_1_5!(action_324))
        },
        177 => {
            partial_5!(happyShift, curry_1_5!(action_325))
        },
        178 => {
            partial_5!(happyShift, curry_1_5!(action_326))
        },
        121 => {
            partial_5!(happyGoto, curry_1_5!(action_928))
        },
        _ => {
            (happyReduce_406)()
        },
    }
}

pub fn action_901(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_486)()
}

pub fn action_902(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_321)()
}

pub fn action_903(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_208)()
}

pub fn action_904(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        132 => {
            partial_5!(happyGoto, curry_1_5!(action_927))
        },
        133 => {
            partial_5!(happyGoto, curry_1_5!(action_150))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_110))
        },
        _ => {
            (happyReduce_471)()
        },
    }
}

pub fn action_905(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        239 => {
            partial_5!(happyShift, curry_1_5!(action_142))
        },
        134 => {
            partial_5!(happyGoto, curry_1_5!(action_887))
        },
        _ => {
            (happyReduce_199)()
        },
    }
}

pub fn action_906(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_205)()
}

pub fn action_907(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_926))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_908(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        180 => {
            partial_5!(happyShift, curry_1_5!(action_60))
        },
        181 => {
            partial_5!(happyShift, curry_1_5!(action_61))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        187 => {
            partial_5!(happyShift, curry_1_5!(action_62))
        },
        189 => {
            partial_5!(happyShift, curry_1_5!(action_63))
        },
        191 => {
            partial_5!(happyShift, curry_1_5!(action_64))
        },
        194 => {
            partial_5!(happyShift, curry_1_5!(action_65))
        },
        196 => {
            partial_5!(happyShift, curry_1_5!(action_66))
        },
        197 => {
            partial_5!(happyShift, curry_1_5!(action_67))
        },
        203 => {
            partial_5!(happyShift, curry_1_5!(action_68))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        205 => {
            partial_5!(happyShift, curry_1_5!(action_69))
        },
        206 => {
            partial_5!(happyShift, curry_1_5!(action_70))
        },
        217 => {
            partial_5!(happyShift, curry_1_5!(action_71))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        224 => {
            partial_5!(happyShift, curry_1_5!(action_72))
        },
        232 => {
            partial_5!(happyShift, curry_1_5!(action_73))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_74))
        },
        238 => {
            partial_5!(happyShift, curry_1_5!(action_75))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        12 => {
            partial_5!(happyGoto, curry_1_5!(action_925))
        },
        13 => {
            partial_5!(happyGoto, curry_1_5!(action_51))
        },
        14 => {
            partial_5!(happyGoto, curry_1_5!(action_52))
        },
        22 => {
            partial_5!(happyGoto, curry_1_5!(action_53))
        },
        23 => {
            partial_5!(happyGoto, curry_1_5!(action_54))
        },
        24 => {
            partial_5!(happyGoto, curry_1_5!(action_55))
        },
        25 => {
            partial_5!(happyGoto, curry_1_5!(action_56))
        },
        26 => {
            partial_5!(happyGoto, curry_1_5!(action_57))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_58))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        131 => {
            partial_5!(happyGoto, curry_1_5!(action_59))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_909(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_923))
        },
        167 => {
            partial_5!(happyShift, curry_1_5!(action_924))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_910(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_71)()
}

pub fn action_911(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_79)()
}

pub fn action_912(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_922))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_913(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_921))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_914(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_920))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_915(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_375)()
}

pub fn action_916(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_343)()
}

pub fn action_917(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        141 => {
            partial_5!(happyShift, curry_1_5!(action_919))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_918(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_350)()
}

pub fn action_919(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_359)()
}

pub fn action_920(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_936))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_921(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_935))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_922(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_80)()
}

pub fn action_923(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_934))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_924(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        31 => {
            partial_5!(happyGoto, curry_1_5!(action_932))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_933))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_925(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        16 => {
            partial_5!(happyGoto, curry_1_5!(action_931))
        },
        _ => {
            (happyReduce_41)()
        },
    }
}

pub fn action_926(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_63)()
}

pub fn action_927(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_201)()
}

pub fn action_928(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_272))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        246 => {
            partial_5!(happyShift, curry_1_5!(action_899))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_929))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        130 => {
            partial_5!(happyGoto, curry_1_5!(action_930))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_929(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_487)()
}

pub fn action_930(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_488)()
}

pub fn action_931(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_64)()
}

pub fn action_932(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_939))
        },
        179 => {
            partial_5!(happyShift, curry_1_5!(action_940))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_933(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_83)()
}

pub fn action_934(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_72)()
}

pub fn action_935(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_938))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_936(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        138 => {
            partial_5!(happyShift, curry_1_5!(action_26))
        },
        144 => {
            partial_5!(happyShift, curry_1_5!(action_27))
        },
        145 => {
            partial_5!(happyShift, curry_1_5!(action_28))
        },
        146 => {
            partial_5!(happyShift, curry_1_5!(action_29))
        },
        147 => {
            partial_5!(happyShift, curry_1_5!(action_30))
        },
        148 => {
            partial_5!(happyShift, curry_1_5!(action_31))
        },
        149 => {
            partial_5!(happyShift, curry_1_5!(action_32))
        },
        150 => {
            partial_5!(happyShift, curry_1_5!(action_33))
        },
        153 => {
            partial_5!(happyShift, curry_1_5!(action_34))
        },
        164 => {
            partial_5!(happyShift, curry_1_5!(action_35))
        },
        184 => {
            partial_5!(happyShift, curry_1_5!(action_36))
        },
        204 => {
            partial_5!(happyShift, curry_1_5!(action_37))
        },
        220 => {
            partial_5!(happyShift, curry_1_5!(action_38))
        },
        233 => {
            partial_5!(happyShift, curry_1_5!(action_39))
        },
        234 => {
            partial_5!(happyShift, curry_1_5!(action_40))
        },
        235 => {
            partial_5!(happyShift, curry_1_5!(action_41))
        },
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        237 => {
            partial_5!(happyShift, curry_1_5!(action_43))
        },
        240 => {
            partial_5!(happyShift, curry_1_5!(action_44))
        },
        241 => {
            partial_5!(happyShift, curry_1_5!(action_45))
        },
        242 => {
            partial_5!(happyShift, curry_1_5!(action_46))
        },
        243 => {
            partial_5!(happyShift, curry_1_5!(action_47))
        },
        244 => {
            partial_5!(happyShift, curry_1_5!(action_48))
        },
        245 => {
            partial_5!(happyShift, curry_1_5!(action_49))
        },
        100 => {
            partial_5!(happyGoto, curry_1_5!(action_6))
        },
        104 => {
            partial_5!(happyGoto, curry_1_5!(action_7))
        },
        106 => {
            partial_5!(happyGoto, curry_1_5!(action_8))
        },
        107 => {
            partial_5!(happyGoto, curry_1_5!(action_9))
        },
        108 => {
            partial_5!(happyGoto, curry_1_5!(action_10))
        },
        109 => {
            partial_5!(happyGoto, curry_1_5!(action_11))
        },
        110 => {
            partial_5!(happyGoto, curry_1_5!(action_12))
        },
        111 => {
            partial_5!(happyGoto, curry_1_5!(action_13))
        },
        112 => {
            partial_5!(happyGoto, curry_1_5!(action_14))
        },
        113 => {
            partial_5!(happyGoto, curry_1_5!(action_15))
        },
        114 => {
            partial_5!(happyGoto, curry_1_5!(action_16))
        },
        115 => {
            partial_5!(happyGoto, curry_1_5!(action_17))
        },
        116 => {
            partial_5!(happyGoto, curry_1_5!(action_18))
        },
        117 => {
            partial_5!(happyGoto, curry_1_5!(action_19))
        },
        118 => {
            partial_5!(happyGoto, curry_1_5!(action_20))
        },
        119 => {
            partial_5!(happyGoto, curry_1_5!(action_21))
        },
        120 => {
            partial_5!(happyGoto, curry_1_5!(action_22))
        },
        122 => {
            partial_5!(happyGoto, curry_1_5!(action_937))
        },
        127 => {
            partial_5!(happyGoto, curry_1_5!(action_24))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_25))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_937(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_944))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_938(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        139 => {
            partial_5!(happyShift, curry_1_5!(action_943))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_939(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        180 => {
            partial_5!(happyShift, curry_1_5!(action_942))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_940(_0: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    match (_0) {
        236 => {
            partial_5!(happyShift, curry_1_5!(action_42))
        },
        128 => {
            partial_5!(happyGoto, curry_1_5!(action_941))
        },
        _ => {
            box happyFail
        },
    }
}

pub fn action_941(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_84)()
}

pub fn action_942(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_73)()
}

pub fn action_943(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_82)()
}

pub fn action_944(_: isize) -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    (happyReduce_81)()
}

pub fn happyReduce_4() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 7, box happyReduction_4)
}

pub fn happyReduction_4<t>(_0: HappyStk<HappyAbsSyn>, _1: t) -> P<HappyAbsSyn> {
            match (
                {
                    _0
                },
                {
                    _1
                },
            ) {
                (HappyStk(HappyAbsSyn8(happy_var_1), Some(box happyRest)), tk) => {
                    happyThen(
                        (({
                            let mut decls = reverse(happy_var_1);
                            if decls.len() == 0 {
                                {
                                    thenP(getNewName(), box move |n| {
                                        let decls = decls.clone();
                                        thenP(getCurrentPosition(), box move |p| {
                                            let decls = decls.clone();
                                            __return(CTranslationUnit::<NodeInfo>(
                                                decls.clone(),
                                                (mkNodeInfo_q(p.clone(), (p.clone(), 0), n.clone())),
                                            ))
                                        })
                                    })
                                }
                            } else {
                                let d = decls[0].clone();
                                withNodeInfo(d, box move |_0| {
                                    CTranslationUnit::<NodeInfo>(decls.clone(), _0)
                                })
                            }
                        })),
                        (box move |r| happyReturn((HappyAbsSyn7(r)))),
                    )
                }
                _ => {
                    panic!("Irrefutable pattern!");
                }
            }
        }

pub fn happyReduce_5() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 8, (happyReduction_5)())
}

pub fn happyReduction_5() -> HappyAbsSyn {
    HappyAbsSyn8((empty)())
}

pub fn happyReduce_6() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 8, box happyReduction_6)
}

pub fn happyReduction_6<t>(_0: t, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (_, HappyAbsSyn8(happy_var_1)) => {
            HappyAbsSyn8(happy_var_1)
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_7() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 8, box happyReduction_7)
}

pub fn happyReduction_7(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn9(happy_var_2), HappyAbsSyn8(happy_var_1)) => {
            HappyAbsSyn8((snoc(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_8() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 9, box happyReduction_8)
}

pub fn happyReduction_8(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn10(happy_var_1) => {
            HappyAbsSyn9((CFDefExt(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_9() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 9, box happyReduction_9)
}

pub fn happyReduction_9(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn32(happy_var_1) => {
            HappyAbsSyn9((CDeclExt(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_10() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 9, box happyReduction_10)
}

pub fn happyReduction_10<t>(_0: HappyAbsSyn, _1: t) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn9(happy_var_2), _) => {
            HappyAbsSyn9(happy_var_2)
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_11() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 9, box happyReduction_11)
}

refute!( pub fn happyReduction_11<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn128(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAsmExt, happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn9(r))) }))
} );

pub fn happyReduce_12() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 10, box happyReduction_12)
}

refute!( pub fn happyReduction_12<t>(HappyStk(HappyAbsSyn12(happy_var_2), Some(box HappyStk(HappyAbsSyn11(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, vec![], happy_var_1, vec![], happy_var_2)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_13() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 10, box happyReduction_13)
}

refute!( pub fn happyReduction_13<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn132(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, (liftCAttrs(happy_var_1)), happy_var_2, vec![], happy_var_3)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_14() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 10, box happyReduction_14)
}

refute!( pub fn happyReduction_14<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, happy_var_1, happy_var_2, vec![], happy_var_3)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_15() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 10, box happyReduction_15)
}

refute!( pub fn happyReduction_15<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, happy_var_1, happy_var_2, vec![], happy_var_3)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_16() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 10, box happyReduction_16)
}

refute!( pub fn happyReduction_16<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(),
        (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, (reverse(happy_var_1)), happy_var_2, vec![], happy_var_3))
    )))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_17() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 10, box happyReduction_17)
}

refute!( pub fn happyReduction_17<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, (liftTypeQuals(happy_var_1)), happy_var_2, vec![], happy_var_3)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_18() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 10, box happyReduction_18)
}

refute!( pub fn happyReduction_18<t>(HappyStk(HappyAbsSyn12(happy_var_4), Some(box HappyStk(HappyAbsSyn11(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, (__op_addadd(liftTypeQuals(happy_var_1), liftCAttrs(happy_var_2))), happy_var_3, vec![], happy_var_4)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_19() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 10, box happyReduction_19)
}

refute!( pub fn happyReduction_19<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(HappyAbsSyn33(happy_var_2), Some(box HappyStk(HappyAbsSyn11(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, vec![], happy_var_1, (reverse(happy_var_2)), happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_20() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 10, box happyReduction_20)
}

refute!( pub fn happyReduction_20<t>(HappyStk(HappyAbsSyn12(happy_var_4), Some(box HappyStk(HappyAbsSyn33(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn132(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_2.clone(), partial_1!(CFunctionDef::<NodeInfo>, (liftCAttrs(happy_var_1)), happy_var_2, (reverse(happy_var_3)), happy_var_4)))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_21() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 10, box happyReduction_21)
}

refute!( pub fn happyReduction_21<t>(HappyStk(HappyAbsSyn12(happy_var_4), Some(box HappyStk(HappyAbsSyn33(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, happy_var_1, happy_var_2, (reverse(happy_var_3)), happy_var_4)))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_22() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 10, box happyReduction_22)
}

refute!( pub fn happyReduction_22<t>(HappyStk(HappyAbsSyn12(happy_var_4), Some(box HappyStk(HappyAbsSyn33(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, happy_var_1, happy_var_2, (reverse(happy_var_3)), happy_var_4)))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_23() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 10, box happyReduction_23)
}

refute!( pub fn happyReduction_23<t>(HappyStk(HappyAbsSyn12(happy_var_4), Some(box HappyStk(HappyAbsSyn33(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, (reverse(happy_var_1)), happy_var_2, (reverse(happy_var_3)), happy_var_4)))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_24() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 10, box happyReduction_24)
}

refute!( pub fn happyReduction_24<t>(HappyStk(HappyAbsSyn12(happy_var_4), Some(box HappyStk(HappyAbsSyn33(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, (liftTypeQuals(happy_var_1)), happy_var_2, (reverse(happy_var_3)), happy_var_4)))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_25() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 10, box happyReduction_25)
}

refute!( pub fn happyReduction_25<t>(HappyStk(HappyAbsSyn12(happy_var_5), Some(box HappyStk(HappyAbsSyn33(happy_var_4), Some(box HappyStk(HappyAbsSyn11(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, (__op_addadd(liftTypeQuals(happy_var_1), liftCAttrs(happy_var_2))), happy_var_3, (reverse(happy_var_4)), happy_var_5)))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_26() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 11, box happyReduction_26)
}

refute!( pub fn happyReduction_26<t>(HappyStk(HappyAbsSyn66(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen((({
            let declr = reverseDeclr(happy_var_1);

        rshift_monad(enterScope(), rshift_monad(doFuncParamDeclIdent(declr.clone()), __return(declr)))        })), (box move |r| { happyReturn((HappyAbsSyn11(r))) }))
} );

pub fn happyReduce_27() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 12, box happyReduction_27)
}

pub fn happyReduction_27(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn12(happy_var_1) => {
            HappyAbsSyn12(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_28() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 12, box happyReduction_28)
}

pub fn happyReduction_28(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn12(happy_var_1) => {
            HappyAbsSyn12(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_29() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 12, box happyReduction_29)
}

pub fn happyReduction_29(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn12(happy_var_1) => {
            HappyAbsSyn12(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_30() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 12, box happyReduction_30)
}

pub fn happyReduction_30(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn12(happy_var_1) => {
            HappyAbsSyn12(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_31() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 12, box happyReduction_31)
}

pub fn happyReduction_31(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn12(happy_var_1) => {
            HappyAbsSyn12(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_32() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 12, box happyReduction_32)
}

pub fn happyReduction_32(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn12(happy_var_1) => {
            HappyAbsSyn12(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_33() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 12, box happyReduction_33)
}

refute!( pub fn happyReduction_33<t>(HappyStk(HappyAbsSyn26(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| (CAsm(happy_var_1, _0))))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_34() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 13, box happyReduction_34)
}

refute!( pub fn happyReduction_34<t>(HappyStk(HappyAbsSyn12(happy_var_4), Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn131(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CLabel, happy_var_1, box happy_var_4, happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_35() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 13, box happyReduction_35)
}

refute!( pub fn happyReduction_35<t>(HappyStk(HappyAbsSyn12(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCase, happy_var_2, box happy_var_4)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_36() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 13, box happyReduction_36)
}

refute!( pub fn happyReduction_36<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDefault, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_37() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 13, box happyReduction_37)
}

refute!( pub fn happyReduction_37<t>(HappyStk(HappyAbsSyn12(happy_var_6), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCases, happy_var_2, happy_var_4, box happy_var_6)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_38() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 14, box happyReduction_38)
}

refute!( pub fn happyReduction_38<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn17(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCompound, vec![], (reverse(happy_var_3)))))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_39() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 14, box happyReduction_39)
}

refute!( pub fn happyReduction_39<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn17(happy_var_4), Some(box HappyStk(HappyAbsSyn21(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCompound, (reverse(happy_var_3)), (reverse(happy_var_4)))))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_40() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 0, 15, box happyReduction_40)
}

pub fn happyReduction_40<t, t1>(happyRest: t1, tk: t) -> P<HappyAbsSyn> {
    happyThen((enterScope()), (box move |r| { happyReturn((HappyAbsSyn15(r))) }))
}

pub fn happyReduce_41() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 0, 16, box happyReduction_41)
}

pub fn happyReduction_41<t, t1>(happyRest: t1, tk: t) -> P<HappyAbsSyn> {
    happyThen((leaveScope()), (box move |r| { happyReturn((HappyAbsSyn15(r))) }))
}

pub fn happyReduce_42() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 17, (happyReduction_42)())
}

pub fn happyReduction_42() -> HappyAbsSyn {
    HappyAbsSyn17((empty)())
}

pub fn happyReduce_43() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 17, box happyReduction_43)
}

pub fn happyReduction_43(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn18(happy_var_2), HappyAbsSyn17(happy_var_1)) => {
            HappyAbsSyn17((snoc(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_44() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 18, box happyReduction_44)
}

pub fn happyReduction_44(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn12(happy_var_1) => {
            HappyAbsSyn18((CBlockStmt(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_45() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 18, box happyReduction_45)
}

pub fn happyReduction_45(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn18(happy_var_1) => {
            HappyAbsSyn18(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_46() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 19, box happyReduction_46)
}

pub fn happyReduction_46(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn32(happy_var_1) => {
            HappyAbsSyn18((CBlockDecl(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_47() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 19, box happyReduction_47)
}

pub fn happyReduction_47(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn10(happy_var_1) => {
            HappyAbsSyn18((CNestedFunDef(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_48() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 19, box happyReduction_48)
}

pub fn happyReduction_48<t>(_0: HappyAbsSyn, _1: t) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn18(happy_var_2), _) => {
            HappyAbsSyn18(happy_var_2)
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_49() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 20, box happyReduction_49)
}

refute!( pub fn happyReduction_49<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, happy_var_1, happy_var_2, vec![], happy_var_3)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_50() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 20, box happyReduction_50)
}

refute!( pub fn happyReduction_50<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, happy_var_1, happy_var_2, vec![], happy_var_3)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_51() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 20, box happyReduction_51)
}

refute!( pub fn happyReduction_51<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, (reverse(happy_var_1)), happy_var_2, vec![], happy_var_3)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_52() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 20, box happyReduction_52)
}

refute!( pub fn happyReduction_52<t>(HappyStk(HappyAbsSyn12(happy_var_3), Some(box HappyStk(HappyAbsSyn11(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, (liftTypeQuals(happy_var_1)), happy_var_2, vec![], happy_var_3)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_53() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 20, box happyReduction_53)
}

refute!( pub fn happyReduction_53<t>(HappyStk(HappyAbsSyn12(happy_var_4), Some(box HappyStk(HappyAbsSyn11(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((rshift_monad(leaveScope(), (withNodeInfo(happy_var_1.clone(), partial_1!(CFunctionDef::<NodeInfo>, (__op_addadd(liftTypeQuals(happy_var_1), liftCAttrs(happy_var_2))), happy_var_3, vec![], happy_var_4)))))), (box move |r| { happyReturn((HappyAbsSyn10(r))) }))
} );

pub fn happyReduce_54() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 21, box happyReduction_54)
}

pub fn happyReduction_54<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn21(happy_var_2), _) => {
            HappyAbsSyn21(happy_var_2)
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_55() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 21, box happyReduction_55)
}

refute!( pub fn happyReduction_55(HappyStk(_, Some(box HappyStk(HappyAbsSyn21(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn21(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn21((rappendr(happy_var_1, happy_var_3))), Some(box happyRest))
} );

pub fn happyReduce_56() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 22, box happyReduction_56)
}

refute!( pub fn happyReduction_56<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CExpr, None)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_57() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 22, box happyReduction_57)
}

refute!( pub fn happyReduction_57<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CExpr, (Some(happy_var_1)))))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_58() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 23, box happyReduction_58)
}

refute!( pub fn happyReduction_58<t>(HappyStk(HappyAbsSyn12(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CIf, happy_var_3, box happy_var_5, None)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_59() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 7, 23, box happyReduction_59)
}

refute!( pub fn happyReduction_59<t>(HappyStk(HappyAbsSyn12(happy_var_7), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn12(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CIf, happy_var_3, box happy_var_5, (Some(box happy_var_7)))))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_60() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 23, box happyReduction_60)
}

refute!( pub fn happyReduction_60<t>(HappyStk(HappyAbsSyn12(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CSwitch, happy_var_3, box happy_var_5)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_61() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 24, box happyReduction_61)
}

refute!( pub fn happyReduction_61<t>(HappyStk(HappyAbsSyn12(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CWhile, happy_var_3, box happy_var_5, false)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_62() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 7, 24, box happyReduction_62)
}

refute!( pub fn happyReduction_62<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn12(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CWhile, happy_var_5, box happy_var_2, true)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_63() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 9, 24, box happyReduction_63)
}

refute!( pub fn happyReduction_63<t>(HappyStk(HappyAbsSyn12(happy_var_9), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn124(happy_var_7), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn124(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn124(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CFor, (Left(happy_var_3)), happy_var_5, happy_var_7, box happy_var_9)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_64() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 10, 24, box happyReduction_64)
}

refute!( pub fn happyReduction_64<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn12(happy_var_9), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn124(happy_var_7), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn124(happy_var_5), Some(box HappyStk(HappyAbsSyn32(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CFor, (Right(happy_var_4)), happy_var_5, happy_var_7, box happy_var_9)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_65() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 25, box happyReduction_65)
}

refute!( pub fn happyReduction_65<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn131(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CGoto, happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_66() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 25, box happyReduction_66)
}

refute!( pub fn happyReduction_66<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CGotoPtr, happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_67() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 25, box happyReduction_67)
}

refute!( pub fn happyReduction_67<t>(HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCont)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_68() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 25, box happyReduction_68)
}

refute!( pub fn happyReduction_68<t>(HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBreak)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_69() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 25, box happyReduction_69)
}

refute!( pub fn happyReduction_69<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn124(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CReturn, happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn12(r))) }))
} );

pub fn happyReduce_70() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 26, box happyReduction_70)
}

refute!( pub fn happyReduction_70<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn128(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn27(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAssemblyStatement::<NodeInfo>, happy_var_2, happy_var_4, vec![], vec![], vec![])))), (box move |r| { happyReturn((HappyAbsSyn26(r))) }))
} );

pub fn happyReduce_71() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 8, 26, box happyReduction_71)
}

refute!( pub fn happyReduction_71<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn28(happy_var_6), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn128(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn27(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAssemblyStatement::<NodeInfo>, happy_var_2, happy_var_4, happy_var_6, vec![], vec![])))), (box move |r| { happyReturn((HappyAbsSyn26(r))) }))
} );

pub fn happyReduce_72() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 10, 26, box happyReduction_72)
}

refute!( pub fn happyReduction_72<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn28(happy_var_8), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn28(happy_var_6), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn128(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn27(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAssemblyStatement::<NodeInfo>, happy_var_2, happy_var_4, happy_var_6, happy_var_8, vec![])))), (box move |r| { happyReturn((HappyAbsSyn26(r))) }))
} );

pub fn happyReduce_73() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 12, 26, box happyReduction_73)
}

refute!( pub fn happyReduction_73<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn31(happy_var_10), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn28(happy_var_8), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn28(happy_var_6), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn128(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn27(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAssemblyStatement::<NodeInfo>, happy_var_2, happy_var_4, happy_var_6, happy_var_8, (reverse(happy_var_10)))))), (box move |r| { happyReturn((HappyAbsSyn26(r))) }))
} );

pub fn happyReduce_74() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 27, (happyReduction_74)())
}

pub fn happyReduction_74() -> HappyAbsSyn {
    HappyAbsSyn27(None)
}

pub fn happyReduce_75() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 27, box happyReduction_75)
}

pub fn happyReduction_75(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn64(happy_var_1) => {
            HappyAbsSyn27((Some(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_76() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 28, (happyReduction_76)())
}

pub fn happyReduction_76() -> HappyAbsSyn {
    HappyAbsSyn28((vec![]))
}

pub fn happyReduce_77() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 28, box happyReduction_77)
}

pub fn happyReduction_77(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn29(happy_var_1) => {
            HappyAbsSyn28((reverse(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_78() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 29, box happyReduction_78)
}

pub fn happyReduction_78(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn30(happy_var_1) => {
            HappyAbsSyn29((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_79() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 29, box happyReduction_79)
}

pub fn happyReduction_79<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn30(happy_var_3), _, HappyAbsSyn29(happy_var_1)) => {
            HappyAbsSyn29((snoc(happy_var_1, happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_80() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 30, box happyReduction_80)
}

refute!( pub fn happyReduction_80<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn128(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAssemblyOperand::<NodeInfo>, None, happy_var_1, happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn30(r))) }))
} );

pub fn happyReduce_81() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 7, 30, box happyReduction_81)
}

refute!( pub fn happyReduction_81<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_6), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn128(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(CTokIdent(_, happy_var_2)), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAssemblyOperand::<NodeInfo>, (Some(happy_var_2)), happy_var_4, happy_var_6)))), (box move |r| { happyReturn((HappyAbsSyn30(r))) }))
} );

pub fn happyReduce_82() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 7, 30, box happyReduction_82)
}

refute!( pub fn happyReduction_82<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_6), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn128(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(CTokTyIdent(_, happy_var_2)), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAssemblyOperand::<NodeInfo>, (Some(happy_var_2)), happy_var_4, happy_var_6)))), (box move |r| { happyReturn((HappyAbsSyn30(r))) }))
} );

pub fn happyReduce_83() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 31, box happyReduction_83)
}

pub fn happyReduction_83(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn128(happy_var_1) => {
            HappyAbsSyn31((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_84() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 31, box happyReduction_84)
}

pub fn happyReduction_84<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn128(happy_var_3), _, HappyAbsSyn31(happy_var_1)) => {
            HappyAbsSyn31((snoc(happy_var_1, happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_85() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 32, box happyReduction_85)
}

refute!( pub fn happyReduction_85<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (reverse(happy_var_1)), vec![])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_86() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 32, box happyReduction_86)
}

refute!( pub fn happyReduction_86<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (reverse(happy_var_1)), vec![])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_87() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 32, box happyReduction_87)
}

refute!( pub fn happyReduction_87<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((match happy_var_1 {
            CDecl(declspecs, dies, at) => {
                withLength(at, box move |_0| CDecl(declspecs.clone(), (List::reverse(dies.clone())), _0))
            },
            _ => panic!("Irrefutable pattern"),
        })), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_88() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 32, box happyReduction_88)
}

refute!( pub fn happyReduction_88<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((match happy_var_1 {
            CDecl(declspecs, dies, at) => {
                withLength(at, box move |_0| (CDecl(declspecs.clone(), (List::reverse(dies.clone())), _0)))
            },
            _ => panic!("Irrefutable pattern"),
        })), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_89() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 7, 32, box happyReduction_89)
}

refute!( pub fn happyReduction_89<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn128(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CStaticAssert, happy_var_3, happy_var_5)))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_90() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 33, (happyReduction_90)())
}

pub fn happyReduction_90() -> HappyAbsSyn {
    HappyAbsSyn33((empty)())
}

pub fn happyReduce_91() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 33, box happyReduction_91)
}

pub fn happyReduction_91(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn32(happy_var_2), HappyAbsSyn33(happy_var_1)) => {
            HappyAbsSyn33((snoc(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_92() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 34, box happyReduction_92)
}

refute!( pub fn happyReduction_92<t>(HappyStk(HappyAbsSyn94(happy_var_4), Some(box HappyStk(HappyAbsSyn35(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen((({
            let declspecs = reverse(happy_var_1.clone());

        /*do*/ {
                thenP(withAsmNameAttrs(happy_var_3, happy_var_2), box move |declr| {
                    clones!(happy_var_4, happy_var_1, declspecs);
                doDeclIdent(declspecs.clone(), declr.clone());
                withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, declspecs.clone(), vec![(Some((reverseDeclr(declr.clone()))), happy_var_4, None)]))
                })
            }        })), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_93() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 34, box happyReduction_93)
}

refute!( pub fn happyReduction_93<t>(HappyStk(HappyAbsSyn94(happy_var_4), Some(box HappyStk(HappyAbsSyn35(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen((({
            let declspecs = liftTypeQuals(happy_var_1.clone());

        /*do*/ {
                thenP(withAsmNameAttrs(happy_var_3, happy_var_2), box move |declr| {
                    clones!(happy_var_4, happy_var_1, declspecs);
                    doDeclIdent(declspecs.clone(), declr.clone());
                    withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, declspecs.clone(), vec![(Some((reverseDeclr(declr.clone()))), happy_var_4, None)]))
                })
            }        })), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_94() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 34, box happyReduction_94)
}

refute!( pub fn happyReduction_94<t>(HappyStk(HappyAbsSyn94(happy_var_5), Some(box HappyStk(HappyAbsSyn35(happy_var_4), Some(box HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen((({
            let declspecs = liftTypeQuals(happy_var_1.clone());

        /*do*/ {
                thenP(withAsmNameAttrs(happy_var_4, happy_var_3), box move |declr| {
                    clones!(happy_var_2, happy_var_5, declspecs);
                    doDeclIdent(declspecs.clone(), declr.clone());
                    withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (__op_addadd(declspecs.clone(), liftCAttrs(happy_var_2))), vec![(Some((reverseDeclr(declr.clone()))), happy_var_5, None)]))
                })
            }        })), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_95() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 34, box happyReduction_95)
}

refute!( pub fn happyReduction_95<t>(HappyStk(HappyAbsSyn94(happy_var_4), Some(box HappyStk(HappyAbsSyn35(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn132(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen((({
            let declspecs = liftCAttrs(happy_var_1.clone());

        /*do*/ {
                thenP(withAsmNameAttrs(happy_var_3, happy_var_2), box move |declr| {
                    clones!(happy_var_4, declspecs);

                doDeclIdent(declspecs.clone(), declr.clone());
                withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, declspecs.clone(), vec![(Some((reverseDeclr(declr.clone()))), happy_var_4, None)]))
                })
            }        })), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_96() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 34, box happyReduction_96)
}

refute!( pub fn happyReduction_96<t>(HappyStk(HappyAbsSyn94(happy_var_6), Some(box HappyStk(HappyAbsSyn35(happy_var_5), Some(box HappyStk(HappyAbsSyn66(happy_var_4), Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((match happy_var_1 {
            CDecl(declspecs, dies, at) => {
                /*do*/ {
                    clones!(happy_var_5);
                    thenP(withAsmNameAttrs((fst(happy_var_5.clone()), __op_addadd(snd(happy_var_5), happy_var_3)), happy_var_4), box move |declr| {
                        clones!(happy_var_6, declspecs, dies, at);
                        doDeclIdent(declspecs.clone(), declr.clone());
                        withLength(at.clone(), box move |_0| CDecl(declspecs.clone(), (__op_concat((Some((reverseDeclr(declr.clone()))), happy_var_6.clone(), None), dies.clone())), _0))
                    })
                }
            },
            _ => panic!("Irrefutable pattern"),
        })), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_97() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 35, box happyReduction_97)
}

pub fn happyReduction_97(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn67(happy_var_1)) => {
            HappyAbsSyn35(((happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_98() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 36, box happyReduction_98)
}

refute!( pub fn happyReduction_98<t>(HappyStk(HappyAbsSyn94(happy_var_4), Some(box HappyStk(HappyAbsSyn35(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((/*do*/ {
            thenP(withAsmNameAttrs(happy_var_3, happy_var_2), box move |declr| {
                clones!(happy_var_1, happy_var_4);
                doDeclIdent(happy_var_1.clone(), declr.clone());
                withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![(Some((reverseDeclr(declr.clone()))), happy_var_4, None)]))
            })
        })), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_99() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 36, box happyReduction_99)
}

refute!( pub fn happyReduction_99<t>(HappyStk(HappyAbsSyn94(happy_var_4), Some(box HappyStk(HappyAbsSyn35(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((/*do*/ {
            thenP(withAsmNameAttrs(happy_var_3, happy_var_2), box move |declr| {
                clones!(happy_var_1, happy_var_4);
                doDeclIdent(happy_var_1.clone(), declr.clone());
                withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![(Some((reverseDeclr(declr.clone()))), happy_var_4, None)]))
            })
        })), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_100() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 36, box happyReduction_100)
}

refute!( pub fn happyReduction_100<t>(HappyStk(HappyAbsSyn94(happy_var_6), Some(box HappyStk(HappyAbsSyn35(happy_var_5), Some(box HappyStk(HappyAbsSyn66(happy_var_4), Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((match happy_var_1 {
            CDecl(declspecs, dies, at) => {
                /*do*/ {
                    thenP(withAsmNameAttrs((fst(happy_var_5.clone()), __op_addadd(snd(happy_var_5), happy_var_3)), happy_var_4), box move |declr| {
                        doDeclIdent(declspecs.clone(), declr.clone());
                        __return((CDecl(declspecs.clone(), (__op_concat((Some((reverseDeclr(declr))), happy_var_6.clone(), None), dies.clone())), at.clone())))
                    })
                }
            },
            _ => panic!("Irrefutable pattern"),
        })), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_101() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 37, box happyReduction_101)
}

pub fn happyReduction_101(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn38(happy_var_1) => {
            HappyAbsSyn37((reverse(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_102() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 37, box happyReduction_102)
}

pub fn happyReduction_102(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn38(happy_var_1) => {
            HappyAbsSyn37((reverse(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_103() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 37, box happyReduction_103)
}

pub fn happyReduction_103(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn38(happy_var_1) => {
            HappyAbsSyn37((reverse(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_104() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 38, box happyReduction_104)
}

pub fn happyReduction_104(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn39(happy_var_1) => {
            HappyAbsSyn38((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_105() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 38, box happyReduction_105)
}

pub fn happyReduction_105(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn39(happy_var_2), HappyAbsSyn132(happy_var_1)) => {
            HappyAbsSyn38((snoc(reverseList((liftCAttrs(happy_var_1))), happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_106() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 38, box happyReduction_106)
}

pub fn happyReduction_106(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn39(happy_var_2), HappyAbsSyn65(happy_var_1)) => {
            HappyAbsSyn38((snoc(rmap(CTypeQual, happy_var_1), happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_107() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 38, box happyReduction_107)
}

pub fn happyReduction_107(_0: HappyAbsSyn, _1: HappyAbsSyn, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn39(happy_var_3), HappyAbsSyn132(happy_var_2), HappyAbsSyn65(happy_var_1)) => {
            HappyAbsSyn38((snoc((rappend(rmap(CTypeQual, happy_var_1), liftCAttrs(happy_var_2))), happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_108() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 38, box happyReduction_108)
}

pub fn happyReduction_108(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn39(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_109() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 38, box happyReduction_109)
}

pub fn happyReduction_109(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((addTrailingAttrs(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_110() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 39, box happyReduction_110)
}

pub fn happyReduction_110(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn41(happy_var_1) => {
            HappyAbsSyn39((CStorageSpec(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_111() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 39, box happyReduction_111)
}

pub fn happyReduction_111(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn64(happy_var_1) => {
            HappyAbsSyn39((CTypeQual(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_112() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 39, box happyReduction_112)
}

pub fn happyReduction_112(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn42(happy_var_1) => {
            HappyAbsSyn39((CFunSpec(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_113() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 39, box happyReduction_113)
}

pub fn happyReduction_113(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn43(happy_var_1) => {
            HappyAbsSyn39((CAlignSpec(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_114() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 40, box happyReduction_114)
}

pub fn happyReduction_114(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn41(happy_var_1) => {
            HappyAbsSyn39((CStorageSpec(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_115() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 40, box happyReduction_115)
}

pub fn happyReduction_115(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn42(happy_var_1) => {
            HappyAbsSyn39((CFunSpec(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_116() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 40, box happyReduction_116)
}

pub fn happyReduction_116(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn43(happy_var_1) => {
            HappyAbsSyn39((CAlignSpec(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_117() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 41, box happyReduction_117)
}

refute!( pub fn happyReduction_117<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CTypedef)))), (box move |r| { happyReturn((HappyAbsSyn41(r))) }))
} );

pub fn happyReduce_118() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 41, box happyReduction_118)
}

refute!( pub fn happyReduction_118<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CExtern)))), (box move |r| { happyReturn((HappyAbsSyn41(r))) }))
} );

pub fn happyReduce_119() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 41, box happyReduction_119)
}

refute!( pub fn happyReduction_119<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CStatic)))), (box move |r| { happyReturn((HappyAbsSyn41(r))) }))
} );

pub fn happyReduce_120() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 41, box happyReduction_120)
}

refute!( pub fn happyReduction_120<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAuto)))), (box move |r| { happyReturn((HappyAbsSyn41(r))) }))
} );

pub fn happyReduce_121() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 41, box happyReduction_121)
}

refute!( pub fn happyReduction_121<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CRegister)))), (box move |r| { happyReturn((HappyAbsSyn41(r))) }))
} );

pub fn happyReduce_122() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 41, box happyReduction_122)
}

refute!( pub fn happyReduction_122<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CThread)))), (box move |r| { happyReturn((HappyAbsSyn41(r))) }))
} );

pub fn happyReduce_123() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 42, box happyReduction_123)
}

refute!( pub fn happyReduction_123<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CInlineQual)))), (box move |r| { happyReturn((HappyAbsSyn42(r))) }))
} );

pub fn happyReduce_124() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 42, box happyReduction_124)
}

refute!( pub fn happyReduction_124<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CNoreturnQual)))), (box move |r| { happyReturn((HappyAbsSyn42(r))) }))
} );

pub fn happyReduce_125() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 43, box happyReduction_125)
}

refute!( pub fn happyReduction_125<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAlignAsType, happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn43(r))) }))
} );

pub fn happyReduce_126() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 43, box happyReduction_126)
}

refute!( pub fn happyReduction_126<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAlignAsExpr, happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn43(r))) }))
} );

pub fn happyReduce_127() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 44, box happyReduction_127)
}

pub fn happyReduction_127(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn38(happy_var_1) => {
            HappyAbsSyn37((reverse(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_128() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 44, box happyReduction_128)
}

pub fn happyReduction_128(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn38(happy_var_1) => {
            HappyAbsSyn37((reverse(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_129() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 44, box happyReduction_129)
}

pub fn happyReduction_129(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn38(happy_var_1) => {
            HappyAbsSyn37((reverse(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_130() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_130)
}

refute!( pub fn happyReduction_130<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CVoidType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_131() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_131)
}

refute!( pub fn happyReduction_131<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCharType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_132() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_132)
}

refute!( pub fn happyReduction_132<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CShortType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_133() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_133)
}

refute!( pub fn happyReduction_133<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CIntType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_134() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_134)
}

refute!( pub fn happyReduction_134<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CLongType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_135() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_135)
}

refute!( pub fn happyReduction_135<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CFloatType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_136() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_136)
}

refute!( pub fn happyReduction_136<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDoubleType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_137() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_137)
}

refute!( pub fn happyReduction_137<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CSignedType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_138() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_138)
}

refute!( pub fn happyReduction_138<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CUnsigType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_139() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_139)
}

refute!( pub fn happyReduction_139<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBoolType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_140() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_140)
}

refute!( pub fn happyReduction_140<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CComplexType)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_141() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 45, box happyReduction_141)
}

refute!( pub fn happyReduction_141<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CInt128Type)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_142() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 46, box happyReduction_142)
}

pub fn happyReduction_142(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn45(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, CTypeSpec(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_143() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 46, box happyReduction_143)
}

pub fn happyReduction_143(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn41(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, CStorageSpec(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_144() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 46, box happyReduction_144)
}

pub fn happyReduction_144(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn39(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_145() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 46, box happyReduction_145)
}

pub fn happyReduction_145(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn45(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, CTypeSpec(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_146() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 46, box happyReduction_146)
}

pub fn happyReduction_146(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((addTrailingAttrs(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_147() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 47, box happyReduction_147)
}

pub fn happyReduction_147(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn45(happy_var_1) => {
            HappyAbsSyn38((singleton((CTypeSpec(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_148() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 47, box happyReduction_148)
}

pub fn happyReduction_148(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn45(happy_var_2), HappyAbsSyn132(happy_var_1)) => {
            HappyAbsSyn38((snoc((reverseList(liftCAttrs(happy_var_1))), (CTypeSpec(happy_var_2)))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_149() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 47, box happyReduction_149)
}

pub fn happyReduction_149(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn45(happy_var_2), HappyAbsSyn65(happy_var_1)) => {
            HappyAbsSyn38((snoc(rmap(CTypeQual, happy_var_1), CTypeSpec(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_150() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 47, box happyReduction_150)
}

pub fn happyReduction_150(_0: HappyAbsSyn, _1: HappyAbsSyn, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn45(happy_var_3), HappyAbsSyn132(happy_var_2), HappyAbsSyn65(happy_var_1)) => {
            HappyAbsSyn38((snoc(rappend(rmap(CTypeQual, happy_var_1), liftCAttrs(happy_var_2)), CTypeSpec(happy_var_3))))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_151() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 47, box happyReduction_151)
}

pub fn happyReduction_151(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn64(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, CTypeQual(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_152() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 47, box happyReduction_152)
}

pub fn happyReduction_152(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn45(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, CTypeSpec(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_153() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 47, box happyReduction_153)
}

pub fn happyReduction_153(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((addTrailingAttrs(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_154() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 48, box happyReduction_154)
}

pub fn happyReduction_154(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn45(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, CTypeSpec(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_155() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 48, box happyReduction_155)
}

pub fn happyReduction_155(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn41(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, CStorageSpec(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_156() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 48, box happyReduction_156)
}

pub fn happyReduction_156(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn39(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_157() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 48, box happyReduction_157)
}

pub fn happyReduction_157(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((addTrailingAttrs(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_158() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 49, box happyReduction_158)
}

pub fn happyReduction_158(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn45(happy_var_1) => {
            HappyAbsSyn38((singleton((CTypeSpec(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_159() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 49, box happyReduction_159)
}

pub fn happyReduction_159(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn45(happy_var_2), HappyAbsSyn132(happy_var_1)) => {
            HappyAbsSyn38((snoc((reverseList(liftCAttrs(happy_var_1))), (CTypeSpec(happy_var_2)))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_160() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 49, box happyReduction_160)
}

pub fn happyReduction_160(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn45(happy_var_2), HappyAbsSyn65(happy_var_1)) => {
            HappyAbsSyn38((snoc(rmap(CTypeQual, happy_var_1), CTypeSpec(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_161() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 49, box happyReduction_161)
}

pub fn happyReduction_161(_0: HappyAbsSyn, _1: HappyAbsSyn, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn45(happy_var_3), HappyAbsSyn132(happy_var_2), HappyAbsSyn65(happy_var_1)) => {
            HappyAbsSyn38((snoc(rappend(rmap(CTypeQual, happy_var_1), (liftCAttrs(happy_var_2))), CTypeSpec(happy_var_3))))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_162() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 49, box happyReduction_162)
}

pub fn happyReduction_162(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn64(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, CTypeQual(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_163() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 49, box happyReduction_163)
}

pub fn happyReduction_163(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((addTrailingAttrs(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_164() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 50, box happyReduction_164)
}

pub fn happyReduction_164(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn41(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, CStorageSpec(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_165() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 50, box happyReduction_165)
}

refute!( pub fn happyReduction_165<t>(HappyStk(HappyTerminal(CTokTyIdent(_, happy_var_2)), Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_2.clone(), box |at| { snoc(happy_var_1, CTypeSpec((CTypeDef(happy_var_2, at)))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_166() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 50, box happyReduction_166)
}

refute!( pub fn happyReduction_166<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_2), Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_2.clone(), box |at| { snoc(happy_var_1, CTypeSpec((CTypeOfExpr(happy_var_4, at)))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_167() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 50, box happyReduction_167)
}

refute!( pub fn happyReduction_167<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_2), Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_2.clone(), box |at| { snoc(happy_var_1, CTypeSpec((CTypeOfType(happy_var_4, at)))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_168() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 50, box happyReduction_168)
}

pub fn happyReduction_168(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn39(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_169() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 50, box happyReduction_169)
}

pub fn happyReduction_169(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((addTrailingAttrs(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_170() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 51, box happyReduction_170)
}

refute!( pub fn happyReduction_170<t>(HappyStk(HappyTerminal(CTokTyIdent(_, happy_var_1)), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box |at| { singleton((CTypeSpec((CTypeDef(happy_var_1, at))))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_171() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 51, box happyReduction_171)
}

refute!( pub fn happyReduction_171<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box |at| { singleton((CTypeSpec((CTypeOfExpr(happy_var_3, at))))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_172() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 51, box happyReduction_172)
}

refute!( pub fn happyReduction_172<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box |at| { singleton((CTypeSpec((CTypeOfType(happy_var_3, at))))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_173() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 51, box happyReduction_173)
}

refute!( pub fn happyReduction_173<t>(HappyStk(HappyTerminal(CTokTyIdent(_, happy_var_2)), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_2.clone(), box |at| { snoc(rmap(CTypeQual, happy_var_1), CTypeSpec((CTypeDef(happy_var_2, at)))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_174() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 51, box happyReduction_174)
}

refute!( pub fn happyReduction_174<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_2.clone(), box |at| { snoc(rmap(CTypeQual, happy_var_1), CTypeSpec((CTypeOfExpr(happy_var_4, at)))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_175() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 51, box happyReduction_175)
}

refute!( pub fn happyReduction_175<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_2.clone(), box |at| { snoc(rmap(CTypeQual, happy_var_1), CTypeSpec((CTypeOfType(happy_var_4, at)))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_176() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 51, box happyReduction_176)
}

refute!( pub fn happyReduction_176<t>(HappyStk(HappyTerminal(CTokTyIdent(_, happy_var_2)), Some(box HappyStk(HappyAbsSyn132(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_2.clone(), box |at| { snoc(reverseList((liftCAttrs(happy_var_1))), (CTypeSpec((CTypeDef(happy_var_2, at))))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_177() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 51, box happyReduction_177)
}

refute!( pub fn happyReduction_177<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box |at| { snoc(reverseList((liftCAttrs(happy_var_1))), (CTypeSpec((CTypeOfExpr(happy_var_4, at))))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_178() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 51, box happyReduction_178)
}

refute!( pub fn happyReduction_178<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_2), Some(box HappyStk(HappyAbsSyn132(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_2.clone(), box |at| { snoc(reverseList((liftCAttrs(happy_var_1))), (CTypeSpec((CTypeOfType(happy_var_4, at))))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_179() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 51, box happyReduction_179)
}

refute!( pub fn happyReduction_179<t>(HappyStk(HappyTerminal(CTokTyIdent(_, happy_var_3)), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_3.clone(), box |at| { snoc(rappend(rmap(CTypeQual, happy_var_1), (liftCAttrs(happy_var_2))), CTypeSpec((CTypeDef(happy_var_3, at)))) }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_180() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 51, box happyReduction_180)
}

refute!( pub fn happyReduction_180<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_3.clone(), box |at| {
        snoc(rappend(rmap(CTypeQual, happy_var_1), (liftCAttrs(happy_var_2))), CTypeSpec((CTypeOfExpr(happy_var_5, at))))
        }))), (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_181() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 51, box happyReduction_181)
}

refute!( pub fn happyReduction_181<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_3.clone(), box |at| {
        snoc(rappend(rmap(CTypeQual, happy_var_1), (liftCAttrs(happy_var_2))),
            CTypeSpec((CTypeOfType(happy_var_5, at))))
    }))),
    (box move |r| { happyReturn((HappyAbsSyn38(r))) }))
} );

pub fn happyReduce_182() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 51, box happyReduction_182)
}

pub fn happyReduction_182(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn64(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((snoc(happy_var_1, CTypeQual(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_183() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 51, box happyReduction_183)
}

pub fn happyReduction_183(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn38(happy_var_1)) => {
            HappyAbsSyn38((addTrailingAttrs(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_184() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 52, box happyReduction_184)
}

refute!( pub fn happyReduction_184<t>(HappyStk(HappyAbsSyn53(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CSUType, happy_var_1)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_185() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 52, box happyReduction_185)
}

refute!( pub fn happyReduction_185<t>(HappyStk(HappyAbsSyn61(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CEnumType, happy_var_1)))), (box move |r| { happyReturn((HappyAbsSyn45(r))) }))
} );

pub fn happyReduce_186() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 53, box happyReduction_186)
}

refute!( pub fn happyReduction_186<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn33(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn131(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn54(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CStructureUnion::<NodeInfo>, (unL(happy_var_1)), (Some(happy_var_3)), (Some(reverse(happy_var_5))), happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn53(r))) }))
} );

pub fn happyReduce_187() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 53, box happyReduction_187)
}

refute!( pub fn happyReduction_187<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn33(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn54(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CStructureUnion::<NodeInfo>, (unL(happy_var_1)), None, (Some(reverse(happy_var_4))), happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn53(r))) }))
} );

pub fn happyReduce_188() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 53, box happyReduction_188)
}

refute!( pub fn happyReduction_188<t>(HappyStk(HappyAbsSyn131(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn54(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CStructureUnion::<NodeInfo>, (unL(happy_var_1)), (Some(happy_var_3)), None, happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn53(r))) }))
} );

pub fn happyReduce_189() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 54, box happyReduction_189)
}

pub fn happyReduction_189(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn54((Located(CStructTag, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_190() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 54, box happyReduction_190)
}

pub fn happyReduction_190(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn54((Located(CUnionTag, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_191() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 55, (happyReduction_191)())
}

pub fn happyReduction_191() -> HappyAbsSyn {
    HappyAbsSyn33((empty)())
}

pub fn happyReduce_192() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 55, box happyReduction_192)
}

pub fn happyReduction_192<t>(_0: t, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (_, HappyAbsSyn33(happy_var_1)) => {
            HappyAbsSyn33(happy_var_1)
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_193() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 55, box happyReduction_193)
}

pub fn happyReduction_193(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn32(happy_var_2), HappyAbsSyn33(happy_var_1)) => {
            HappyAbsSyn33((snoc(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_194() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 56, box happyReduction_194)
}

pub fn happyReduction_194<t>(_0: t, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (_, HappyAbsSyn32(happy_var_1)) => {
            HappyAbsSyn32((match happy_var_1 {
                    CDecl(declspecs, dies, at) => {
                        CDecl(declspecs, (List::reverse(dies)), at)
                    },
                    _ => panic!("Irrefutable pattern."),
                }))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_195() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 56, box happyReduction_195)
}

pub fn happyReduction_195<t>(_0: t, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (_, HappyAbsSyn32(happy_var_1)) => {
            HappyAbsSyn32((match happy_var_1 {
                    CDecl(declspecs, dies, at) => {
                        CDecl(declspecs, (List::reverse(dies)), at)
                    },
                    _ => panic!("Irrefutable pattern."),
                }))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_196() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 56, box happyReduction_196)
}

pub fn happyReduction_196<t>(_0: HappyAbsSyn, _1: t) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn32(happy_var_2), _) => {
            HappyAbsSyn32(happy_var_2)
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_197() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 57, box happyReduction_197)
}

refute!( pub fn happyReduction_197<t>(HappyStk(HappyAbsSyn59(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), match happy_var_3 {
                (d, s) => {
                    box move |_0| CDecl((__op_addadd(liftTypeQuals(happy_var_1), liftCAttrs(happy_var_2))), vec![(d.clone(), None, s.clone())], _0)
                },
            }))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_198() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 57, box happyReduction_198)
}

refute!( pub fn happyReduction_198<t>(HappyStk(HappyAbsSyn59(happy_var_2), Some(box HappyStk(HappyAbsSyn132(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), match happy_var_2 {
                (d, s) => {
                    box move |_0| CDecl((liftCAttrs(happy_var_1)), vec![(d.clone(), None, s.clone())], _0)
                },
            }))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_199() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 57, box happyReduction_199)
}

refute!( pub fn happyReduction_199(HappyStk(HappyAbsSyn59(happy_var_4), Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn32((match happy_var_1 {
            CDecl(declspecs, dies, at) => {
                match happy_var_4 {
                    (Some(d), s) => {
                        CDecl(declspecs, (__op_concat((Some(appendObjAttrs(happy_var_3, d)), None, s), dies)), at)
                    },
                    (None, s) => {
                        CDecl(declspecs, (__op_concat((None, None, s), dies)), at)
                    },
                }
            },
            _ => panic!("Irrefutable patern"),
        })), Some(box happyRest))
} );

pub fn happyReduce_200() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 58, box happyReduction_200)
}

refute!( pub fn happyReduction_200<t>(HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn59(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), match happy_var_2 {
                (Some(d), s) => {
                    box move |_0| CDecl(happy_var_1, vec![(Some(appendObjAttrs(happy_var_3, d.clone())), None, s.clone())], _0)
                },
                (None, s) => {
                    box move |_0| CDecl(happy_var_1, vec![(None, None, s.clone())], _0)
                },
            }))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_201() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 5, 58, box happyReduction_201)
}

refute!( pub fn happyReduction_201(HappyStk(HappyAbsSyn132(happy_var_5), Some(box HappyStk(HappyAbsSyn59(happy_var_4), Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn32((match happy_var_1 {
            CDecl(declspecs, dies, attr) => {
                match happy_var_4 {
                    (Some(d), s) => {
                        CDecl(declspecs, (__op_concat((Some(appendObjAttrs((__op_addadd(happy_var_3, happy_var_5)), d)), None, s), dies)), attr)
                    },
                    (None, s) => {
                        CDecl(declspecs, (__op_concat((None, None, s), dies)), attr)
                    },
                }
            },
            _ => panic!("Irrefutable pattern"),
        })), Some(box happyRest))
} );

pub fn happyReduce_202() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 58, box happyReduction_202)
}

refute!( pub fn happyReduction_202<t>(HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_203() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 59, box happyReduction_203)
}

pub fn happyReduction_203(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn59(((Some((reverseDeclr(happy_var_1))), None)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_204() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 59, box happyReduction_204)
}

pub fn happyReduction_204<t>(_0: HappyAbsSyn, _1: t) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn100(happy_var_2), _) => {
            HappyAbsSyn59(((None, Some(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_205() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 59, box happyReduction_205)
}

pub fn happyReduction_205<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn100(happy_var_3), _, HappyAbsSyn66(happy_var_1)) => {
            HappyAbsSyn59(((Some((reverseDeclr(happy_var_1))), Some(happy_var_3))))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_206() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 60, box happyReduction_206)
}

pub fn happyReduction_206(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn59(((Some((reverseDeclr(happy_var_1))), None)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_207() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 60, box happyReduction_207)
}

pub fn happyReduction_207<t>(_0: HappyAbsSyn, _1: t) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn100(happy_var_2), _) => {
            HappyAbsSyn59(((None, Some(happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_208() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 60, box happyReduction_208)
}

pub fn happyReduction_208<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn100(happy_var_3), _, HappyAbsSyn66(happy_var_1)) => {
            HappyAbsSyn59(((Some((reverseDeclr(happy_var_1))), Some(happy_var_3))))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_209() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 60, box happyReduction_209)
}

pub fn happyReduction_209(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn59(happy_var_1)) => {
            HappyAbsSyn59((match happy_var_1 {
                    (None, expr) => {
                        (None, expr)
                    },
                    (Some(CDeclarator(name, derived, asmname, attrs, node)), bsz) => {
                        (Some((CDeclarator::<NodeInfo>(name, derived, asmname, (__op_addadd(attrs, happy_var_2)), node))), bsz)
                    },
                }))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_210() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 61, box happyReduction_210)
}

refute!( pub fn happyReduction_210<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn62(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CEnumeration::<NodeInfo>, None, (Some(reverse(happy_var_4))), happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn61(r))) }))
} );

pub fn happyReduce_211() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 61, box happyReduction_211)
}

refute!( pub fn happyReduction_211<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn62(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CEnumeration::<NodeInfo>, None, (Some(reverse(happy_var_4))), happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn61(r))) }))
} );

pub fn happyReduce_212() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 61, box happyReduction_212)
}

refute!( pub fn happyReduction_212<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn62(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn131(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CEnumeration::<NodeInfo>, (Some(happy_var_3)), (Some(reverse(happy_var_5))), happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn61(r))) }))
} );

pub fn happyReduce_213() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 7, 61, box happyReduction_213)
}

refute!( pub fn happyReduction_213<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn62(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn131(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CEnumeration::<NodeInfo>, (Some(happy_var_3)), (Some(reverse(happy_var_5))), happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn61(r))) }))
} );

pub fn happyReduce_214() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 61, box happyReduction_214)
}

refute!( pub fn happyReduction_214<t>(HappyStk(HappyAbsSyn131(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CEnumeration::<NodeInfo>, (Some(happy_var_3)), None, happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn61(r))) }))
} );

pub fn happyReduce_215() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 62, box happyReduction_215)
}

pub fn happyReduction_215(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn63(happy_var_1) => {
            HappyAbsSyn62((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_216() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 62, box happyReduction_216)
}

pub fn happyReduction_216<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn63(happy_var_3), _, HappyAbsSyn62(happy_var_1)) => {
            HappyAbsSyn62((snoc(happy_var_1, happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_217() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 63, box happyReduction_217)
}

pub fn happyReduction_217(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn131(happy_var_1) => {
            HappyAbsSyn63(((happy_var_1, None)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_218() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 63, box happyReduction_218)
}

pub fn happyReduction_218<t>(_0: t, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (_, HappyAbsSyn131(happy_var_1)) => {
            HappyAbsSyn63(((happy_var_1, None)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_219() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 63, box happyReduction_219)
}

refute!( pub fn happyReduction_219(HappyStk(HappyAbsSyn100(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn131(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn63(((happy_var_1, Some(happy_var_4)))), Some(box happyRest))
} );

pub fn happyReduce_220() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 63, box happyReduction_220)
}

pub fn happyReduction_220<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn100(happy_var_3), _, HappyAbsSyn131(happy_var_1)) => {
            HappyAbsSyn63(((happy_var_1, Some(happy_var_3))))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_221() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 64, box happyReduction_221)
}

refute!( pub fn happyReduction_221<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CConstQual)))), (box move |r| { happyReturn((HappyAbsSyn64(r))) }))
} );

pub fn happyReduce_222() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 64, box happyReduction_222)
}

refute!( pub fn happyReduction_222<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CVolatQual)))), (box move |r| { happyReturn((HappyAbsSyn64(r))) }))
} );

pub fn happyReduce_223() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 64, box happyReduction_223)
}

refute!( pub fn happyReduction_223<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CRestrQual)))), (box move |r| { happyReturn((HappyAbsSyn64(r))) }))
} );

pub fn happyReduce_224() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 64, box happyReduction_224)
}

refute!( pub fn happyReduction_224<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CNullableQual)))), (box move |r| { happyReturn((HappyAbsSyn64(r))) }))
} );

pub fn happyReduce_225() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 64, box happyReduction_225)
}

refute!( pub fn happyReduction_225<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CNonnullQual)))), (box move |r| { happyReturn((HappyAbsSyn64(r))) }))
} );

pub fn happyReduce_226() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 64, box happyReduction_226)
}

refute!( pub fn happyReduction_226<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAtomicQual)))), (box move |r| { happyReturn((HappyAbsSyn64(r))) }))
} );

pub fn happyReduce_227() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 65, box happyReduction_227)
}

pub fn happyReduction_227(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn64(happy_var_2), HappyAbsSyn132(happy_var_1)) => {
            HappyAbsSyn65((snoc(reverseList((__map!(CAttrQual, happy_var_1))), happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_228() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 65, box happyReduction_228)
}

pub fn happyReduction_228(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn64(happy_var_2), HappyAbsSyn65(happy_var_1)) => {
            HappyAbsSyn65((snoc(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_229() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 65, box happyReduction_229)
}

pub fn happyReduction_229(_0: HappyAbsSyn, _1: HappyAbsSyn, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn64(happy_var_3), HappyAbsSyn132(happy_var_2), HappyAbsSyn65(happy_var_1)) => {
            HappyAbsSyn65((snoc((rappend(happy_var_1, __map!(CAttrQual, happy_var_2))), happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_230() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 66, box happyReduction_230)
}

pub fn happyReduction_230(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_231() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 66, box happyReduction_231)
}

pub fn happyReduction_231(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_232() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 67, (happyReduction_232)())
}

pub fn happyReduction_232() -> HappyAbsSyn {
    HappyAbsSyn67(None)
}

pub fn happyReduce_233() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 67, box happyReduction_233)
}

refute!( pub fn happyReduction_233(HappyStk(_, Some(box HappyStk(HappyAbsSyn128(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn67((Some(happy_var_3))), Some(box happyRest))
} );

pub fn happyReduce_234() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 68, box happyReduction_234)
}

pub fn happyReduction_234(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_235() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 68, box happyReduction_235)
}

pub fn happyReduction_235(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_236() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 69, box happyReduction_236)
}

refute!( pub fn happyReduction_236<t>(HappyStk(HappyTerminal(CTokTyIdent(_, happy_var_1)), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(mkVarDeclr, happy_var_1)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_237() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 69, box happyReduction_237)
}

refute!( pub fn happyReduction_237<t>(HappyStk(HappyAbsSyn88(happy_var_2), Some(box HappyStk(HappyTerminal(CTokTyIdent(_, happy_var_1)), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box |at| { happy_var_2((mkVarDeclr(happy_var_1, at))) }))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_238() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 69, box happyReduction_238)
}

pub fn happyReduction_238(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_239() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 70, box happyReduction_239)
}

pub fn happyReduction_239(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_240() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 70, box happyReduction_240)
}

refute!( pub fn happyReduction_240<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_2, vec![])))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_241() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 70, box happyReduction_241)
}

refute!( pub fn happyReduction_241<t>(HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttribute(happy_var_1, happy_var_2, box move |_0| ptrDeclr(happy_var_3, vec![], _0)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_242() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 70, box happyReduction_242)
}

refute!( pub fn happyReduction_242<t>(HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_3, (reverse(happy_var_2)))))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_243() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 70, box happyReduction_243)
}

refute!( pub fn happyReduction_243<t>(HappyStk(HappyAbsSyn66(happy_var_4), Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttribute(happy_var_1, happy_var_3, box move |_0| ptrDeclr(happy_var_4, (reverse(happy_var_2)), _0)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_244() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 71, box happyReduction_244)
}

pub fn happyReduction_244<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn66(happy_var_2), _) => {
            HappyAbsSyn66(happy_var_2)
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_245() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 71, box happyReduction_245)
}

refute!( pub fn happyReduction_245(HappyStk(HappyAbsSyn88(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((happy_var_4(happy_var_2))), Some(box happyRest))
} );

pub fn happyReduce_246() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 71, box happyReduction_246)
}

refute!( pub fn happyReduction_246(HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((appendDeclrAttrs(happy_var_2, happy_var_3))), Some(box happyRest))
} );

pub fn happyReduce_247() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 5, 71, box happyReduction_247)
}

refute!( pub fn happyReduction_247(HappyStk(HappyAbsSyn88(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((appendDeclrAttrs(happy_var_2, (happy_var_5(happy_var_3))))), Some(box happyRest))
} );

pub fn happyReduce_248() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 72, box happyReduction_248)
}

pub fn happyReduction_248(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_249() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 72, box happyReduction_249)
}

refute!( pub fn happyReduction_249<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_3, vec![])))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_250() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 72, box happyReduction_250)
}

refute!( pub fn happyReduction_250<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_4, (reverse(happy_var_2)))))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_251() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 72, box happyReduction_251)
}

refute!( pub fn happyReduction_251<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttribute(happy_var_1, happy_var_3, box move |_0| ptrDeclr(happy_var_5, (reverse(happy_var_2)), _0)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_252() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 72, box happyReduction_252)
}

refute!( pub fn happyReduction_252<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_2, vec![])))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_253() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 72, box happyReduction_253)
}

refute!( pub fn happyReduction_253<t>(HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_3, (reverse(happy_var_2)))))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_254() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 72, box happyReduction_254)
}

refute!( pub fn happyReduction_254<t>(HappyStk(HappyAbsSyn66(happy_var_4), Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttribute(happy_var_1, happy_var_3, box move |_0| ptrDeclr(happy_var_4, (reverse(happy_var_2)), _0)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_255() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 73, box happyReduction_255)
}

pub fn happyReduction_255<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn66(happy_var_2), _) => {
            HappyAbsSyn66(happy_var_2)
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_256() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 73, box happyReduction_256)
}

refute!( pub fn happyReduction_256(HappyStk(_, Some(box HappyStk(HappyAbsSyn88(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((happy_var_3(happy_var_2))), Some(box happyRest))
} );

pub fn happyReduce_257() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 73, box happyReduction_257)
}

refute!( pub fn happyReduction_257(HappyStk(HappyAbsSyn88(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((happy_var_4(happy_var_2))), Some(box happyRest))
} );

pub fn happyReduce_258() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 74, box happyReduction_258)
}

refute!( pub fn happyReduction_258<t>(HappyStk(HappyTerminal(CTokTyIdent(_, happy_var_1)), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(mkVarDeclr, happy_var_1)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_259() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 74, box happyReduction_259)
}

pub fn happyReduction_259<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn66(happy_var_2), _) => {
            HappyAbsSyn66(happy_var_2)
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_260() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 75, box happyReduction_260)
}

pub fn happyReduction_260(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_261() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 75, box happyReduction_261)
}

pub fn happyReduction_261(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_262() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 76, box happyReduction_262)
}

pub fn happyReduction_262(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_263() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 76, box happyReduction_263)
}

refute!( pub fn happyReduction_263<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_2, vec![])))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_264() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 76, box happyReduction_264)
}

refute!( pub fn happyReduction_264<t>(HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttribute(happy_var_1, happy_var_2, box move |_0| ptrDeclr(happy_var_3, vec![], _0)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_265() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 76, box happyReduction_265)
}

refute!( pub fn happyReduction_265<t>(HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_3, (reverse(happy_var_2)))))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_266() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 76, box happyReduction_266)
}

refute!( pub fn happyReduction_266<t>(HappyStk(HappyAbsSyn66(happy_var_4), Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttribute(happy_var_1, happy_var_3, box move |_0| ptrDeclr(happy_var_4, (reverse(happy_var_2)), _0)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_267() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 77, box happyReduction_267)
}

pub fn happyReduction_267(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn88(happy_var_2), HappyAbsSyn66(happy_var_1)) => {
            HappyAbsSyn66((happy_var_2(happy_var_1)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_268() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 77, box happyReduction_268)
}

pub fn happyReduction_268<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn66(happy_var_2), _) => {
            HappyAbsSyn66(happy_var_2)
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_269() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 77, box happyReduction_269)
}

refute!( pub fn happyReduction_269(HappyStk(HappyAbsSyn88(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((happy_var_4(happy_var_2))), Some(box happyRest))
} );

pub fn happyReduce_270() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 77, box happyReduction_270)
}

refute!( pub fn happyReduction_270(HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((appendDeclrAttrs(happy_var_2, happy_var_3))), Some(box happyRest))
} );

pub fn happyReduce_271() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 5, 77, box happyReduction_271)
}

refute!( pub fn happyReduction_271(HappyStk(HappyAbsSyn88(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((appendDeclrAttrs(happy_var_2, (happy_var_5(happy_var_3))))), Some(box happyRest))
} );

pub fn happyReduce_272() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 78, box happyReduction_272)
}

refute!( pub fn happyReduction_272<t>(HappyStk(HappyTerminal(CTokIdent(_, happy_var_1)), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(mkVarDeclr, happy_var_1)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_273() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 78, box happyReduction_273)
}

pub fn happyReduction_273<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn66(happy_var_2), _) => {
            HappyAbsSyn66(happy_var_2)
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_274() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 78, box happyReduction_274)
}

refute!( pub fn happyReduction_274(HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((appendDeclrAttrs(happy_var_2, happy_var_3))), Some(box happyRest))
} );

pub fn happyReduce_275() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 79, box happyReduction_275)
}

pub fn happyReduction_275(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn11((reverseDeclr(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_276() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 80, box happyReduction_276)
}

pub fn happyReduction_276(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_277() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 80, box happyReduction_277)
}

refute!( pub fn happyReduction_277<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_2, vec![])))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_278() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 80, box happyReduction_278)
}

refute!( pub fn happyReduction_278<t>(HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_3, (reverse(happy_var_2)))))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_279() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 81, box happyReduction_279)
}

refute!( pub fn happyReduction_279<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn21(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(funDeclr, happy_var_1, (Left(reverse(happy_var_3))), vec![])))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_280() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 81, box happyReduction_280)
}

pub fn happyReduction_280<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn66(happy_var_2), _) => {
            HappyAbsSyn66(happy_var_2)
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_281() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 81, box happyReduction_281)
}

refute!( pub fn happyReduction_281(HappyStk(HappyAbsSyn88(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((happy_var_4(happy_var_2))), Some(box happyRest))
} );

pub fn happyReduce_282() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 82, (happyReduction_282)())
}

pub fn happyReduction_282() -> HappyAbsSyn {
    HappyAbsSyn82(((vec![], false)))
}

pub fn happyReduce_283() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 82, box happyReduction_283)
}

pub fn happyReduction_283(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn33(happy_var_1) => {
            HappyAbsSyn82(((reverse(happy_var_1), false)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_284() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 82, box happyReduction_284)
}

pub fn happyReduction_284<t, t1>(_0: t1, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, _, HappyAbsSyn33(happy_var_1)) => {
            HappyAbsSyn82(((reverse(happy_var_1), true)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_285() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 83, box happyReduction_285)
}

pub fn happyReduction_285(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn32(happy_var_1) => {
            HappyAbsSyn33((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_286() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 83, box happyReduction_286)
}

pub fn happyReduction_286<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn32(happy_var_3), _, HappyAbsSyn33(happy_var_1)) => {
            HappyAbsSyn33((snoc(happy_var_1, happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_287() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 84, box happyReduction_287)
}

refute!( pub fn happyReduction_287<t>(HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_288() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 84, box happyReduction_288)
}

refute!( pub fn happyReduction_288<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![(Some((reverseDeclr(happy_var_2))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_289() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 84, box happyReduction_289)
}

refute!( pub fn happyReduction_289<t>(HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![(Some((reverseDeclr(appendDeclrAttrs(happy_var_3, happy_var_2)))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_290() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 84, box happyReduction_290)
}

refute!( pub fn happyReduction_290<t>(HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![(Some((reverseDeclr(appendDeclrAttrs(happy_var_3, happy_var_2)))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_291() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 84, box happyReduction_291)
}

refute!( pub fn happyReduction_291<t>(HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (reverse(happy_var_1)), vec![])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_292() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 84, box happyReduction_292)
}

refute!( pub fn happyReduction_292<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (reverse(happy_var_1)), vec![(Some((reverseDeclr(happy_var_2))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_293() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 84, box happyReduction_293)
}

refute!( pub fn happyReduction_293<t>(HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn38(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (reverse(happy_var_1)), vec![(Some((reverseDeclr(appendDeclrAttrs(happy_var_3, happy_var_2)))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_294() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 84, box happyReduction_294)
}

refute!( pub fn happyReduction_294<t>(HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_295() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 84, box happyReduction_295)
}

refute!( pub fn happyReduction_295<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![(Some((reverseDeclr(happy_var_2))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_296() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 84, box happyReduction_296)
}

refute!( pub fn happyReduction_296<t>(HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![(Some((reverseDeclr(appendDeclrAttrs(happy_var_3, happy_var_2)))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_297() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 84, box happyReduction_297)
}

refute!( pub fn happyReduction_297<t>(HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![(Some((reverseDeclr(appendDeclrAttrs(happy_var_3, happy_var_2)))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_298() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 84, box happyReduction_298)
}

refute!( pub fn happyReduction_298<t>(HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (liftTypeQuals(happy_var_1)), vec![])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_299() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 84, box happyReduction_299)
}

refute!( pub fn happyReduction_299<t>(HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (__op_addadd(liftTypeQuals(happy_var_1), liftCAttrs(happy_var_2))), vec![])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_300() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 84, box happyReduction_300)
}

refute!( pub fn happyReduction_300<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (liftTypeQuals(happy_var_1)), vec![(Some((reverseDeclr(happy_var_2))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_301() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 84, box happyReduction_301)
}

refute!( pub fn happyReduction_301<t>(HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (liftTypeQuals(happy_var_1)), vec![(Some((reverseDeclr(appendDeclrAttrs(happy_var_3, happy_var_2)))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_302() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 85, box happyReduction_302)
}

pub fn happyReduction_302(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(CTokIdent(_, happy_var_1)) => {
            HappyAbsSyn21((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_303() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 85, box happyReduction_303)
}

pub fn happyReduction_303<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyTerminal(CTokIdent(_, happy_var_3)), _, HappyAbsSyn21(happy_var_1)) => {
            HappyAbsSyn21((snoc(happy_var_1, happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_304() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 86, box happyReduction_304)
}

refute!( pub fn happyReduction_304<t>(HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_305() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 86, box happyReduction_305)
}

refute!( pub fn happyReduction_305<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn37(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, happy_var_1, vec![(Some((reverseDeclr(happy_var_2))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_306() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 86, box happyReduction_306)
}

refute!( pub fn happyReduction_306<t>(HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (__op_addadd(liftTypeQuals(happy_var_1), liftCAttrs(happy_var_2))), vec![])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_307() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 86, box happyReduction_307)
}

refute!( pub fn happyReduction_307<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyAbsSyn65(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CDecl, (liftTypeQuals(happy_var_1)), vec![(Some((reverseDeclr(happy_var_2))), None, None)])))), (box move |r| { happyReturn((HappyAbsSyn32(r))) }))
} );

pub fn happyReduce_308() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 87, box happyReduction_308)
}

pub fn happyReduction_308(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_309() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 87, box happyReduction_309)
}

pub fn happyReduction_309(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn66(happy_var_1) => {
            HappyAbsSyn66(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_310() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 87, box happyReduction_310)
}

pub fn happyReduction_310(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn88(happy_var_1) => {
            HappyAbsSyn66((happy_var_1(emptyDeclr())))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_311() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 88, box happyReduction_311)
}

pub fn happyReduction_311(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn88(happy_var_1) => {
            HappyAbsSyn88(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_312() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 88, box happyReduction_312)
}

refute!( pub fn happyReduction_312<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn82(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |at| {
        clones!( happy_var_2 );
                let a: Rc<Box<Fn(CDeclrR) -> CDeclrR>> = Rc::new(box move |declr| { match happy_var_2.clone() {
                    (params, variadic) => {
                        funDeclr(declr, (Right((params, variadic))), vec![], at.clone())
                    },
                } });
                a
                }))), (box move |r| { happyReturn((HappyAbsSyn88(r))) }))
} );

pub fn happyReduce_313() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 89, box happyReduction_313)
}

pub fn happyReduction_313(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn88(happy_var_1) => {
            HappyAbsSyn88(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_314() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 89, box happyReduction_314)
}

pub fn happyReduction_314(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn88(happy_var_2), HappyAbsSyn88(happy_var_1)) => {
            HappyAbsSyn88(Rc::new((box move |decl| { happy_var_2((happy_var_1(decl))) })))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_315() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 90, box happyReduction_315)
}

refute!( pub fn happyReduction_315<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn124(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |at| { clones!(happy_var_2); Rc::new(box move |declr| {
        arrDeclr(declr, vec![], false, false, happy_var_2.clone(), at.clone())
    }) }))), (box move |r| { let me = box move |_0| r(_0); happyReturn((HappyAbsSyn88(Rc::new(me)))) }))
} );

pub fn happyReduce_316() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 90, box happyReduction_316)
}

refute!( pub fn happyReduction_316<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn124(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttributePF(happy_var_1, happy_var_2, box |at, declr| { arrDeclr(declr, vec![], false, false, happy_var_3, at) }))), (box move |r| { happyReturn((HappyAbsSyn88(Rc::new(box move |_0| r(_0))))) }))
} );

pub fn happyReduce_317() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 90, box happyReduction_317)
}

refute!( pub fn happyReduction_317<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn124(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1, box move |at| {
        clones!(happy_var_2, happy_var_3);
        Rc::new(box move |declr| {
            arrDeclr(declr, reverse(happy_var_2.clone()), false, false, happy_var_3.clone(), at.clone()) })
    }))), (box move |r| { happyReturn((HappyAbsSyn88(Rc::new(box move |_0| r(_0))))) }))
} );


pub fn happyReduce_318() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 90, box happyReduction_318)
}

refute!( pub fn happyReduction_318<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn124(happy_var_4), Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttributePF(happy_var_1, happy_var_3, box |at, declr| { arrDeclr(declr, (reverse(happy_var_2)), false, false, happy_var_4, at) }))), (box move |r| { happyReturn((HappyAbsSyn88(Rc::new(box move |_0| r(_0))))) }))
} );

pub fn happyReduce_319() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 90, box happyReduction_319)
}

refute!( pub fn happyReduction_319<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_4), Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttributePF(happy_var_1, happy_var_3, box |at, declr| { arrDeclr(declr, vec![], false, true, (Some(happy_var_4)), at) }))), (box move |r| { happyReturn((HappyAbsSyn88(Rc::new(box move |_0| r(_0))))) }))
} );

pub fn happyReduce_320() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 90, box happyReduction_320)
}

refute!( pub fn happyReduction_320<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_5), Some(box HappyStk(HappyAbsSyn132(happy_var_4), Some(box HappyStk(HappyAbsSyn65(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttributePF(happy_var_1, happy_var_4, box |at, declr| { arrDeclr(declr, (reverse(happy_var_3)), false, true, (Some(happy_var_5)), at) }))), (box move |r| { happyReturn((HappyAbsSyn88(Rc::new(box move |_0| r(_0))))) }))
} );

pub fn happyReduce_321() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 7, 90, box happyReduction_321)
}

refute!( pub fn happyReduction_321<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_6), Some(box HappyStk(HappyAbsSyn132(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttributePF(happy_var_1, (__op_addadd(happy_var_3, happy_var_5)), box |at, declr| { arrDeclr(declr, (reverse(happy_var_2)), false, true, (Some(happy_var_6)), at) }))), (box move |r| { happyReturn((HappyAbsSyn88(Rc::new(box move |_0| r(_0))))) }))
} );

pub fn happyReduce_322() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 90, box happyReduction_322)
}

refute!( pub fn happyReduction_322<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttributePF(happy_var_1, happy_var_3, box |at, declr| { arrDeclr(declr, vec![], true, false, None, at) }))), (box move |r| { happyReturn((HappyAbsSyn88(Rc::new(box move |_0| r(_0))))) }))
} );

pub fn happyReduce_323() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 90, box happyReduction_323)
}

refute!( pub fn happyReduction_323<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttributePF(happy_var_1, (__op_addadd(happy_var_2, happy_var_4)), box |at, declr| { arrDeclr(declr, vec![], true, false, None, at) }))), (box move |r| { happyReturn((HappyAbsSyn88(Rc::new(box move |_0| r(_0))))) }))
} );

pub fn happyReduce_324() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 90, box happyReduction_324)
}

refute!( pub fn happyReduction_324<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttributePF(happy_var_1, happy_var_4, box |at, declr| { arrDeclr(declr, (reverse(happy_var_2)), true, false, None, at) }))), (box move |r| { happyReturn((HappyAbsSyn88(Rc::new(box move |_0| r(_0))))) }))
} );

pub fn happyReduce_325() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 90, box happyReduction_325)
}

refute!( pub fn happyReduction_325<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttributePF(happy_var_1, (__op_addadd(happy_var_3, happy_var_5)), box |at, declr| {
        arrDeclr(declr, (reverse(happy_var_2)), true, false, None, at)
    }))), (box move |r| { happyReturn((HappyAbsSyn88(Rc::new(box move |_0| r(_0))))) }))
} );

pub fn happyReduce_326() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 91, box happyReduction_326)
}

refute!( pub fn happyReduction_326<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, emptyDeclr(), vec![])))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_327() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 91, box happyReduction_327)
}

refute!( pub fn happyReduction_327<t>(HappyStk(HappyAbsSyn132(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttribute(happy_var_1, happy_var_3, box move |_0| ptrDeclr(emptyDeclr(), (reverse(happy_var_2)), _0)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_328() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 91, box happyReduction_328)
}

refute!( pub fn happyReduction_328<t>(HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_2, vec![])))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_329() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 91, box happyReduction_329)
}

refute!( pub fn happyReduction_329<t>(HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn65(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(ptrDeclr, happy_var_3, (reverse(happy_var_2)))))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_330() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 91, box happyReduction_330)
}

refute!( pub fn happyReduction_330<t>(HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttribute(happy_var_1, happy_var_2, box move |_0| ptrDeclr(emptyDeclr(), vec![], _0)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_331() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 91, box happyReduction_331)
}

refute!( pub fn happyReduction_331<t>(HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withAttribute(happy_var_1, happy_var_2, box move |_0| ptrDeclr(happy_var_3, vec![], _0)))), (box move |r| { happyReturn((HappyAbsSyn66(r))) }))
} );

pub fn happyReduce_332() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 92, box happyReduction_332)
}

pub fn happyReduction_332<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn66(happy_var_2), _) => {
            HappyAbsSyn66(happy_var_2)
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_333() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 92, box happyReduction_333)
}

pub fn happyReduction_333<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn66(happy_var_2), _) => {
            HappyAbsSyn66(happy_var_2)
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_334() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 92, box happyReduction_334)
}

pub fn happyReduction_334<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn88(happy_var_2), _) => {
            HappyAbsSyn66((happy_var_2(emptyDeclr())))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_335() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 92, box happyReduction_335)
}

refute!( pub fn happyReduction_335(HappyStk(HappyAbsSyn88(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((happy_var_4(happy_var_2))), Some(box happyRest))
} );

pub fn happyReduce_336() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 92, box happyReduction_336)
}

refute!( pub fn happyReduction_336(HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((appendDeclrAttrs(happy_var_2, happy_var_3))), Some(box happyRest))
} );

pub fn happyReduce_337() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 92, box happyReduction_337)
}

refute!( pub fn happyReduction_337(HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(_, Some(happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((appendDeclrAttrs(happy_var_2, happy_var_3))), Some(happyRest))
} );

pub fn happyReduce_338() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 92, box happyReduction_338)
}

refute!( pub fn happyReduction_338(HappyStk(_, Some(box HappyStk(HappyAbsSyn88(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((appendDeclrAttrs(happy_var_2, (happy_var_3(emptyDeclr()))))), Some(box happyRest))
} );

pub fn happyReduce_339() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 5, 92, box happyReduction_339)
}

refute!( pub fn happyReduction_339(HappyStk(HappyAbsSyn88(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn66(happy_var_3), Some(box HappyStk(HappyAbsSyn132(happy_var_2), Some(box HappyStk(_, Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn66((appendDeclrAttrs(happy_var_2, (happy_var_5(happy_var_3))))), Some(box happyRest))
} );

pub fn happyReduce_340() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 92, box happyReduction_340)
}

pub fn happyReduction_340(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn66(happy_var_1)) => {
            HappyAbsSyn66((appendDeclrAttrs(happy_var_2, happy_var_1)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_341() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 93, box happyReduction_341)
}

refute!( pub fn happyReduction_341<t>(HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CInitExpr, happy_var_1)))), (box move |r| { happyReturn((HappyAbsSyn93(r))) }))
} );

pub fn happyReduce_342() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 93, box happyReduction_342)
}

refute!( pub fn happyReduction_342<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn95(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CInitList, (reverse(happy_var_2)))))), (box move |r| { happyReturn((HappyAbsSyn93(r))) }))
} );

pub fn happyReduce_343() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 93, box happyReduction_343)
}

refute!( pub fn happyReduction_343<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn95(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CInitList, (reverse(happy_var_2)))))), (box move |r| { happyReturn((HappyAbsSyn93(r))) }))
} );

pub fn happyReduce_344() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 94, (happyReduction_344)())
}

pub fn happyReduction_344() -> HappyAbsSyn {
    HappyAbsSyn94(None)
}

pub fn happyReduce_345() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 94, box happyReduction_345)
}

pub fn happyReduction_345<t>(_0: HappyAbsSyn, _1: t) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn93(happy_var_2), _) => {
            HappyAbsSyn94((Some(happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_346() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 95, (happyReduction_346)())
}

pub fn happyReduction_346() -> HappyAbsSyn {
    HappyAbsSyn95((empty)())
}

pub fn happyReduce_347() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 95, box happyReduction_347)
}

pub fn happyReduction_347(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn93(happy_var_1) => {
            HappyAbsSyn95((singleton((vec![], happy_var_1))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_348() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 95, box happyReduction_348)
}

pub fn happyReduction_348(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn93(happy_var_2), HappyAbsSyn96(happy_var_1)) => {
            HappyAbsSyn95((singleton((happy_var_1, happy_var_2))))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_349() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 95, box happyReduction_349)
}

pub fn happyReduction_349<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn93(happy_var_3), _, HappyAbsSyn95(happy_var_1)) => {
            HappyAbsSyn95((snoc(happy_var_1, (vec![], happy_var_3))))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_350() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 4, 95, box happyReduction_350)
}

refute!( pub fn happyReduction_350(HappyStk(HappyAbsSyn93(happy_var_4), Some(box HappyStk(HappyAbsSyn96(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn95(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn95((snoc(happy_var_1, (happy_var_3, happy_var_4)))), Some(box happyRest))
} );

pub fn happyReduce_351() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 96, box happyReduction_351)
}

pub fn happyReduction_351<t>(_0: t, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (_, HappyAbsSyn97(happy_var_1)) => {
            HappyAbsSyn96((reverse(happy_var_1)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_352() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 96, box happyReduction_352)
}

refute!( pub fn happyReduction_352<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn131(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box |at| { vec![CMemberDesig(happy_var_1, at)] }))), (box move |r| { happyReturn((HappyAbsSyn96(r))) }))
} );

pub fn happyReduce_353() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 96, box happyReduction_353)
}

pub fn happyReduction_353(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn98(happy_var_1) => {
            HappyAbsSyn96((vec![happy_var_1]))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_354() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 97, box happyReduction_354)
}

pub fn happyReduction_354(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn98(happy_var_1) => {
            HappyAbsSyn97((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_355() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 97, box happyReduction_355)
}

pub fn happyReduction_355(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn98(happy_var_2), HappyAbsSyn97(happy_var_1)) => {
            HappyAbsSyn97((snoc(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_356() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 98, box happyReduction_356)
}

refute!( pub fn happyReduction_356<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CArrDesig, happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn98(r))) }))
} );

pub fn happyReduce_357() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 98, box happyReduction_357)
}

refute!( pub fn happyReduction_357<t>(HappyStk(HappyAbsSyn131(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CMemberDesig, happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn98(r))) }))
} );

pub fn happyReduce_358() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 98, box happyReduction_358)
}

pub fn happyReduction_358(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn98(happy_var_1) => {
            HappyAbsSyn98(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_359() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 99, box happyReduction_359)
}

refute!( pub fn happyReduction_359<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CRangeDesig, happy_var_2, happy_var_4)))), (box move |r| { happyReturn((HappyAbsSyn98(r))) }))
} );

pub fn happyReduce_360() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 100, box happyReduction_360)
}

refute!( pub fn happyReduction_360<t>(HappyStk(HappyTerminal(CTokIdent(_, happy_var_1)), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CVar, happy_var_1)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_361() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 100, box happyReduction_361)
}

pub fn happyReduction_361(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn127(happy_var_1) => {
            HappyAbsSyn100((CConst(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_362() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 100, box happyReduction_362)
}

pub fn happyReduction_362(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn128(happy_var_1) => {
            HappyAbsSyn100((CConst((liftStrLit(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_363() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 100, box happyReduction_363)
}

pub fn happyReduction_363<t, t1>(_0: t1, _1: HappyAbsSyn, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (_, HappyAbsSyn100(happy_var_2), _) => {
            HappyAbsSyn100(happy_var_2)
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_364() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 100, box happyReduction_364)
}

refute!( pub fn happyReduction_364<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn101(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CGenericSelection, box happy_var_3, (reverse(happy_var_5)))))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_365() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 100, box happyReduction_365)
}

refute!( pub fn happyReduction_365<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn12(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CStatExpr, box happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_366() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 100, box happyReduction_366)
}

refute!( pub fn happyReduction_366<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| CBuiltinExpr(box CBuiltinVaArg(happy_var_3, happy_var_5, _0))))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_367() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 100, box happyReduction_367)
}

refute!( pub fn happyReduction_367<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn97(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| CBuiltinExpr(box CBuiltinOffsetOf(happy_var_3, (reverse(happy_var_5)), _0))))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_368() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 100, box happyReduction_368)
}

refute!( pub fn happyReduction_368<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| CBuiltinExpr(box CBuiltinTypesCompatible(happy_var_3, happy_var_5, _0))))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_369() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 101, box happyReduction_369)
}

pub fn happyReduction_369<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn102(happy_var_3), _, HappyAbsSyn101(happy_var_1)) => {
            HappyAbsSyn101((snoc(happy_var_1, happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_370() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 101, box happyReduction_370)
}

pub fn happyReduction_370(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn102(happy_var_1) => {
            HappyAbsSyn101((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_371() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 102, box happyReduction_371)
}

pub fn happyReduction_371<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn100(happy_var_3), _, HappyAbsSyn32(happy_var_1)) => {
            HappyAbsSyn102(((Some(happy_var_1), happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_372() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 102, box happyReduction_372)
}

pub fn happyReduction_372<t, t1>(_0: HappyAbsSyn, _1: t1, _2: t) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn100(happy_var_3), _, _) => {
            HappyAbsSyn102(((None, happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_373() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 103, box happyReduction_373)
}

refute!( pub fn happyReduction_373<t>(HappyStk(HappyAbsSyn131(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| singleton(CMemberDesig(happy_var_1, _0))))), (box move |r| { happyReturn((HappyAbsSyn97(r))) }))
} );

pub fn happyReduce_374() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 103, box happyReduction_374)
}

refute!( pub fn happyReduction_374<t>(HappyStk(HappyAbsSyn131(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn97(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_3.clone(), box move |_0| (snoc(happy_var_1, CMemberDesig(happy_var_3, _0)))))), (box move |r| { happyReturn((HappyAbsSyn97(r))) }))
} );

pub fn happyReduce_375() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 103, box happyReduction_375)
}

refute!( pub fn happyReduction_375<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn97(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_3.clone().clone(), box move |_0| (snoc(happy_var_1, CArrDesig(happy_var_3, _0)))))), (box move |r| { happyReturn((HappyAbsSyn97(r))) }))
} );

pub fn happyReduce_376() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 104, box happyReduction_376)
}

pub fn happyReduction_376(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_377() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 104, box happyReduction_377)
}

refute!( pub fn happyReduction_377<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CIndex, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_378() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 104, box happyReduction_378)
}

refute!( pub fn happyReduction_378<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCall, box happy_var_1, vec![])))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_379() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 104, box happyReduction_379)
}

refute!( pub fn happyReduction_379<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn105(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCall, box happy_var_1, (reverse(happy_var_3)))))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_380() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 104, box happyReduction_380)
}

refute!( pub fn happyReduction_380<t>(HappyStk(HappyAbsSyn131(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CMember, box happy_var_1, happy_var_3, false)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_381() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 104, box happyReduction_381)
}

refute!( pub fn happyReduction_381<t>(HappyStk(HappyAbsSyn131(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CMember, box happy_var_1, happy_var_3, true)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_382() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 104, box happyReduction_382)
}

refute!( pub fn happyReduction_382<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CUnary, CPostIncOp, box happy_var_1)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_383() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 104, box happyReduction_383)
}

refute!( pub fn happyReduction_383<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CUnary, CPostDecOp, box happy_var_1)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_384() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 6, 104, box happyReduction_384)
}

refute!( pub fn happyReduction_384<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn95(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCompoundLit, box happy_var_2, (reverse(happy_var_5)))))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_385() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 7, 104, box happyReduction_385)
}

refute!( pub fn happyReduction_385<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn95(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCompoundLit, box happy_var_2, (reverse(happy_var_5)))))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_386() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 105, box happyReduction_386)
}

pub fn happyReduction_386(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn105((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_387() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 105, box happyReduction_387)
}

pub fn happyReduction_387<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn100(happy_var_3), _, HappyAbsSyn105(happy_var_1)) => {
            HappyAbsSyn105((snoc(happy_var_1, happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_388() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 106, box happyReduction_388)
}

pub fn happyReduction_388(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_389() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 106, box happyReduction_389)
}

refute!( pub fn happyReduction_389<t>(HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CUnary, CPreIncOp, box happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_390() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 106, box happyReduction_390)
}

refute!( pub fn happyReduction_390<t>(HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CUnary, CPreDecOp, box happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_391() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 106, box happyReduction_391)
}

pub fn happyReduction_391<t>(_0: HappyAbsSyn, _1: t) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn100(happy_var_2), _) => {
            HappyAbsSyn100(happy_var_2)
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_392() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 106, box happyReduction_392)
}

refute!( pub fn happyReduction_392<t>(HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyAbsSyn107(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CUnary, (unL(happy_var_1)), box happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_393() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 106, box happyReduction_393)
}

refute!( pub fn happyReduction_393<t>(HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CSizeofExpr, box happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_394() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 106, box happyReduction_394)
}

refute!( pub fn happyReduction_394<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CSizeofType, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_395() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 106, box happyReduction_395)
}

refute!( pub fn happyReduction_395<t>(HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAlignofExpr, box happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_396() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 106, box happyReduction_396)
}

refute!( pub fn happyReduction_396<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAlignofType, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_397() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 106, box happyReduction_397)
}

refute!( pub fn happyReduction_397<t>(HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CComplexReal, box happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_398() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 106, box happyReduction_398)
}

refute!( pub fn happyReduction_398<t>(HappyStk(HappyAbsSyn100(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CComplexImag, box happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_399() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 106, box happyReduction_399)
}

refute!( pub fn happyReduction_399<t>(HappyStk(HappyAbsSyn131(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CLabAddrExpr, happy_var_2)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_400() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 107, box happyReduction_400)
}

pub fn happyReduction_400(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn107((Located(CAdrOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_401() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 107, box happyReduction_401)
}

pub fn happyReduction_401(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn107((Located(CIndOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_402() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 107, box happyReduction_402)
}

pub fn happyReduction_402(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn107((Located(CPlusOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_403() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 107, box happyReduction_403)
}

pub fn happyReduction_403(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn107((Located(CMinOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_404() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 107, box happyReduction_404)
}

pub fn happyReduction_404(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn107((Located(CCompOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_405() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 107, box happyReduction_405)
}

pub fn happyReduction_405(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn107((Located(CNegOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_406() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 108, box happyReduction_406)
}

pub fn happyReduction_406(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_407() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 108, box happyReduction_407)
}

refute!( pub fn happyReduction_407<t>(HappyStk(HappyAbsSyn100(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn32(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCast, box happy_var_2, box happy_var_4)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_408() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 109, box happyReduction_408)
}

pub fn happyReduction_408(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_409() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 109, box happyReduction_409)
}

refute!( pub fn happyReduction_409<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CMulOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_410() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 109, box happyReduction_410)
}

refute!( pub fn happyReduction_410<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CDivOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_411() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 109, box happyReduction_411)
}

refute!( pub fn happyReduction_411<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CRmdOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_412() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 110, box happyReduction_412)
}

pub fn happyReduction_412(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_413() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 110, box happyReduction_413)
}

refute!( pub fn happyReduction_413<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CAddOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_414() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 110, box happyReduction_414)
}

refute!( pub fn happyReduction_414<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CSubOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_415() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 111, box happyReduction_415)
}

pub fn happyReduction_415(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_416() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 111, box happyReduction_416)
}

refute!( pub fn happyReduction_416<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CShlOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_417() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 111, box happyReduction_417)
}

refute!( pub fn happyReduction_417<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CShrOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_418() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 112, box happyReduction_418)
}

pub fn happyReduction_418(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_419() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 112, box happyReduction_419)
}

refute!( pub fn happyReduction_419<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CLeOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_420() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 112, box happyReduction_420)
}

refute!( pub fn happyReduction_420<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CGrOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_421() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 112, box happyReduction_421)
}

refute!( pub fn happyReduction_421<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CLeqOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_422() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 112, box happyReduction_422)
}

refute!( pub fn happyReduction_422<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CGeqOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_423() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 113, box happyReduction_423)
}

pub fn happyReduction_423(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_424() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 113, box happyReduction_424)
}

refute!( pub fn happyReduction_424<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CEqOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_425() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 113, box happyReduction_425)
}

refute!( pub fn happyReduction_425<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CNeqOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_426() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 114, box happyReduction_426)
}

pub fn happyReduction_426(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_427() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 114, box happyReduction_427)
}

refute!( pub fn happyReduction_427<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CAndOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_428() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 115, box happyReduction_428)
}

pub fn happyReduction_428(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_429() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 115, box happyReduction_429)
}

refute!( pub fn happyReduction_429<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CXorOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_430() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 116, box happyReduction_430)
}

pub fn happyReduction_430(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_431() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 116, box happyReduction_431)
}

refute!( pub fn happyReduction_431<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, COrOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_432() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 117, box happyReduction_432)
}

pub fn happyReduction_432(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_433() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 117, box happyReduction_433)
}

refute!( pub fn happyReduction_433<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CLndOp, box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_434() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 118, box happyReduction_434)
}

pub fn happyReduction_434(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_435() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 118, box happyReduction_435)
}

refute!( pub fn happyReduction_435<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CBinary, CLorOp, box happy_var_1.clone(), box happy_var_3.clone())))), (box |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_436() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 119, box happyReduction_436)
}

pub fn happyReduction_436(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_437() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 5, 119, box happyReduction_437)
}

refute!( pub fn happyReduction_437<t>(HappyStk(HappyAbsSyn100(happy_var_5), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCond, box happy_var_1, (Some(box happy_var_3)), box happy_var_5)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_438() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 119, box happyReduction_438)
}

refute!( pub fn happyReduction_438<t>(HappyStk(HappyAbsSyn100(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CCond, box happy_var_1, None, box happy_var_4)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_439() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 120, box happyReduction_439)
}

pub fn happyReduction_439(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_440() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 120, box happyReduction_440)
}

refute!( pub fn happyReduction_440<t>(HappyStk(HappyAbsSyn100(happy_var_3), Some(box HappyStk(HappyAbsSyn121(happy_var_2), Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), partial_1!(CAssign, (unL(happy_var_2)), box happy_var_1, box happy_var_3)))), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_441() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_441)
}

pub fn happyReduction_441(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(CAssignOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_442() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_442)
}

pub fn happyReduction_442(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(CMulAssOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_443() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_443)
}

pub fn happyReduction_443(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(CDivAssOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_444() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_444)
}

pub fn happyReduction_444(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(CRmdAssOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_445() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_445)
}

pub fn happyReduction_445(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(CAddAssOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_446() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_446)
}

pub fn happyReduction_446(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(CSubAssOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_447() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_447)
}

pub fn happyReduction_447(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(CShlAssOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_448() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_448)
}

pub fn happyReduction_448(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(CShrAssOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_449() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_449)
}

pub fn happyReduction_449(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(CAndAssOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_450() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_450)
}

pub fn happyReduction_450(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(CXorAssOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_451() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 121, box happyReduction_451)
}

pub fn happyReduction_451(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn121((Located(COrAssOp, (posOf(happy_var_1)))))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_452() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 122, box happyReduction_452)
}

pub fn happyReduction_452(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_453() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 122, box happyReduction_453)
}

refute!( pub fn happyReduction_453<t>(HappyStk(HappyAbsSyn105(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn100(happy_var_1), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen((({
            let es = reverse(happy_var_3);
            clones!(happy_var_1);

        withNodeInfo(es.clone(), partial_1!(CComma, (__op_concat(happy_var_1.clone(), es.clone()))))        })), (box move |r| { happyReturn((HappyAbsSyn100(r))) }))
} );

pub fn happyReduce_454() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 123, box happyReduction_454)
}

pub fn happyReduction_454(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn105((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_455() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 123, box happyReduction_455)
}

pub fn happyReduction_455<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn100(happy_var_3), _, HappyAbsSyn105(happy_var_1)) => {
            HappyAbsSyn105((snoc(happy_var_1, happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_456() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 124, (happyReduction_456)())
}

pub fn happyReduction_456() -> HappyAbsSyn {
    HappyAbsSyn124(None)
}

pub fn happyReduce_457() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 124, box happyReduction_457)
}

pub fn happyReduction_457(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn124((Some(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_458() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 125, (happyReduction_458)())
}

pub fn happyReduction_458() -> HappyAbsSyn {
    HappyAbsSyn124(None)
}

pub fn happyReduce_459() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 125, box happyReduction_459)
}

pub fn happyReduction_459(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn124((Some(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_460() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 126, box happyReduction_460)
}

pub fn happyReduction_460(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn100(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_461() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 127, box happyReduction_461)
}

refute!( pub fn happyReduction_461<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| match happy_var_1 {
                CTokILit(_, i) => {
                    CIntConst(i, _0)
                },
                _ => panic!("Irrefutable pattern"),
            }))), (box move |r| { happyReturn((HappyAbsSyn127(r))) }))
} );

pub fn happyReduce_462() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 127, box happyReduction_462)
}

refute!( pub fn happyReduction_462<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| match happy_var_1 {
                CTokCLit(_, c) => {
                    CCharConst(c, _0)
                },
                _ => panic!("Irrefutable pattern"),
            }))), (box move |r| { happyReturn((HappyAbsSyn127(r))) }))
} );

pub fn happyReduce_463() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 127, box happyReduction_463)
}

refute!( pub fn happyReduction_463<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| match happy_var_1 {
                CTokFLit(_, f) => {
                    CFloatConst(f, _0)
                },
                _ => panic!("Irrefutable pattern"),
            }))), (box move |r| { happyReturn((HappyAbsSyn127(r))) }))
} );

pub fn happyReduce_464() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 128, box happyReduction_464)
}

refute!( pub fn happyReduction_464<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| match happy_var_1 {
                CTokSLit(_, s) => {
                    CStringLiteral::<NodeInfo>(s, _0)
                },
                _ => panic!("Irrefutable pattern"),
            }))), (box move |r| { happyReturn((HappyAbsSyn128(r))) }))
} );

pub fn happyReduce_465() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 2, 128, box happyReduction_465)
}

refute!( pub fn happyReduction_465<t>(HappyStk(HappyAbsSyn129(happy_var_2), Some(box HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| { match happy_var_1 {
                CTokSLit(_, s) => {
                    CStringLiteral::<NodeInfo>((concatCStrings((__op_concat(s, reverse(happy_var_2))))), _0)
                },
                _ => panic!("Irrefutable pattern"),
            } }))), (box move |r| { happyReturn((HappyAbsSyn128(r))) }))
} );

pub fn happyReduce_466() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 129, box happyReduction_466)
}

pub fn happyReduction_466(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(happy_var_1) => {
            HappyAbsSyn129((match happy_var_1 {
                    CTokSLit(_, s) => {
                        singleton(s)
                    },
                    _ => panic!("Irrefutable pattern"),
                }))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_467() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 129, box happyReduction_467)
}

pub fn happyReduction_467(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyTerminal(happy_var_2), HappyAbsSyn129(happy_var_1)) => {
            HappyAbsSyn129((match happy_var_2 {
                    CTokSLit(_, s) => {
                        snoc(happy_var_1, s)
                    },
                    _ => panic!("Irrefutable pattern"),
                }))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_468() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 130, box happyReduction_468)
}

pub fn happyReduction_468(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(CTokClangC(_, ClangCTok(happy_var_1))) => {
            HappyAbsSyn130(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_469() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 131, box happyReduction_469)
}

pub fn happyReduction_469(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(CTokIdent(_, happy_var_1)) => {
            HappyAbsSyn131(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_470() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 131, box happyReduction_470)
}

pub fn happyReduction_470(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyTerminal(CTokTyIdent(_, happy_var_1)) => {
            HappyAbsSyn131(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_471() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 132, (happyReduction_471)())
}

pub fn happyReduction_471() -> HappyAbsSyn {
    HappyAbsSyn132((vec![]))
}

pub fn happyReduce_472() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 132, box happyReduction_472)
}

pub fn happyReduction_472(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn132(happy_var_1) => {
            HappyAbsSyn132(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_473() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 133, box happyReduction_473)
}

pub fn happyReduction_473(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn132(happy_var_1) => {
            HappyAbsSyn132(happy_var_1)
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_474() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_2, 133, box happyReduction_474)
}

pub fn happyReduction_474(_0: HappyAbsSyn, _1: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1) {
        (HappyAbsSyn132(happy_var_2), HappyAbsSyn132(happy_var_1)) => {
            HappyAbsSyn132((__op_addadd(happy_var_1, happy_var_2)))
        },
        (_, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_475() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 6, 134, box happyReduction_475)
}

refute!( pub fn happyReduction_475(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn135(happy_var_4), Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(_, Some(box happyRest)))))))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn132((reverse(happy_var_4))), Some(box happyRest))
} );

pub fn happyReduce_476() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 135, box happyReduction_476)
}

pub fn happyReduction_476(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn136(happy_var_1) => {
            HappyAbsSyn135((match happy_var_1 {
                    None => {
                        (empty)()
                    },
                    Some(attr) => {
                        singleton(attr)
                    },
                }))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_477() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 135, box happyReduction_477)
}

pub fn happyReduction_477<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn136(happy_var_3), _, HappyAbsSyn135(happy_var_1)) => {
            HappyAbsSyn135(
                match happy_var_3 {
                    Some(happy_var_3_inner) => snoc(happy_var_1, happy_var_3_inner),
                    None => happy_var_1,
                }
                // ((maybe((box |B| B), |A| { box |B| flip(snoc, A, B) }, happy_var_3))(happy_var_1)))
            )
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_478() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_0, 136, (happyReduction_478)())
}

pub fn happyReduction_478() -> HappyAbsSyn {
    HappyAbsSyn136(None)
}

pub fn happyReduce_479() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 136, box happyReduction_479)
}

refute!( pub fn happyReduction_479<t>(HappyStk(HappyTerminal(CTokIdent(_, happy_var_1)), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), 
        box move |_0| { Some(CAttribute::<NodeInfo>(happy_var_1, vec![], _0)) }
    ))), (box move |r| { happyReturn((HappyAbsSyn136(r))) }))
} );

pub fn happyReduce_480() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 1, 136, box happyReduction_480)
}

refute!( pub fn happyReduction_480<t>(HappyStk(HappyTerminal(happy_var_1), Some(box happyRest)): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), 
        box move |_0| { Some(CAttribute::<NodeInfo>((internalIdent("const".to_string())), vec![], _0)) }
    ))), (box move |r| { happyReturn((HappyAbsSyn136(r))) }))
} );

pub fn happyReduce_481() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 4, 136, box happyReduction_481)
}

refute!( pub fn happyReduction_481<t>(HappyStk(_, Some(box HappyStk(HappyAbsSyn105(happy_var_3), Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(CTokIdent(_, happy_var_1)), Some(box happyRest)))))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| { Some(CAttribute::<NodeInfo>(happy_var_1, (reverse(happy_var_3)), _0)) }))), (box move |r| { happyReturn((HappyAbsSyn136(r))) }))
} );

pub fn happyReduce_482() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyMonadReduce, 3, 136, box happyReduction_482)
}

refute!( pub fn happyReduction_482<t>(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyTerminal(CTokIdent(_, happy_var_1)), Some(box happyRest)))))): HappyStk<HappyAbsSyn>, tk: t) -> P<HappyAbsSyn> {
    happyThen(((withNodeInfo(happy_var_1.clone(), box move |_0| {
        Some(CAttribute::<NodeInfo>(happy_var_1, vec![], _0))
        } ))), (box move |r| {
            happyReturn((HappyAbsSyn136(r))) 
        }))
} );

pub fn happyReduce_483() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_1, 137, box happyReduction_483)
}

pub fn happyReduction_483(_0: HappyAbsSyn) -> HappyAbsSyn {
    match (_0) {
        HappyAbsSyn100(happy_var_1) => {
            HappyAbsSyn105((singleton(happy_var_1)))
        },
        _ => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_484() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 137, box happyReduction_484)
}

pub fn happyReduction_484<t, t1, t2>(_: t2, _: t1, _: t) -> HappyAbsSyn {
    HappyAbsSyn105((Reversed(vec![])))
}

pub fn happyReduce_485() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 137, box happyReduction_485)
}

pub fn happyReduction_485<t, t1, t2>(_: t2, _: t1, _: t) -> HappyAbsSyn {
    HappyAbsSyn105((Reversed(vec![])))
}

pub fn happyReduce_486() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happySpecReduce_3, 137, box happyReduction_486)
}

pub fn happyReduction_486<t>(_0: HappyAbsSyn, _1: t, _2: HappyAbsSyn) -> HappyAbsSyn {
    match (_0, _1, _2) {
        (HappyAbsSyn100(happy_var_3), _, HappyAbsSyn105(happy_var_1)) => {
            HappyAbsSyn105((snoc(happy_var_1, happy_var_3)))
        },
        (_, _, _) => {
            (notHappyAtAll)()
        },
    }
}

pub fn happyReduce_487() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 5, 137, box happyReduction_487)
}

refute!( pub fn happyReduction_487(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn105(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn105(happy_var_1), Some(box happyRest))
} );

pub fn happyReduce_488() -> Box<Fn(isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>> {
    partial_5!(happyReduce, 5, 137, box happyReduction_488)
}

refute!( pub fn happyReduction_488(HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(_, Some(box HappyStk(HappyAbsSyn105(happy_var_1), Some(box happyRest)))))))))): HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn> {
    HappyStk(HappyAbsSyn105(happy_var_1), Some(box happyRest))
} );

pub fn happyNewToken<a: 'static, b: 'static + Clone>(action: Box<Fn(isize, isize, CToken, HappyState<CToken, Box<Fn(b) -> P<a>>>, Vec<HappyState<CToken, Box<Fn(b) -> P<a>>>>, b) -> P<a>>, sts: Vec<HappyState<CToken, Box<Fn(b) -> P<a>>>>, stk: b) -> P<a> {
    let action = Rc::new(action);
    lexC(((box move |tk| {
        let tk_ = tk.clone();
        let stk_ = stk.clone();
        let sts_ = sts.clone();
        let action_ = action.clone();
                let cont = box move |i| {
                    let action_ = action_.clone();
                    (action_.clone())(i, i, tk_.clone(), (HappyState(Rc::new(apply_5_1_clone!(action_.clone())))), sts_.clone(), stk_.clone())
                };

            match tk {
                    CTokEof => {
                        let action_ = action.clone();
                        action(247, 247, tk, (HappyState(Rc::new(apply_5_1_clone!(action_)))), sts.clone(), stk.clone())
                    },
                    CTokLParen(_) => {
                        cont(138)
                    },
                    CTokRParen(_) => {
                        cont(139)
                    },
                    CTokLBracket(_) => {
                        cont(140)
                    },
                    CTokRBracket(_) => {
                        cont(141)
                    },
                    CTokArrow(_) => {
                        cont(142)
                    },
                    CTokDot(_) => {
                        cont(143)
                    },
                    CTokExclam(_) => {
                        cont(144)
                    },
                    CTokTilde(_) => {
                        cont(145)
                    },
                    CTokInc(_) => {
                        cont(146)
                    },
                    CTokDec(_) => {
                        cont(147)
                    },
                    CTokPlus(_) => {
                        cont(148)
                    },
                    CTokMinus(_) => {
                        cont(149)
                    },
                    CTokStar(_) => {
                        cont(150)
                    },
                    CTokSlash(_) => {
                        cont(151)
                    },
                    CTokPercent(_) => {
                        cont(152)
                    },
                    CTokAmper(_) => {
                        cont(153)
                    },
                    CTokShiftL(_) => {
                        cont(154)
                    },
                    CTokShiftR(_) => {
                        cont(155)
                    },
                    CTokLess(_) => {
                        cont(156)
                    },
                    CTokLessEq(_) => {
                        cont(157)
                    },
                    CTokHigh(_) => {
                        cont(158)
                    },
                    CTokHighEq(_) => {
                        cont(159)
                    },
                    CTokEqual(_) => {
                        cont(160)
                    },
                    CTokUnequal(_) => {
                        cont(161)
                    },
                    CTokHat(_) => {
                        cont(162)
                    },
                    CTokBar(_) => {
                        cont(163)
                    },
                    CTokAnd(_) => {
                        cont(164)
                    },
                    CTokOr(_) => {
                        cont(165)
                    },
                    CTokQuest(_) => {
                        cont(166)
                    },
                    CTokColon(_) => {
                        cont(167)
                    },
                    CTokAssign(_) => {
                        cont(168)
                    },
                    CTokPlusAss(_) => {
                        cont(169)
                    },
                    CTokMinusAss(_) => {
                        cont(170)
                    },
                    CTokStarAss(_) => {
                        cont(171)
                    },
                    CTokSlashAss(_) => {
                        cont(172)
                    },
                    CTokPercAss(_) => {
                        cont(173)
                    },
                    CTokAmpAss(_) => {
                        cont(174)
                    },
                    CTokHatAss(_) => {
                        cont(175)
                    },
                    CTokBarAss(_) => {
                        cont(176)
                    },
                    CTokSLAss(_) => {
                        cont(177)
                    },
                    CTokSRAss(_) => {
                        cont(178)
                    },
                    CTokComma(_) => {
                        cont(179)
                    },
                    CTokSemic(_) => {
                        cont(180)
                    },
                    CTokLBrace(_) => {
                        cont(181)
                    },
                    CTokRBrace(_) => {
                        cont(182)
                    },
                    CTokEllipsis(_) => {
                        cont(183)
                    },
                    CTokAlignof(_) => {
                        cont(184)
                    },
                    CTokAlignas(_) => {
                        cont(185)
                    },
                    CTokAtomic(_) => {
                        cont(186)
                    },
                    CTokAsm(_) => {
                        cont(187)
                    },
                    CTokAuto(_) => {
                        cont(188)
                    },
                    CTokBreak(_) => {
                        cont(189)
                    },
                    CTokBool(_) => {
                        cont(190)
                    },
                    CTokCase(_) => {
                        cont(191)
                    },
                    CTokChar(_) => {
                        cont(192)
                    },
                    CTokConst(_) => {
                        cont(193)
                    },
                    CTokContinue(_) => {
                        cont(194)
                    },
                    CTokComplex(_) => {
                        cont(195)
                    },
                    CTokDefault(_) => {
                        cont(196)
                    },
                    CTokDo(_) => {
                        cont(197)
                    },
                    CTokDouble(_) => {
                        cont(198)
                    },
                    CTokElse(_) => {
                        cont(199)
                    },
                    CTokEnum(_) => {
                        cont(200)
                    },
                    CTokExtern(_) => {
                        cont(201)
                    },
                    CTokFloat(_) => {
                        cont(202)
                    },
                    CTokFor(_) => {
                        cont(203)
                    },
                    CTokGeneric(_) => {
                        cont(204)
                    },
                    CTokGoto(_) => {
                        cont(205)
                    },
                    CTokIf(_) => {
                        cont(206)
                    },
                    CTokInline(_) => {
                        cont(207)
                    },
                    CTokInt(_) => {
                        cont(208)
                    },
                    CTokInt128(_) => {
                        cont(209)
                    },
                    CTokLong(_) => {
                        cont(210)
                    },
                    CTokLabel(_) => {
                        cont(211)
                    },
                    CTokNoreturn(_) => {
                        cont(212)
                    },
                    CTokNullable(_) => {
                        cont(213)
                    },
                    CTokNonnull(_) => {
                        cont(214)
                    },
                    CTokRegister(_) => {
                        cont(215)
                    },
                    CTokRestrict(_) => {
                        cont(216)
                    },
                    CTokReturn(_) => {
                        cont(217)
                    },
                    CTokShort(_) => {
                        cont(218)
                    },
                    CTokSigned(_) => {
                        cont(219)
                    },
                    CTokSizeof(_) => {
                        cont(220)
                    },
                    CTokStatic(_) => {
                        cont(221)
                    },
                    CTokStaticAssert(_) => {
                        cont(222)
                    },
                    CTokStruct(_) => {
                        cont(223)
                    },
                    CTokSwitch(_) => {
                        cont(224)
                    },
                    CTokTypedef(_) => {
                        cont(225)
                    },
                    CTokTypeof(_) => {
                        cont(226)
                    },
                    CTokThread(_) => {
                        cont(227)
                    },
                    CTokUnion(_) => {
                        cont(228)
                    },
                    CTokUnsigned(_) => {
                        cont(229)
                    },
                    CTokVoid(_) => {
                        cont(230)
                    },
                    CTokVolatile(_) => {
                        cont(231)
                    },
                    CTokWhile(_) => {
                        cont(232)
                    },
                    CTokCLit(_, _) => {
                        cont(233)
                    },
                    CTokILit(_, _) => {
                        cont(234)
                    },
                    CTokFLit(_, _) => {
                        cont(235)
                    },
                    CTokSLit(_, _) => {
                        cont(236)
                    },
                    CTokIdent(_, happy_dollar_dollar) => {
                        cont(237)
                    },
                    CTokTyIdent(_, happy_dollar_dollar) => {
                        cont(238)
                    },
                    CTokGnuC(GnuCAttrTok, _) => {
                        cont(239)
                    },
                    CTokGnuC(GnuCExtTok, _) => {
                        cont(240)
                    },
                    CTokGnuC(GnuCComplexReal, _) => {
                        cont(241)
                    },
                    CTokGnuC(GnuCComplexImag, _) => {
                        cont(242)
                    },
                    CTokGnuC(GnuCVaArg, _) => {
                        cont(243)
                    },
                    CTokGnuC(GnuCOffsetof, _) => {
                        cont(244)
                    },
                    CTokGnuC(GnuCTyCompat, _) => {
                        cont(245)
                    },
                    CTokClangC(_, ClangCTok(happy_dollar_dollar)) => {
                        cont(246)
                    },
                    _ => {
                        happyError_q(tk.clone())
                    },
                }            })))
}

pub fn happyError_<a: 'static>(_0: isize, _1: CToken) -> P<a> {
    match (_0, _1) {
        (247, tk) => {
            happyError_q(tk)
        },
        (_, tk) => {
            happyError_q(tk)
        },
    }
}

pub fn happyThen<a: 'static, b: 'static>(_curry_0: P<a>, _curry_1: Box<Fn(a) -> P<b>>) -> P<b> {
    thenP(_curry_0, _curry_1)
}

pub fn happyReturn<a: Clone + 'static>(_curry_0: a) -> P<a> {
    __return(_curry_0)
}

pub fn happyThen1<a0: 'static, b0: 'static>(_curry_0: P<a0>, _curry_1: Box<Fn(a0) -> P<b0>>) -> P<b0> {
    happyThen(_curry_0, _curry_1)
}

pub fn happyReturn1<a: Clone + 'static>(_curry_0: a) -> P<a> {
    happyReturn(_curry_0)
}

// TODO unsure this is correct!
pub fn happyError_q<a: 'static>(tk: CToken) -> P<a> {
    (box |token| { happyError() })(tk)
}

pub fn translation_unit() -> P<CTranslationUnit<NodeInfo>> {

    let happySomeParser = happyThen((happyParse(curry_1_5!(action_0))), (box |x| { match x {
                    HappyAbsSyn7(z) => {
                        happyReturn(z)
                    },
                    _other => {
                        (notHappyAtAll)()
                    },
                } }));

    happySomeParser
}

pub fn external_declaration() -> P<CExtDecl> {

    let happySomeParser = happyThen((happyParse(curry_1_5!(action_1))), (box |x| { match x {
                    HappyAbsSyn9(z) => {
                        happyReturn(z)
                    },
                    _other => {
                        (notHappyAtAll)()
                    },
                } }));

    happySomeParser
}

pub fn statement() -> P<CStat> {

    let happySomeParser = happyThen((happyParse(curry_1_5!(action_2))), (box |x| { match x {
                    HappyAbsSyn12(z) => {
                        happyReturn(z)
                    },
                    _other => {
                        (notHappyAtAll)()
                    },
                } }));

    happySomeParser
}

pub fn expression() -> P<CExpr> {

    let happySomeParser = happyThen((happyParse(curry_1_5!(action_3))), (box |x| { match x {
                    HappyAbsSyn100(z) => {
                        happyReturn(z)
                    },
                    _other => {
                        (notHappyAtAll)()
                    },
                } }));

    happySomeParser
}

pub fn happySeq<a>(_curry_0: HappyAbsSyn, _curry_1: P<a>) -> P<a> {
    happyDontSeq(_curry_0, _curry_1)
}

pub fn reverseList<a>(_curry_0: Vec<a>) -> Reversed<Vec<a>> {
    Reversed(List::reverse(_curry_0))
}

#[derive(Clone)]
pub struct Located<a>(a, Position);

impl<a> Pos for Located<a> {
    fn posOf(self) -> Position {
        self.1 
    }
}


pub fn unL<a>(Located(a, pos): Located<a>) -> a {
    a
}

pub fn withNodeInfo<a: Clone + 'static, node: Pos + Clone + 'static>(node: node, mkAttrNode: Box<Fn(NodeInfo) -> a>) -> P<a> {
    /*do*/ {
        let mkAttrNode = Rc::new(mkAttrNode);
        thenP(getNewName(), box move |name| {
            let node = node.clone();
            let mkAttrNode = mkAttrNode.clone();
            thenP(getSavedToken(), box move |lastTok| {
                let firstPos = posOf(node.clone());

                let attrs = mkNodeInfo_q(firstPos, (posLenOfTok(lastTok)), name.clone());

                __return((mkAttrNode(attrs)))
            })
        })
    }
}

pub fn withLength<a: Clone + 'static>(nodeinfo: NodeInfo, mkAttrNode: Box<Fn(NodeInfo) -> a>) -> P<a> {
    /*do*/ {
        thenP(getSavedToken(), box move |lastTok| {
            let firstPos = posOfNode(nodeinfo.clone());

            let attrs = mkNodeInfo_q(firstPos, (posLenOfTok(lastTok)), nameOfNode(nodeinfo.clone()).unwrap_or_else(|| __error!("nameOfNode".to_string())));

            __return((mkAttrNode(attrs)))
        })
    }
}

#[derive(Clone)]
pub struct CDeclrR(Option<Ident>, Reversed<Vec<CDerivedDeclr>>, Option<CStringLiteral<NodeInfo>>, Vec<CAttribute<NodeInfo>>, NodeInfo);

impl CNode for CDeclrR {
    fn nodeInfo(self) -> NodeInfo {
        self.4
    }
}

impl Pos for CDeclrR {
    fn posOf(self) -> Position {
        posOf(self.4)
    }
}

pub fn reverseDeclr(CDeclrR(ide, reversedDDs, asmname, cattrs, at): CDeclrR) -> CDeclarator<NodeInfo> {
    CDeclarator::<NodeInfo>(ide, (reverse(reversedDDs)), asmname, cattrs, at)
}

pub fn withAttribute<node: Pos + Clone + 'static>(node: node, cattrs: Vec<CAttribute<NodeInfo>>, mkDeclrNode: Box<Fn(NodeInfo) -> CDeclrR>) -> P<CDeclrR> {
    /*do*/ {
        thenP(getNewName(), box move |name| {
            let attrs = mkNodeInfo((posOf(node.clone())), name);

            let newDeclr = appendDeclrAttrs(cattrs.clone(), mkDeclrNode(attrs));

            __return(newDeclr)
        })
    }
}

pub fn withAttributePF<node: Pos + Clone + 'static>(node: node, cattrs: Vec<CAttribute<NodeInfo>>, mkDeclrCtor: Box<Fn(NodeInfo, CDeclrR) -> CDeclrR>) -> P<Rc<Box<Fn(CDeclrR) -> CDeclrR>>> {
            let mkDeclrCtor = Rc::new(mkDeclrCtor);
    /*do*/ {
        thenP(getNewName(), box move |name| {
                let mkDeclrCtor = mkDeclrCtor.clone();
            let attrs = mkNodeInfo((posOf(node.clone())), name);

            let cattrs = cattrs.clone();

            let newDeclr: Box<Fn(CDeclrR) -> CDeclrR> = box move |_0| {
                let mkDeclrCtor = mkDeclrCtor.clone();
                appendDeclrAttrs(cattrs.clone(), mkDeclrCtor(attrs.clone(), _0)) };

            __return(Rc::new(newDeclr))
        })
    }
}

pub fn appendObjAttrs(newAttrs: Vec<CAttribute<NodeInfo>>, CDeclarator(ident, indirections, asmname, cAttrs, at): CDeclarator<NodeInfo>) -> CDeclarator<NodeInfo> {
    CDeclarator::<NodeInfo>(ident, indirections, asmname, (__op_addadd(cAttrs, newAttrs)), at)
}

pub fn appendObjAttrsR(newAttrs: Vec<CAttribute<NodeInfo>>, CDeclrR(ident, indirections, asmname, cAttrs, at): CDeclrR) -> CDeclrR {
    CDeclrR(ident, indirections, asmname, (__op_addadd(cAttrs, newAttrs)), at)
}

pub fn setAsmName(mAsmName: Option<CStringLiteral<NodeInfo>>, CDeclrR(ident, indirections, oldName, cattrs, at): CDeclrR) -> P<CDeclrR> {

    let combineName = |_0, _1| {
        match (_0, _1) {
            (None, None) => {
                Right(None)
            },
            (None, Some(oldname)) => {
                Right(Some(oldname))
            },
            (Some(newname), None) => {
                Right(Some(newname))
            },
            (Some(n1), Some(n2)) => {
                Left((n1, n2))
            },
        }
    };

    let showName = |CStringLiteral(cstr, _)| {
        show(cstr)
    };

    match combineName(mAsmName, oldName) {
        Left((n1, n2)) => {
            failP((posOf(n2.clone())), vec!["Duplicate assembler name: ".to_string(), showName(n1), showName(n2)])
        },
        Right(newName) => {
            __return(CDeclrR(ident, indirections, newName, cattrs, at))
        },
    }
}

pub fn withAsmNameAttrs((mAsmName, newAttrs): (Option<CStringLiteral<NodeInfo>>, Vec<CAttribute<NodeInfo>>), declr: CDeclrR) -> P<CDeclrR> {
    setAsmName(mAsmName, (appendObjAttrsR(newAttrs, declr)))
}

pub fn appendDeclrAttrs(_0: Vec<CAttribute<NodeInfo>>, _1: CDeclrR) -> CDeclrR {
    match (_0, _1) {
        (newAttrs, CDeclrR(ident, Reversed(inner), asmname, cattrs, at)) => {
            let mut inner = inner.clone();
            if inner.len() == 0 {
                CDeclrR(ident, (empty)(), asmname, (__op_addadd(cattrs, newAttrs)), at)
            } else {
                let x = inner.remove(0);
                let xs = inner;
                let appendAttrs = |_0| {
                    match _0 {
                        CPtrDeclr(typeQuals, at) =>
                            CPtrDeclr(__op_addadd(typeQuals, __map!(CAttrQual, newAttrs)), at),
                        CArrDeclr(typeQuals, arraySize, at) =>
                            CArrDeclr(__op_addadd(typeQuals, __map!(CAttrQual, newAttrs)), arraySize, at),
                        CFunDeclr(parameters, cattrs, at) =>
                            CFunDeclr(parameters, __op_addadd(cattrs, newAttrs), at),
                    }
                };
                
                CDeclrR(ident, (Reversed((__op_concat(appendAttrs(x), xs)))), asmname, cattrs, at)
            }
        },
    }
}

pub fn ptrDeclr(CDeclrR(ident, derivedDeclrs, asmname, cattrs, dat): CDeclrR, tyquals: Vec<CTypeQual>, at: NodeInfo) -> CDeclrR {
    CDeclrR(ident, (snoc(derivedDeclrs, CPtrDeclr(tyquals, at))), asmname, cattrs, dat)
}

pub fn funDeclr(CDeclrR(ident, derivedDeclrs, asmname, dcattrs, dat): CDeclrR, params: Either<Vec<Ident>, (Vec<CDecl>, bool)>, cattrs: Vec<CAttribute<NodeInfo>>, at: NodeInfo) -> CDeclrR {
    CDeclrR(ident, (snoc(derivedDeclrs, CFunDeclr(params, cattrs, at))), asmname, dcattrs, dat)
}

pub fn arrDeclr(CDeclrR(ident, derivedDeclrs, asmname, cattrs, dat): CDeclrR, tyquals: Vec<CTypeQual>, var_sized: bool, static_size: bool, size_expr_opt: Option<CExpr>, at: NodeInfo) -> CDeclrR {

    let arr_sz = match size_expr_opt {
            Some(e) => {
                CArrSize(static_size, e)
            },
            None => {
                CNoArrSize(var_sized)
            },
        };

    CDeclrR(ident, (snoc(derivedDeclrs, CArrDeclr(tyquals, arr_sz, at))), asmname, cattrs, dat)
}

pub fn liftTypeQuals(_curry_0: Reversed<Vec<CTypeQual>>) -> Vec<CDeclSpec> {
    __map!(CTypeQual, reverse(_curry_0))
}

pub fn liftCAttrs(_curry_0: Vec<CAttribute<NodeInfo>>) -> Vec<CDeclSpec> {
    __map!(|_0| CTypeQual(CAttrQual(_0)), _curry_0)
}

pub fn addTrailingAttrs(declspecs: Reversed<Vec<CDeclSpec>>, new_attrs: Vec<CAttribute<NodeInfo>>) -> Reversed<Vec<CDeclSpec>> {
    match viewr(declspecs.clone()) {
        (specs_init, CTypeSpec(CSUType(CStructureUnion(tag, name, Some(def), def_attrs, su_node), node))) => {
            (snoc(specs_init, CTypeSpec((CSUType((CStructureUnion::<NodeInfo>(tag, name, (Some(def)), (__op_addadd(def_attrs, new_attrs)), su_node)), node)))))
        },
        (specs_init, CTypeSpec(CEnumType(CEnumeration(name, Some(def), def_attrs, e_node), node))) => {
            (snoc(specs_init, CTypeSpec((CEnumType((CEnumeration::<NodeInfo>(name, (Some(def)), (__op_addadd(def_attrs, new_attrs)), e_node)), node)))))
        },
        _ => {
            rappend(declspecs, (liftCAttrs(new_attrs)))
        },
    }
}

// convenient instance, the position of a list of things is the position of
// the first thing in the list

impl<A: Pos> Pos for Vec<A> {
    fn posOf(mut self) -> Position {
        let item = self.remove(0);
        posOf(item)
    }
}

impl<A: Pos> Pos for Reversed<A> {
    fn posOf(self) -> Position {
        posOf(self.0)
    }
}

pub fn emptyDeclr() -> CDeclrR {
    CDeclrR(None, (empty)(), None, vec![], undefNode())
}

pub fn mkVarDeclr(ident: Ident, _curry_1: NodeInfo) -> CDeclrR {
    CDeclrR((Some(ident)), (empty)(), None, vec![], _curry_1)
}

pub fn doDeclIdent(declspecs: Vec<CDeclSpec>, CDeclrR(mIdent, _, _, _, _): CDeclrR) -> P<()> {

    let iypedef = |_0| {
        match (_0) {
            CStorageSpec(CTypedef(_)) => {
                true
            },
            _ => {
                false
            },
        }
    };

    match mIdent {
        None => {
            __return(())
        },
        Some(ident) => {
            if any(iypedef, declspecs) { addTypedef(ident) }
            else { shadowTypedef(ident) }
        },
    }
}

pub fn doFuncParamDeclIdent(_0: CDeclarator<NodeInfo>) -> P<()> {
    match (_0) {
        CDeclarator(_, ref arg, _, _, _)
            if arg.len() == 2 && matches!(arg[0].clone(), CFunDeclr(params, _, _)) => {
                let params = if let CFunDeclr(params, _, _) = arg[0].clone() { params } else { unreachable!() };
            //TODO
            let arg = arg.clone();
            unreachable!();
            // params.map(|x| fst(x)).unwrap_or(vec![])
                // .flat_map(|CDecl(_, dle, _)| dle)
                // .flat_map(|(declr, _, _)| declr.map(|x| vec![x]).unwrap_or(vec![]))
                // .map(|declr| {
                //     match getCDeclrIdent(declr) {
                //         None => P()
                //         Some(ident) => shadowTypedef(ident)
                //     }
                // })
            // TODO thread P through this
        },
        _ => {
            __return(())
        },
    }
}

pub fn getCDeclrIdent(CDeclarator(mIdent, _, _, _, _): CDeclarator<NodeInfo>) -> Option<Ident> {
    mIdent
}

pub fn happyError<a: 'static>() -> P<a> {
    parseError()
}

pub fn parseC(input: InputStream, initialPosition: Position) -> Either<ParseError, CTranslationUnit<NodeInfo>> {
    execParser(translUnitP(), input, initialPosition, builtinTypeNames(), (namesStartingFrom(0)))
        .map(|x| x.0)
}

pub fn translUnitP() -> P<CTranslationUnit<NodeInfo>> {
    translation_unit()
}

pub fn extDeclP() -> P<CExtDecl> {
    external_declaration()
}

pub fn statementP() -> P<CStat> {
    statement()
}

pub fn expressionP() -> P<CExpr> {
    expression()
}

#[derive(Clone)]
pub struct HappyStk<a>(a, Option<Box<HappyStk<a>>>);


pub fn happyParse(start_state: Box<Fn(isize, isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>) -> P<HappyAbsSyn> {
    // TODO this is lazy failure
    happyNewToken(start_state, vec![], HappyStk(HappyAbsSyn::HappyErrorToken(0), None))
}

pub fn happyAccept(_0: isize, _1: CToken, _2: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, _3: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, _4: HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn> {
    match (_0, _1, _2, _3, _4) {
        (1, tk, st, sts, HappyStk(_, Some(box HappyStk(ans, _)))) => {
            happyReturn1(ans)
        },
        (j, tk, st, sts, HappyStk(ans, _)) => {
            (happyReturn1(ans))
        },
    }
}

pub struct HappyState<b, c>(Rc<Box<Fn(isize, isize, b, HappyState<b, c>, Vec<HappyState<b, c>>) -> c>>);

impl<b, c> Clone for HappyState<b, c> {
    fn clone(&self) -> Self {
        HappyState(self.0.clone())
    }
}

pub fn happyShift(_0: Box<Fn(isize, isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>, _1: isize, _2: CToken, _3: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, _4: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, _5: HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn> {
    match (_0, _1, _2, _3, _4, _5) {
        (new_state, 1, tk, st, sts, stk) => {
            {
                let HappyStk(x, _) = stk.clone();
                let i = (match x {
                        HappyErrorToken(i) => {
                            i
                        },
                        _ => unreachable!(),
                    });

            let new_state = Rc::new(new_state);
            let new_state_ = new_state.clone();
            new_state(i, i, tk, (HappyState(Rc::new(apply_5_1_clone!(new_state_)))), (__op_concat(st, sts)), stk)            }
        },
        (new_state, i, tk, st, sts, stk) => {
            happyNewToken(new_state, (__op_concat(st, sts)), (HappyStk((HappyTerminal(tk)), Some(box stk))))
        },
    }
}

pub fn happySpecReduce_0(_0: isize, _1: HappyAbsSyn, _2: isize, _3: CToken, _4: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, _5: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, _6: HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn> {
    match (_0, _1, _2, _3, _4, _5, _6) {
        (i, __fn, 1, tk, st, sts, stk) => {
            happyFail( (1), tk, st, sts, stk)
        },
        (nt, __fn, j, tk, st, sts, stk) => {
            let HappyState(action) = st.clone();
            action(nt, j, tk, st.clone(), (__op_concat(st, sts)))((HappyStk(__fn, Some(box stk))))
        },
    }
}

pub fn happySpecReduce_1(_0: isize, _1: Box<Fn(HappyAbsSyn) -> HappyAbsSyn>, _2: isize, _3: CToken, _4: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, _5: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, _6: HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn> {
    match (_0, _1, _2, _3, _4, _5, _6) {
        (i, __fn, 1, tk, st, sts, stk) => {
            happyFail((1), tk, st, sts, stk)
        },
        (nt, __fn, j, tk, _, sts, HappyStk(v1, stk_q)) => {
            {
                // TODO assert len > 0?
                let st = sts.clone().remove(0);
                let HappyState(action) = st.clone();
                let r = __fn(v1);

            happySeq(r.clone(), (action(nt, j, tk, st, sts)((HappyStk(r, stk_q)))))            }
        },
    }
}

pub fn happySpecReduce_2(_0: isize, _1: Box<Fn(HappyAbsSyn, HappyAbsSyn) -> HappyAbsSyn>, _2: isize, _3: CToken, _4: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, _5: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, _6: HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn> {
    match (_0, _1, _2, _3, _4, _5, _6) {
        (i, __fn, 1, tk, st, sts, stk) => {
            happyFail( (1), tk, st, sts, stk)
        },
        (nt, __fn, j, tk, _, mut sts, HappyStk(v1, Some(box HappyStk(v2, Some(box stk_q))))) => {
            {
                sts.remove(0);
                let st = sts.clone().remove(0);
                let HappyState(action) = st.clone();

                let r = __fn(v1, v2);

            happySeq(r.clone(), (action(nt, j, tk, st, sts)((HappyStk(r, Some(box stk_q))))))            }
        },
        _ => {
            panic!("IRREFUTABLE PATTERN")
        }
    }
}

pub fn happySpecReduce_3(_0: isize, _1: Box<Fn(HappyAbsSyn, HappyAbsSyn, HappyAbsSyn) -> HappyAbsSyn>, _2: isize, _3: CToken, _4: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, _5: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, _6: HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn> {
    match (_0, _1, _2, _3, _4, _5, _6) {
        (i, __fn, 1, tk, st, sts, stk) => {
            happyFail( (1), tk, st, sts, stk)
        },
        (nt, __fn, j, tk, _, mut stses, HappyStk(v1, Some(box HappyStk(v2, Some(box HappyStk(v3, stk_q)))))) => {
            {
                stses.remove(0);
                stses.remove(0);
                let sts = stses.clone();
                let st = stses.clone().remove(0);
                let HappyState(action) = st.clone();

                let r = __fn(v1, v2, v3);

            happySeq(r.clone(), (action(nt, j, tk, st, sts)(HappyStk(r, stk_q))))            }
        },
        _ => {
            panic!("IRREFUTABLE PATTERN");
        }
    }
}

pub fn happyReduce<a00: 'static>(_0: isize, _1: isize, _2: Box<Fn(HappyStk<HappyAbsSyn>) -> HappyStk<HappyAbsSyn>>, _3: isize, _4: CToken, _5: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<a00>>>, _6: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<a00>>>>, _7: HappyStk<HappyAbsSyn>) -> P<a00> {
    match (_0, _1, _2, _3, _4, _5, _6, _7) {
        (k, i, __fn, 1, tk, st, sts, stk) => {
            happyFail( (1), tk, st, sts, stk)
        },
        (k, nt, __fn, j, tk, st, sts, stk) => {
            match happyDrop(((k - ((1)))), sts) {
                sts1 => {
                    {
                        let st1 = sts1.clone().remove(0);
                        let HappyState(action) = st1.clone();
                        
                        // it doesn't hurt to always seq here...
                        let r = __fn(stk);

                    happyDoSeq(r.clone(), (action(nt, j, tk, st1, sts1)(r)))                    }
                },
            }
        },
    }
}

pub fn happyMonadReduce<b00: 'static>(_0: isize, _1: isize, _2: Box<Fn(HappyStk<HappyAbsSyn>, CToken) -> P<HappyAbsSyn>>, _3: isize, _4: CToken, _5: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<b00>>>, _6: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<b00>>>>, _7: HappyStk<HappyAbsSyn>) -> P<b00> {
    match (_0, _1, _2, _3, _4, _5, _6, _7) {
        (k, nt, __fn, 1, tk, st, sts, stk) => {
            happyFail((1), tk, st, sts, stk)
        },
        (k, nt, __fn, j, tk, st, sts, stk) => {
            match happyDrop(k, (__op_concat(st, sts))) {
                sts1 => {
                    {
                        let st1 = sts1.clone().remove(0);
                        let HappyState(action) = st1.clone();

                        let drop_stk = happyDropStk(k, stk.clone());

                    happyThen1((__fn(stk.clone(), tk.clone())), (box move |r| { clones!(sts1, drop_stk, st1, tk);
                        action(nt, j, tk, st1, sts1)((HappyStk(r, Some(box drop_stk)))) }))                    }
                },
            }
        },
    }
}

pub fn happyMonad2Reduce<b00: 'static, t0>(_0: isize, _1: t0, _2: Box<Fn(HappyStk<HappyAbsSyn>, CToken) -> P<HappyAbsSyn>>, _3: isize, _4: CToken, _5: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<b00>>>, _6: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<b00>>>>, _7: HappyStk<HappyAbsSyn>) -> P<b00> {
    match (_0, _1, _2, _3, _4, _5, _6, _7) {
        (k, nt, __fn, 1, tk, st, sts, stk) => {
            happyFail( (1), tk, st, sts, stk)
        },
        (k, nt, __fn, j, tk, st, sts, stk) => {
            match happyDrop(k, (__op_concat(st, sts))) {
                mut sts1 => { {
                        let st1 = sts1.clone().remove(0);
                        let HappyState(action) = st1.clone();

                        let drop_stk = happyDropStk(k, stk.clone());

                        let new_state = action;

                    happyThen1(__fn(stk, tk),
                        box move |r| { clones!(drop_stk, sts1, new_state);
                            happyNewToken(curry_5_1!(new_state), sts1, (HappyStk(r, Some(box drop_stk))))
                        }
                    ) }
                },
            }
        },
    }
}

pub fn happyDrop<t0>(_0: isize, _1: Vec<t0>) -> Vec<t0> {
    match (_0, _1) {
        (0, l) => {
            l
        },
        (n, mut t) => {
            t.remove(0); // TODO this can panic, how does Haskell do this
            happyDrop(((n - ((1)))), t)
        },
    }
}

pub fn happyDropStk<t0>(_0: isize, _1: HappyStk<t0>) -> HappyStk<t0> {
    match (_0, _1) {
        (0, l) => {
            l
        },
        (n, HappyStk(x, Some(box xs))) => {
            happyDropStk(((n - ((1)))), xs)
        },
        _ => {
            panic!("REFUTABLE PATTERN");
        }
    }
}


pub fn happyGoto(action: Box<Fn(isize, isize, CToken, HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>, j: isize, tk: CToken, st: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>, _curry_4: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn>>>>, _curry_5: HappyStk<HappyAbsSyn>) -> P<HappyAbsSyn> {
    let action = Rc::new(action);
    let action_ = action.clone();
    action(j, j, tk, (HappyState(Rc::new(apply_5_1_clone!(action_)))), _curry_4, _curry_5)
}

pub fn happyFail<a0: 'static>(_0: isize, _1: CToken, _2: HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<a0>>>, _3: Vec<HappyState<CToken, Box<Fn(HappyStk<HappyAbsSyn>) -> P<a0>>>>, _4: HappyStk<HappyAbsSyn>) -> P<a0> {
    match (_0, _1, _2, _3, _4) {
        (1, tk, old_st, _, HappyStk(x, Some(_))) => {
            {
                let i = (match x {
                        HappyErrorToken(i) => {
                            i
                        },
                        _ => unreachable!(),
                    });

            happyError_(i, tk)            }
        },
        (i, tk, HappyState(action), sts, stk) => {
            action((1), (1), tk, (HappyState(action.clone())), sts)((HappyStk((HappyErrorToken(i)), Some(box stk))))
        },
    }
}

pub fn notHappyAtAll<a: 'static>() -> a {
    __error!("Internal Happy error\n".to_string())
}

pub fn happyDoSeq<a, b>(a: a, b: b) -> b {
    seq(a, b)
}

pub fn happyDontSeq<a, b>(a: a, b: b) -> b {
    b
}



/* RUST ... /RUST */


use data::input_stream::*;
use data::position::*;
use parser::parser_monad::*;
use syntax::ast::*;
use syntax::constants::*;
use parser::tokens::*;
use data::r_list::RList::*;
use data::r_list::Reversed;
use data::node::*;
use data::r_list::snoc;
use data::ident::*;
use syntax::ops::*;
use parser::lexer::{lexC, parseError};
use parser::builtin::builtinTypeNames;
use data::name::namesStartingFrom;



